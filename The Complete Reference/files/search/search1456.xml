task.invoke();:@0.117647:0.105462:0.275669:0.105462:0.275669:0.093811:0.117647:0.093811:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
As this discussion shows, the common pool can be easier to use than creating:@0.117647:0.145745:0.845386:0.145745:0.845386:0.129218:0.117647:0.129218:0.016985:0.009154:0.005882:0.006526:0.011765:0.006526:0.009154:0.005882:0.011765:0.006526:0.009154:0.010441:0.011765:0.009154:0.009154:0.006526:0.011765:0.011765:0.005882:0.009154:0.011765:0.011765:0.016985:0.009154:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.018291:0.018291:0.011765:0.011765:0.005882:0.011765:0.011765:0.011765:0.006526:0.005882:0.010441:0.010441:0.011765:0.005882:0.011765:0.010441:0.005882:0.010441:0.010441:0.009154:0.006526:0.010441:0.007831:0.005882:0.006526:0.011765:0.005882:0.011765:0.009154:0.010441:0.005882:0.006526:0.011765:0.010441:0.011765:0.005882:0.010441:0.007831:0.010441:0.010441:0.006526:0.006526:0.011765:0.011765
your own pool. Furthermore, in many cases, the common pool is the preferable:@0.117647:0.166655:0.861679:0.166655:0.861679:0.150127:0.117647:0.150127:0.011765:0.011765:0.011765:0.007831:0.005882:0.011765:0.016985:0.011765:0.005882:0.011765:0.011765:0.011765:0.006526:0.005882:0.005882:0.013070:0.011765:0.007831:0.006526:0.011765:0.010441:0.007831:0.018291:0.011765:0.007831:0.010441:0.005882:0.005882:0.006526:0.011765:0.005882:0.018291:0.010441:0.011765:0.011765:0.005882:0.010441:0.010441:0.009154:0.010441:0.009154:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.018291:0.018291:0.011765:0.011765:0.005882:0.011765:0.011765:0.011765:0.006526:0.005882:0.006526:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.007831:0.010441:0.007831:0.010441:0.007831:0.010441:0.011765:0.006526:0.010447
approach.:@0.117647:0.187564:0.209743:0.187564:0.209743:0.171036:0.117647:0.171036:0.010441:0.011765:0.011765:0.007831:0.011765:0.010441:0.010441:0.011765:0.005882
Understanding the Impact of the Level of Parallelism:@0.117647:0.242771:0.864775:0.242771:0.864775:0.220040:0.117647:0.220040:0.023787:0.018309:0.018309:0.014614:0.014614:0.012812:0.010956:0.016471:0.018309:0.018309:0.009136:0.018309:0.016471:0.008235:0.010956:0.018309:0.014614:0.008235:0.012812:0.027426:0.018309:0.016471:0.014614:0.010956:0.008235:0.016471:0.010956:0.008235:0.010956:0.018309:0.014614:0.008235:0.021967:0.014614:0.016471:0.014614:0.009136:0.008235:0.016471:0.010956:0.008235:0.020110:0.016471:0.014614:0.016471:0.009136:0.009136:0.014614:0.009136:0.009136:0.012812:0.027440
Before moving on, it is important to understand the impact that the level of:@0.117647:0.272109:0.823074:0.272109:0.823074:0.255582:0.117647:0.255582:0.015680:0.010441:0.007831:0.011765:0.007831:0.010441:0.005882:0.018291:0.011765:0.011765:0.006526:0.011765:0.011765:0.005882:0.011765:0.011765:0.005882:0.005882:0.006526:0.006526:0.005882:0.006526:0.009154:0.005882:0.006526:0.018291:0.011765:0.011765:0.007831:0.006526:0.010441:0.011765:0.006526:0.005882:0.006526:0.011765:0.005882:0.011765:0.011765:0.011765:0.010441:0.007831:0.009154:0.006526:0.010441:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.018291:0.011765:0.010441:0.010441:0.006526:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.010441:0.011765:0.010441:0.006526:0.005882:0.011765:0.007835
parallelism has on the performance of a fork/join task and how the parallelism:@0.117647:0.293018:0.853085:0.293018:0.853085:0.276491:0.117647:0.276491:0.011765:0.010441:0.007831:0.010441:0.006526:0.006526:0.010441:0.006526:0.006526:0.009154:0.018291:0.005882:0.011765:0.010441:0.009154:0.005882:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.010441:0.007831:0.007831:0.011765:0.007831:0.018291:0.010441:0.011765:0.010441:0.010441:0.005882:0.011765:0.007831:0.005882:0.010441:0.005882:0.007831:0.011765:0.007831:0.011765:0.006526:0.006526:0.011765:0.006526:0.011765:0.005882:0.006526:0.010441:0.009154:0.011765:0.005882:0.010441:0.011765:0.011765:0.005882:0.011765:0.011765:0.016985:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.010441:0.007831:0.010441:0.006526:0.006526:0.010441:0.006526:0.006526:0.009154:0.018306
and the threshold interact. The program shown in this section lets you:@0.117647:0.313927:0.773474:0.313927:0.773474:0.297400:0.117647:0.297400:0.010441:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.011765:0.007831:0.010441:0.009154:0.011765:0.011765:0.006526:0.011765:0.005882:0.006526:0.011765:0.006526:0.010441:0.007831:0.010441:0.010441:0.006526:0.005882:0.005882:0.014357:0.011765:0.010441:0.005882:0.011765:0.007831:0.011765:0.011765:0.007831:0.010441:0.018291:0.005882:0.009154:0.011765:0.011765:0.016985:0.011765:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.006526:0.009154:0.005882:0.009154:0.010441:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.006526:0.010441:0.006526:0.009154:0.005882:0.011765:0.011765:0.011765
experiment with different degrees of parallelism and threshold values. Assuming:@0.117647:0.334836:0.877500:0.334836:0.877500:0.318309:0.117647:0.318309:0.010441:0.011765:0.011765:0.010441:0.007831:0.006526:0.018291:0.010441:0.011765:0.006526:0.005882:0.016985:0.006526:0.006526:0.011765:0.005882:0.011765:0.006526:0.007408:0.007831:0.010441:0.007831:0.010441:0.011765:0.006526:0.005882:0.011765:0.010441:0.011765:0.007831:0.010441:0.010441:0.009154:0.005882:0.011765:0.007831:0.005882:0.011765:0.010441:0.007831:0.010441:0.006526:0.006526:0.010441:0.006526:0.006526:0.009154:0.018291:0.005882:0.010441:0.011765:0.011765:0.005882:0.006526:0.011765:0.007831:0.010441:0.009154:0.011765:0.011765:0.006526:0.011765:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.009154:0.005882:0.005882:0.016985:0.009154:0.009154:0.011765:0.018291:0.006526:0.011765:0.011765
that you are using a multicore computer, you can interactively observe the effect:@0.117647:0.355745:0.873251:0.355745:0.873251:0.339218:0.117647:0.339218:0.006526:0.011765:0.010441:0.006526:0.005882:0.011765:0.011765:0.011765:0.005882:0.010441:0.007831:0.010441:0.005882:0.011765:0.009154:0.006526:0.011765:0.011765:0.005882:0.010441:0.005882:0.018291:0.011765:0.006526:0.006526:0.006526:0.010441:0.011765:0.007831:0.010441:0.005882:0.010441:0.011765:0.018291:0.011765:0.011765:0.006526:0.010441:0.006893:0.005882:0.005882:0.011765:0.011765:0.011765:0.005882:0.010441:0.010441:0.011765:0.005882:0.006526:0.011765:0.006526:0.010441:0.007831:0.010441:0.010441:0.006526:0.006526:0.011765:0.010441:0.006526:0.011765:0.005882:0.011765:0.011765:0.009154:0.010441:0.007831:0.011765:0.010441:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.007408:0.007831:0.010441:0.010441:0.006541
of these values.:@0.117647:0.376655:0.263309:0.376655:0.263309:0.360127:0.117647:0.360127:0.011765:0.007831:0.005882:0.006526:0.011765:0.010441:0.009154:0.010441:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.009154:0.005882
In the preceding example, the default level of parallelism was used. However,:@0.145882:0.399382:0.877739:0.399382:0.877739:0.382855:0.145882:0.382855:0.007831:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.007831:0.010441:0.010441:0.010441:0.011765:0.006526:0.011765:0.011765:0.005882:0.010441:0.011765:0.010441:0.018291:0.011765:0.006526:0.010441:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.010441:0.007831:0.010441:0.011765:0.006526:0.006526:0.005882:0.006526:0.010441:0.011765:0.010441:0.006526:0.005882:0.011765:0.007831:0.005882:0.011765:0.010441:0.007831:0.010441:0.006526:0.006526:0.010441:0.006526:0.006526:0.009154:0.018291:0.005882:0.016985:0.010441:0.009154:0.005882:0.011765:0.009154:0.010441:0.011765:0.005882:0.005882:0.016985:0.011765:0.016985:0.010441:0.011765:0.010441:0.006893:0.005882
you can specify the level of parallelism that you want. One way is to specify it:@0.117647:0.420291:0.855732:0.420291:0.855732:0.403764:0.117647:0.403764:0.011765:0.011765:0.011765:0.005882:0.010441:0.010441:0.011765:0.005882:0.009154:0.011765:0.010441:0.010441:0.006526:0.007831:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.010441:0.011765:0.010441:0.006526:0.005882:0.011765:0.007831:0.005882:0.011765:0.010441:0.007831:0.010441:0.006526:0.006526:0.010441:0.006526:0.006526:0.009154:0.018291:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.011765:0.011765:0.011765:0.005882:0.016985:0.010441:0.011765:0.006526:0.005882:0.005882:0.016985:0.011765:0.010441:0.005882:0.016985:0.010441:0.011765:0.005882:0.006526:0.009154:0.005882:0.006526:0.011765:0.005882:0.009154:0.011765:0.010441:0.010441:0.006526:0.007831:0.011765:0.005882:0.006526:0.006541
when you create a :@0.117647:0.441200:0.293989:0.441200:0.293989:0.424673:0.117647:0.424673:0.016985:0.011765:0.010441:0.011765:0.005882:0.011765:0.011765:0.011765:0.005882:0.010441:0.007831:0.010441:0.010441:0.006526:0.010441:0.005882:0.010441:0.005882
ForkJoinPool:@0.293988:0.441200:0.431173:0.441200:0.431173:0.424964:0.293988:0.424964:0.014357:0.011765:0.010441:0.013070:0.011765:0.011765:0.006526:0.013070:0.014357:0.011765:0.011765:0.006541
 using this constructor::@0.431153:0.441200:0.646095:0.441200:0.646095:0.424673:0.431153:0.424673:0.005882:0.011765:0.009154:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.006526:0.009154:0.005882:0.010441:0.011765:0.011765:0.009154:0.006526:0.007831:0.011765:0.010441:0.006526:0.011765:0.007831:0.006541
ForkJoinPool(int :@0.145882:0.480291:0.311176:0.480291:0.311176:0.463764:0.145882:0.463764:0.013070:0.011765:0.007831:0.011765:0.009154:0.011765:0.006526:0.011765:0.013070:0.011765:0.011765:0.006526:0.007831:0.006526:0.011765:0.006526:0.005882
pLevel:@0.311176:0.480291:0.373876:0.480291:0.373876:0.463745:0.311176:0.463745:0.011765:0.013070:0.010441:0.010441:0.010441:0.006541
):@0.373859:0.480291:0.381694:0.480291:0.381694:0.463764:0.373859:0.463764:0.007835
Here, :@0.117647:0.519382:0.175110:0.519382:0.175110:0.502855:0.117647:0.502855:0.016985:0.010441:0.007831:0.010441:0.005882:0.005882
pLevel:@0.175106:0.519382:0.237805:0.519382:0.237805:0.502836:0.175106:0.502836:0.011765:0.013070:0.010441:0.010441:0.010441:0.006541
 specifies the level of parallelism, which must be greater than zero:@0.237788:0.519382:0.860821:0.519382:0.860821:0.502855:0.237788:0.502855:0.005882:0.009154:0.011765:0.010441:0.010441:0.006526:0.007831:0.006526:0.010441:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.010441:0.011765:0.010441:0.006526:0.005882:0.011765:0.007831:0.005882:0.011765:0.010441:0.007831:0.010441:0.006526:0.006526:0.010441:0.006526:0.006526:0.009154:0.018291:0.005882:0.005882:0.016985:0.011765:0.006526:0.010441:0.011765:0.005882:0.018291:0.011765:0.009154:0.006526:0.005882:0.011765:0.010441:0.005882:0.011765:0.007831:0.010441:0.010441:0.006526:0.010441:0.007831:0.005882:0.006526:0.011765:0.010441:0.011765:0.005882:0.010441:0.010441:0.007831:0.011765
and less than the implementation defined limit.:@0.117647:0.540291:0.559816:0.540291:0.559816:0.523764:0.117647:0.523764:0.010441:0.011765:0.011765:0.005882:0.006526:0.010441:0.009154:0.009154:0.005882:0.006526:0.011765:0.010441:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.018291:0.011765:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.011765:0.010441:0.007831:0.006526:0.011765:0.010441:0.011765:0.005882:0.006526:0.006526:0.018291:0.006526:0.006526:0.005882
The following program creates a fork/join task that transforms an array of:@0.145882:0.563018:0.840151:0.563018:0.840151:0.546491:0.145882:0.546491:0.014357:0.011765:0.010441:0.005882:0.007831:0.011765:0.006526:0.006526:0.011765:0.016985:0.006526:0.011765:0.011765:0.005882:0.011765:0.007831:0.011765:0.011765:0.007831:0.010441:0.018291:0.005882:0.010441:0.007831:0.010441:0.010441:0.006526:0.010441:0.009154:0.005882:0.010441:0.005882:0.007831:0.011765:0.007831:0.011765:0.006526:0.006526:0.011765:0.006526:0.011765:0.005882:0.006526:0.010441:0.009154:0.011765:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.006526:0.007831:0.010441:0.011765:0.009154:0.007831:0.011765:0.007831:0.018291:0.009154:0.005882:0.010441:0.011765:0.005882:0.010441:0.007831:0.007831:0.010441:0.011765:0.005882:0.011765:0.007835
double:@0.117647:0.583927:0.185594:0.583927:0.185594:0.567691:0.117647:0.567691:0.013070:0.011765:0.013070:0.013070:0.006526:0.010447
s. The transformation is arbitrary, but it is designed to consume several:@0.185588:0.583927:0.852276:0.583927:0.852276:0.567400:0.185588:0.567400:0.009154:0.005882:0.005882:0.014357:0.011765:0.010441:0.005882:0.006526:0.007831:0.010441:0.011765:0.009154:0.007831:0.011765:0.007831:0.018291:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.006526:0.009154:0.005882:0.010441:0.007831:0.011765:0.006526:0.006526:0.007831:0.010441:0.007831:0.010239:0.005882:0.005882:0.011765:0.011765:0.006526:0.005882:0.006526:0.006526:0.005882:0.006526:0.009154:0.005882:0.011765:0.010441:0.009154:0.006526:0.011765:0.011765:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882:0.010441:0.011765:0.011765:0.009154:0.011765:0.018291:0.010441:0.005882:0.009154:0.010441:0.011765:0.010441:0.007831:0.010441:0.006541
CPU cycles. This was done to ensure that the effects of changing the threshold or:@0.117647:0.604836:0.882121:0.604836:0.882121:0.588309:0.117647:0.588309:0.015680:0.013070:0.016985:0.005882:0.010441:0.011765:0.010441:0.006526:0.010441:0.009154:0.005882:0.005882:0.014357:0.011765:0.006526:0.009154:0.005882:0.016985:0.010441:0.009154:0.005882:0.011765:0.011765:0.011765:0.010441:0.005885:0.006526:0.011765:0.005882:0.010441:0.011765:0.009154:0.011765:0.007831:0.010441:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.007408:0.007831:0.010441:0.010441:0.006526:0.009154:0.005882:0.011765:0.007831:0.005882:0.010441:0.011765:0.010441:0.011765:0.011765:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.011765:0.007831:0.010441:0.009154:0.011765:0.011765:0.006526:0.011765:0.005882:0.011765:0.007835
the level of parallelism would be more clearly displayed. To use the program,:@0.117647:0.625745:0.846213:0.625745:0.846213:0.609218:0.117647:0.609218:0.006526:0.011765:0.010441:0.005882:0.006526:0.010441:0.011765:0.010441:0.006526:0.005882:0.011765:0.007831:0.005882:0.011765:0.010441:0.007831:0.010441:0.006526:0.006526:0.010441:0.006526:0.006526:0.009154:0.018291:0.005882:0.016985:0.011765:0.011765:0.006526:0.011765:0.005882:0.011765:0.010441:0.005882:0.018291:0.011765:0.007831:0.010441:0.005882:0.010441:0.006526:0.010441:0.010441:0.007831:0.006526:0.011765:0.005882:0.011765:0.006526:0.009154:0.011765:0.006526:0.010441:0.011765:0.010441:0.011765:0.005882:0.005882:0.012721:0.011765:0.005882:0.011765:0.009154:0.010441:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.007831:0.011765:0.011765:0.007831:0.010441:0.018291:0.005882
specify the threshold value and the level of parallelism on the command line.:@0.117647:0.646655:0.841985:0.646655:0.841985:0.630127:0.117647:0.630127:0.009154:0.011765:0.010441:0.010441:0.006526:0.007831:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.011765:0.007831:0.010441:0.009154:0.011765:0.011765:0.006526:0.011765:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.010441:0.011765:0.010441:0.006526:0.005882:0.011765:0.007831:0.005882:0.011765:0.010441:0.007831:0.010441:0.006526:0.006526:0.010441:0.006526:0.006526:0.009154:0.018291:0.005882:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.018291:0.018291:0.010441:0.011765:0.011765:0.005882:0.006526:0.006526:0.011765:0.010441:0.005882
The program then runs the tasks. It also displays the amount of time it takes the:@0.117647:0.667564:0.864914:0.667564:0.864914:0.651036:0.117647:0.651036:0.014357:0.011765:0.010441:0.005882:0.011765:0.007831:0.011765:0.011765:0.007831:0.010441:0.018291:0.005882:0.006526:0.011765:0.010441:0.011765:0.005882:0.007831:0.011765:0.011765:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.010441:0.009154:0.011765:0.009154:0.005882:0.005882:0.007831:0.006526:0.005882:0.010441:0.006526:0.009154:0.011765:0.005882:0.011765:0.006526:0.009154:0.011765:0.006526:0.010441:0.011765:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.018291:0.011765:0.011765:0.011765:0.006526:0.005882:0.011765:0.007831:0.005882:0.006526:0.006526:0.018291:0.010441:0.005882:0.006526:0.006526:0.005882:0.006526:0.010441:0.011765:0.010441:0.009154:0.005882:0.006526:0.011765:0.010447
tasks to run. To do this, it uses :@0.117647:0.688473:0.408713:0.688473:0.408713:0.671945:0.117647:0.671945:0.006526:0.010441:0.009154:0.011765:0.009154:0.005882:0.006526:0.011765:0.005882:0.007831:0.011765:0.011765:0.005882:0.005882:0.012721:0.011765:0.005882:0.011765:0.011765:0.005882:0.006526:0.011765:0.006526:0.009154:0.005882:0.005882:0.006526:0.006526:0.005882:0.011765:0.009154:0.010441:0.009154:0.005882
System.nanoTime( ):@0.408718:0.688473:0.609494:0.688473:0.609494:0.672236:0.408718:0.672236:0.013070:0.011765:0.009154:0.007831:0.010441:0.019596:0.005882:0.013070:0.011765:0.013070:0.011765:0.015257:0.006526:0.019596:0.010441:0.007831:0.005882:0.007835
, which returns the value of:@0.609482:0.688473:0.866840:0.688473:0.866840:0.671945:0.609482:0.671945:0.005882:0.005882:0.016985:0.011765:0.006526:0.010441:0.011765:0.005882:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.011765:0.007835
the JVM’s high-resolution timer.:@0.117647:0.709382:0.424669:0.709382:0.424669:0.692855:0.117647:0.692855:0.006526:0.011765:0.010441:0.005882:0.009154:0.016985:0.020919:0.006526:0.009154:0.005882:0.011765:0.006526:0.011765:0.011765:0.007831:0.007831:0.010441:0.009154:0.011765:0.006526:0.011765:0.006526:0.006526:0.011765:0.011765:0.005882:0.006526:0.006526:0.018291:0.010441:0.006526:0.005882