subTaskB.fork();:@0.117647:0.105462:0.298243:0.105462:0.298243:0.093811:0.117647:0.093811:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
In this case, :@0.117647:0.145745:0.235221:0.145745:0.235221:0.129218:0.117647:0.129218:0.007831:0.011765:0.005882:0.006526:0.011765:0.006526:0.009154:0.005882:0.010441:0.010441:0.009154:0.010441:0.005882:0.005882
fork( ):@0.235224:0.145745:0.299879:0.145745:0.299879:0.129509:0.235224:0.129509:0.007831:0.011765:0.010441:0.013070:0.007831:0.005882:0.007835
 is used because it starts a task but does not wait for it to:@0.299871:0.145745:0.828970:0.145745:0.828970:0.129218:0.299871:0.129218:0.005882:0.006526:0.009154:0.005882:0.011765:0.009154:0.010441:0.011765:0.005882:0.011765:0.010441:0.010441:0.010441:0.011765:0.009154:0.010441:0.005882:0.006526:0.006526:0.005882:0.009154:0.006526:0.010441:0.007831:0.006526:0.009154:0.005882:0.010441:0.005882:0.006526:0.010441:0.009154:0.011765:0.005882:0.011765:0.011765:0.006526:0.005882:0.011765:0.011765:0.010441:0.009154:0.005882:0.011765:0.011765:0.006526:0.005882:0.016985:0.010441:0.006526:0.006526:0.005882:0.007831:0.011765:0.007831:0.005882:0.006526:0.006526:0.005882:0.006526:0.011765
finish. (Thus, it asynchronously runs the task.) The result of each task is obtained:@0.117647:0.166655:0.881930:0.166655:0.881930:0.150127:0.117647:0.150127:0.007831:0.006526:0.011765:0.006526:0.009154:0.011765:0.005882:0.005882:0.007831:0.014357:0.011765:0.011765:0.009154:0.005882:0.005882:0.006526:0.006526:0.005882:0.010441:0.009154:0.011765:0.011765:0.010441:0.011765:0.007831:0.011765:0.011765:0.011765:0.011765:0.009154:0.006526:0.011765:0.005882:0.007831:0.011765:0.011765:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.010441:0.009154:0.011765:0.005882:0.007831:0.005882:0.014357:0.011765:0.010441:0.005882:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.005882:0.011765:0.007831:0.005882:0.010441:0.010441:0.010441:0.011765:0.005882:0.006526:0.010441:0.009154:0.011765:0.005882:0.006526:0.009154:0.005882:0.011765:0.011765:0.006526:0.010441:0.006526:0.011765:0.010441:0.011765
by calling :@0.117647:0.187564:0.216930:0.187564:0.216930:0.171036:0.117647:0.171036:0.011765:0.011765:0.005882:0.010441:0.010441:0.006526:0.006526:0.006526:0.011765:0.011765:0.005882
join( ):@0.216929:0.187564:0.277669:0.187564:0.277669:0.171327:0.216929:0.171327:0.007831:0.011765:0.006526:0.013070:0.007831:0.005882:0.007835
, as shown here::@0.277671:0.187564:0.429249:0.187564:0.429249:0.171036:0.277671:0.171036:0.005882:0.005882:0.010441:0.009154:0.005882:0.009154:0.011765:0.011765:0.016985:0.011765:0.005882:0.011765:0.010441:0.007831:0.010441:0.006541
sum = subTaskA.join() + subTaskB.join();:@0.117647:0.220916:0.569125:0.220916:0.569125:0.209265:0.117647:0.209265:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
This statement waits until each task ends. It then adds the results of each and:@0.117647:0.261200:0.839393:0.261200:0.839393:0.244673:0.117647:0.244673:0.014357:0.011765:0.006526:0.009154:0.005882:0.009154:0.006526:0.010441:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.005882:0.016985:0.010441:0.006526:0.006526:0.009154:0.005882:0.011765:0.011765:0.006526:0.006526:0.006526:0.005882:0.010441:0.010441:0.010441:0.011765:0.005882:0.006526:0.010441:0.009154:0.011765:0.005882:0.010441:0.011765:0.011765:0.009154:0.005882:0.005882:0.007831:0.006526:0.005882:0.006526:0.011765:0.010441:0.011765:0.005882:0.010441:0.011765:0.011765:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.009154:0.005882:0.011765:0.007831:0.005882:0.010441:0.010441:0.010441:0.011765:0.005882:0.010441:0.011765:0.011765
assigns the total to :@0.117647:0.282109:0.297941:0.282109:0.297941:0.265582:0.117647:0.265582:0.010441:0.009154:0.009154:0.006526:0.011765:0.011765:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.011765:0.006526:0.010441:0.006526:0.005882:0.006526:0.011765:0.005882
sum:@0.297941:0.282109:0.339766:0.282109:0.339766:0.265873:0.297941:0.265873:0.009154:0.013070:0.019600
. Thus, the summation of each subtask is added to the:@0.339765:0.282109:0.842785:0.282109:0.842785:0.265582:0.339765:0.265582:0.005882:0.005882:0.014357:0.011765:0.011765:0.009154:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.011765:0.018291:0.018291:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.011765:0.007831:0.005882:0.010441:0.010441:0.010441:0.011765:0.005882:0.009154:0.011765:0.011765:0.006526:0.010441:0.009154:0.011765:0.005882:0.006526:0.009154:0.005882:0.010441:0.011765:0.011765:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.010447
running total. Finally, :@0.117647:0.303018:0.327114:0.303018:0.327114:0.286491:0.117647:0.286491:0.007831:0.011765:0.011765:0.011765:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.006526:0.010441:0.006526:0.005882:0.005882:0.013070:0.006526:0.011765:0.010441:0.006526:0.006526:0.010239:0.005882:0.005882
compute( ):@0.327118:0.303018:0.434879:0.303018:0.434879:0.286782:0.327118:0.286782:0.010441:0.011765:0.019596:0.013070:0.013070:0.007831:0.010441:0.007831:0.005882:0.007835
 ends by returning :@0.434871:0.303018:0.611268:0.303018:0.611268:0.286491:0.434871:0.286491:0.005882:0.010441:0.011765:0.011765:0.009154:0.005882:0.011765:0.011765:0.005882:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.006526:0.011765:0.011765:0.005882
sum:@0.611271:0.303018:0.653095:0.303018:0.653095:0.286782:0.611271:0.286782:0.009154:0.013070:0.019600
, which will be the final:@0.653082:0.303018:0.876462:0.303018:0.876462:0.286491:0.653082:0.286491:0.005882:0.005882:0.016985:0.011765:0.006526:0.010441:0.011765:0.005882:0.016985:0.006526:0.006526:0.006526:0.005882:0.011765:0.010441:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.006526:0.011765:0.010441:0.006541
total when the first invocation returns.:@0.117647:0.323927:0.476875:0.323927:0.476875:0.307400:0.117647:0.307400:0.006526:0.011765:0.006526:0.010441:0.006526:0.005882:0.016985:0.011765:0.010441:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.006526:0.007831:0.009154:0.006526:0.005882:0.006526:0.011765:0.011765:0.011765:0.010441:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.009154:0.005882
There are other ways to approach the handling of the asynchronous execution:@0.145882:0.346655:0.875496:0.346655:0.875496:0.330127:0.145882:0.330127:0.014357:0.011765:0.010441:0.007831:0.010441:0.005882:0.010441:0.007831:0.010441:0.005882:0.011765:0.006526:0.011765:0.010441:0.007831:0.005882:0.016985:0.010441:0.011765:0.009154:0.005882:0.006526:0.011765:0.005882:0.010441:0.011765:0.011765:0.007831:0.011765:0.010441:0.010441:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.010441:0.011765:0.011765:0.006526:0.006526:0.011765:0.011765:0.005882:0.011765:0.007831:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.009154:0.011765:0.011765:0.010441:0.011765:0.007831:0.011765:0.011765:0.011765:0.011765:0.009154:0.005882:0.010441:0.011765:0.010441:0.010441:0.011765:0.006526:0.006526:0.011765:0.011765
of the subtasks. For example, the following sequence uses :@0.117647:0.367564:0.669651:0.367564:0.669651:0.351036:0.117647:0.351036:0.011765:0.007831:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.011765:0.011765:0.006526:0.010441:0.009154:0.011765:0.009154:0.005882:0.005882:0.013070:0.011765:0.007831:0.005882:0.010441:0.011765:0.010441:0.018291:0.011765:0.006526:0.010441:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.011765:0.006526:0.006526:0.011765:0.016985:0.006526:0.011765:0.011765:0.005882:0.009154:0.010441:0.011765:0.011765:0.010441:0.011765:0.010441:0.010441:0.005882:0.011765:0.009154:0.010441:0.009154:0.005882
fork( ):@0.669647:0.367564:0.734302:0.367564:0.734302:0.351327:0.669647:0.351327:0.007831:0.011765:0.010441:0.013070:0.007831:0.005882:0.007835
 to start:@0.734306:0.367564:0.804854:0.367564:0.804854:0.351036:0.734306:0.351036:0.005882:0.006526:0.011765:0.005882:0.009154:0.006526:0.010441:0.007831:0.006541
subTaskA:@0.117647:0.388473:0.217448:0.388473:0.217448:0.372236:0.117647:0.372236:0.009154:0.013070:0.013070:0.013529:0.011765:0.009154:0.013070:0.016988
 and uses :@0.217447:0.388473:0.309579:0.388473:0.309579:0.371945:0.217447:0.371945:0.005882:0.010441:0.011765:0.011765:0.005882:0.011765:0.009154:0.010441:0.009154:0.005882
invoke( ):@0.309576:0.388473:0.397761:0.388473:0.397761:0.372236:0.309576:0.372236:0.006526:0.013070:0.011765:0.011765:0.013070:0.010441:0.007831:0.005882:0.007835
 to start and wait for :@0.397753:0.388473:0.593690:0.388473:0.593690:0.371945:0.397753:0.371945:0.005882:0.006526:0.011765:0.005882:0.009154:0.006526:0.010441:0.007831:0.006526:0.005882:0.010441:0.011765:0.011765:0.005882:0.016985:0.010441:0.006526:0.006526:0.005882:0.007831:0.011765:0.007831:0.005882
subTaskB:@0.593694:0.388473:0.692201:0.388473:0.692201:0.372236:0.593694:0.372236:0.009154:0.013070:0.013070:0.013529:0.011765:0.009154:0.013070:0.015694
::@0.692188:0.388473:0.698729:0.388473:0.698729:0.371945:0.692188:0.371945:0.006541
subTaskA.fork();:@0.117647:0.421826:0.298243:0.421826:0.298243:0.410174:0.117647:0.410174:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
sum = subTaskB.invoke() + subTaskA.join();:@0.117647:0.438189:0.591699:0.438189:0.591699:0.426538:0.117647:0.426538:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
Another alternative is to have :@0.117647:0.478473:0.401746:0.478473:0.401746:0.461945:0.117647:0.461945:0.016985:0.011765:0.011765:0.006526:0.011765:0.010441:0.007831:0.005882:0.010441:0.006526:0.006526:0.010441:0.007831:0.011765:0.010441:0.006526:0.006526:0.011765:0.010441:0.005882:0.006526:0.009154:0.005882:0.006526:0.011765:0.005882:0.011765:0.010441:0.011765:0.010441:0.005882
subTaskB:@0.401741:0.478473:0.500248:0.478473:0.500248:0.462236:0.401741:0.462236:0.009154:0.013070:0.013070:0.013529:0.011765:0.009154:0.013070:0.015694
 call :@0.500235:0.478473:0.545934:0.478473:0.545934:0.461945:0.500235:0.461945:0.005882:0.010441:0.010441:0.006526:0.006526:0.005882
compute( ):@0.545941:0.478473:0.653703:0.478473:0.653703:0.462236:0.545941:0.462236:0.010441:0.011765:0.019596:0.013070:0.013070:0.007831:0.010441:0.007831:0.005882:0.007835
 directly, as shown here::@0.653694:0.478473:0.881449:0.478473:0.881449:0.461945:0.653694:0.461945:0.005882:0.011765:0.006526:0.007831:0.010441:0.010441:0.006526:0.006526:0.010239:0.005882:0.005882:0.010441:0.009154:0.005882:0.009154:0.011765:0.011765:0.016985:0.011765:0.005882:0.011765:0.010441:0.007831:0.010441:0.006541
subTaskA.fork();:@0.117647:0.511826:0.298243:0.511826:0.298243:0.500174:0.117647:0.500174:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
sum = subTaskB.compute() + subTaskA.join();:@0.117647:0.528189:0.602985:0.528189:0.602985:0.516538:0.117647:0.516538:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
Executing a Task Asynchronously:@0.117647:0.584589:0.592500:0.584589:0.592500:0.561858:0.117647:0.561858:0.021967:0.016471:0.014614:0.014614:0.018309:0.010956:0.009136:0.018309:0.016471:0.008235:0.016471:0.008235:0.018934:0.016471:0.012812:0.018309:0.008235:0.023787:0.012812:0.016471:0.018309:0.014614:0.018309:0.014026:0.016471:0.018309:0.016471:0.018309:0.012812:0.009136:0.016471
The preceding programs have called :@0.117647:0.613927:0.465754:0.613927:0.465754:0.597400:0.117647:0.597400:0.014357:0.011765:0.010441:0.005882:0.011765:0.007831:0.010441:0.010441:0.010441:0.011765:0.006526:0.011765:0.011765:0.005882:0.011765:0.007831:0.011765:0.011765:0.007831:0.010441:0.018291:0.009154:0.005882:0.011765:0.010441:0.011765:0.010441:0.005882:0.010441:0.010441:0.006526:0.006526:0.010441:0.011765:0.005882
invoke( ):@0.465753:0.613927:0.553938:0.613927:0.553938:0.597691:0.465753:0.597691:0.006526:0.013070:0.011765:0.011765:0.013070:0.010441:0.007831:0.005882:0.007835
 on a :@0.553929:0.613927:0.605547:0.613927:0.605547:0.597400:0.553929:0.597400:0.005882:0.011765:0.011765:0.005882:0.010441:0.005882
ForkJoinPool:@0.605553:0.613927:0.742737:0.613927:0.742737:0.597691:0.605553:0.597691:0.014357:0.011765:0.010441:0.013070:0.011765:0.011765:0.006526:0.013070:0.014357:0.011765:0.011765:0.006541
 to initiate a:@0.742718:0.613927:0.854378:0.613927:0.854378:0.597400:0.742718:0.597400:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.006526:0.006526:0.006526:0.010441:0.006526:0.010441:0.005882:0.010447
task. This approach is commonly used when the calling thread must wait until:@0.117647:0.634836:0.851210:0.634836:0.851210:0.618309:0.117647:0.618309:0.006526:0.010441:0.009154:0.011765:0.005882:0.005882:0.014357:0.011765:0.006526:0.009154:0.005882:0.010441:0.011765:0.011765:0.007831:0.011765:0.010441:0.010441:0.011765:0.005882:0.006526:0.009154:0.005882:0.010441:0.011765:0.018291:0.018291:0.011765:0.011765:0.006526:0.011765:0.005882:0.011765:0.009154:0.010441:0.011765:0.005882:0.016985:0.011765:0.010441:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.010441:0.006526:0.006526:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.007831:0.010441:0.010441:0.011765:0.005882:0.018291:0.011765:0.009154:0.006526:0.005882:0.016985:0.010441:0.006526:0.006526:0.005882:0.011765:0.011765:0.006526:0.006526:0.006541
the task has completed (which is often the case) because :@0.117647:0.655745:0.653217:0.655745:0.653217:0.639218:0.117647:0.639218:0.006526:0.011765:0.010441:0.005882:0.006526:0.010441:0.009154:0.011765:0.005882:0.011765:0.010441:0.009154:0.005882:0.010441:0.011765:0.018291:0.011765:0.006526:0.010441:0.006526:0.010441:0.011765:0.005882:0.007831:0.016985:0.011765:0.006526:0.010441:0.011765:0.005882:0.006526:0.009154:0.005882:0.011765:0.007831:0.006526:0.010441:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.010441:0.009154:0.010441:0.007831:0.005882:0.011765:0.010441:0.010441:0.010441:0.011765:0.009154:0.010441:0.005882
invoke( ):@0.653212:0.655745:0.741396:0.655745:0.741396:0.639509:0.653212:0.639509:0.006526:0.013070:0.011765:0.011765:0.013070:0.010441:0.007831:0.005882:0.007835
 does not:@0.741400:0.655745:0.826360:0.655745:0.826360:0.639218:0.741400:0.639218:0.005882:0.011765:0.011765:0.010441:0.009154:0.005882:0.011765:0.011765:0.006541
return until the task has terminated. However, you can start a task:@0.117647:0.676655:0.733934:0.676655:0.733934:0.660127:0.117647:0.660127:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.005882:0.011765:0.011765:0.006526:0.006526:0.006526:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.010441:0.009154:0.011765:0.005882:0.011765:0.010441:0.009154:0.005882:0.006526:0.010441:0.007831:0.018291:0.006526:0.011765:0.010441:0.006526:0.010441:0.011765:0.005882:0.005882:0.016985:0.011765:0.016985:0.010441:0.011765:0.010441:0.006893:0.005882:0.005882:0.011765:0.011765:0.011765:0.005882:0.010441:0.010441:0.011765:0.005882:0.009154:0.006526:0.010441:0.007831:0.006526:0.005882:0.010441:0.005882:0.006526:0.010441:0.009154:0.011765
asynchronously. In this approach, the calling thread continues to execute. Thus,:@0.117647:0.697564:0.864706:0.697564:0.864706:0.681036:0.117647:0.681036:0.010441:0.009154:0.011765:0.011765:0.010441:0.011765:0.007831:0.011765:0.011765:0.011765:0.011765:0.009154:0.006526:0.010239:0.005882:0.005882:0.007831:0.011765:0.005882:0.006526:0.011765:0.006526:0.009154:0.005882:0.010441:0.011765:0.011765:0.007831:0.011765:0.010441:0.010441:0.011765:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.010441:0.006526:0.006526:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.007831:0.010441:0.010441:0.011765:0.005882:0.010441:0.011765:0.011765:0.006526:0.006526:0.011765:0.011765:0.010441:0.009154:0.005882:0.006526:0.011765:0.005882:0.010441:0.011765:0.010441:0.010441:0.011765:0.006526:0.010441:0.005882:0.005882:0.014357:0.011765:0.011765:0.009154:0.005882
both the calling thread and the task execute simultaneously. To start a task:@0.117647:0.718473:0.814007:0.718473:0.814007:0.701945:0.117647:0.701945:0.011765:0.011765:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.010441:0.006526:0.006526:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.007831:0.010441:0.010441:0.011765:0.005882:0.010441:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.010441:0.009154:0.011765:0.005882:0.010441:0.011765:0.010441:0.010441:0.011765:0.006526:0.010441:0.005882:0.009154:0.006526:0.018291:0.011765:0.006526:0.006526:0.010441:0.011765:0.010441:0.011765:0.011765:0.009154:0.006526:0.010239:0.005882:0.005882:0.012721:0.011765:0.005882:0.009154:0.006526:0.010441:0.007831:0.006526:0.005882:0.010441:0.005882:0.006526:0.010441:0.009154:0.011765
asynchronously, use :@0.117647:0.739382:0.312794:0.739382:0.312794:0.722855:0.117647:0.722855:0.010441:0.009154:0.011765:0.011765:0.010441:0.011765:0.007831:0.011765:0.011765:0.011765:0.011765:0.009154:0.006526:0.010239:0.005882:0.005882:0.011765:0.009154:0.010441:0.005882
execute( ):@0.312800:0.739382:0.408779:0.739382:0.408779:0.723145:0.312800:0.723145:0.010441:0.011765:0.010441:0.010441:0.013070:0.007831:0.010441:0.007831:0.005882:0.007835
, which is also defined by :@0.408765:0.739382:0.655051:0.739382:0.655051:0.722855:0.408765:0.722855:0.005882:0.005882:0.016985:0.011765:0.006526:0.010441:0.011765:0.005882:0.006526:0.009154:0.005882:0.010441:0.006526:0.009154:0.011765:0.005882:0.011765:0.010441:0.007831:0.006526:0.011765:0.010441:0.011765:0.005882:0.011765:0.011765:0.005882
ForkJoinPool:@0.655059:0.739382:0.792243:0.739382:0.792243:0.723145:0.655059:0.723145:0.014357:0.011765:0.010441:0.013070:0.011765:0.011765:0.006526:0.013070:0.014357:0.011765:0.011765:0.006541
. It has:@0.792224:0.739382:0.855586:0.739382:0.855586:0.722855:0.792224:0.722855:0.005882:0.005882:0.007831:0.006526:0.005882:0.011765:0.010441:0.009153
the two forms shown here::@0.117647:0.760291:0.368508:0.760291:0.368508:0.743764:0.117647:0.743764:0.006526:0.011765:0.010441:0.005882:0.006526:0.016985:0.011765:0.005882:0.007831:0.011765:0.007831:0.018291:0.009154:0.005882:0.009154:0.011765:0.011765:0.016985:0.011765:0.005882:0.011765:0.010441:0.007831:0.010441:0.006541
void execute(ForkJoinTask<?> :@0.145882:0.799382:0.443787:0.799382:0.443787:0.782855:0.145882:0.782855:0.011765:0.011765:0.006526:0.011765:0.005882:0.010441:0.011765:0.010441:0.010441:0.011765:0.006526:0.010441:0.007831:0.013070:0.011765:0.007831:0.011765:0.009154:0.011765:0.006526:0.011765:0.012721:0.010441:0.009154:0.011765:0.013254:0.010441:0.013254:0.005882
task:@0.443788:0.799382:0.481680:0.799382:0.481680:0.782836:0.443788:0.782836:0.006526:0.011765:0.009154:0.010447
):@0.481671:0.799382:0.489506:0.799382:0.489506:0.782855:0.481671:0.782855:0.007835
void execute(Runnable :@0.145882:0.838473:0.369265:0.838473:0.369265:0.821945:0.145882:0.821945:0.011765:0.011765:0.006526:0.011765:0.005882:0.010441:0.011765:0.010441:0.010441:0.011765:0.006526:0.010441:0.007831:0.015680:0.011765:0.011765:0.011765:0.010441:0.011765:0.006526:0.010441:0.005882
task:@0.369271:0.838473:0.407162:0.838473:0.407162:0.821927:0.369271:0.821927:0.006526:0.011765:0.009154:0.010447
):@0.407153:0.838473:0.414988:0.838473:0.414988:0.821945:0.407153:0.821945:0.007835
In both forms, :@0.117647:0.877564:0.257463:0.877564:0.257463:0.861036:0.117647:0.861036:0.007831:0.011765:0.005882:0.011765:0.011765:0.006526:0.011765:0.005882:0.007831:0.011765:0.007831:0.018291:0.009154:0.005882:0.005882
task:@0.257459:0.877564:0.295351:0.877564:0.295351:0.861018:0.257459:0.861018:0.006526:0.011765:0.009154:0.010447
 specifies the task to run. Notice that the second form lets you:@0.295353:0.877564:0.876033:0.877564:0.876033:0.861036:0.295353:0.861036:0.005882:0.009154:0.011765:0.010441:0.010441:0.006526:0.007831:0.006526:0.010441:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.010441:0.009154:0.011765:0.005882:0.006526:0.011765:0.005882:0.007831:0.011765:0.011765:0.005882:0.005882:0.016985:0.011765:0.006526:0.006526:0.010441:0.010441:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.010441:0.010441:0.011765:0.011765:0.011765:0.005882:0.007831:0.011765:0.007831:0.018291:0.005882:0.006526:0.010441:0.006526:0.009154:0.005882:0.011765:0.011765:0.011765
specify a :@0.117647:0.898473:0.207776:0.898473:0.207776:0.881945:0.117647:0.881945:0.009154:0.011765:0.010441:0.010441:0.006526:0.007831:0.011765:0.005882:0.010441:0.005882
Runnable:@0.207776:0.898473:0.305779:0.898473:0.305779:0.882236:0.207776:0.882236:0.016985:0.013070:0.013070:0.013070:0.011765:0.013070:0.006526:0.010447
 rather than a :@0.305776:0.898473:0.435078:0.898473:0.435078:0.881945:0.305776:0.881945:0.005882:0.007831:0.010441:0.006526:0.011765:0.010441:0.007831:0.005882:0.006526:0.011765:0.010441:0.011765:0.005882:0.010441:0.005882
ForkJoinTask:@0.435071:0.898473:0.575359:0.898473:0.575359:0.882236:0.435071:0.882236:0.014357:0.011765:0.010441:0.013070:0.011765:0.011765:0.006526:0.013070:0.013529:0.011765:0.009154:0.013082
 task. Thus, it forms a bridge:@0.575353:0.898473:0.845800:0.898473:0.845800:0.881945:0.575353:0.881945:0.005882:0.006526:0.010441:0.009154:0.011765:0.005882:0.005882:0.014357:0.011765:0.011765:0.009154:0.005882:0.005882:0.006526:0.006526:0.005882:0.007831:0.011765:0.007831:0.018291:0.009154:0.005882:0.010441:0.005882:0.011765:0.007831:0.006526:0.011765:0.011765:0.010447