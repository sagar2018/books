most frequently used in the expressions that control the   statement and the:@0.117647:0.110902:0.828313:0.110902:0.828313:0.094374:0.117647:0.094374:0.018291:0.011765:0.009154:0.006526:0.005882:0.007831:0.007831:0.010441:0.011765:0.011765:0.010441:0.011765:0.006526:0.006526:0.011765:0.005882:0.011765:0.009154:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.007831:0.010441:0.009154:0.009154:0.006526:0.011765:0.011765:0.009154:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.010441:0.011765:0.011765:0.006526:0.007831:0.011765:0.006526:0.005882:0.006526:0.011765:0.010441:0.005882:0.014354:0.005882:0.009154:0.006526:0.010441:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.005882:0.010441:0.011765:0.011765:0.005882:0.006526:0.011765:0.010447
if:@0.643494:0.110902:0.657855:0.110902:0.657855:0.094665:0.643494:0.094665:0.006526:0.007835
various loop statements.:@0.117647:0.132109:0.345625:0.132109:0.345625:0.115582:0.117647:0.115582:0.011765:0.010441:0.007831:0.006526:0.011765:0.011765:0.009154:0.005882:0.006526:0.011765:0.011765:0.011765:0.005882:0.009154:0.006526:0.010441:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.009154:0.005882
Any type in Java, including integers, floating-point numbers, characters, and:@0.145882:0.154836:0.866360:0.154836:0.866360:0.138309:0.145882:0.138309:0.016985:0.011765:0.011765:0.005882:0.006526:0.011765:0.011765:0.010441:0.005882:0.006526:0.011765:0.005882:0.009154:0.010441:0.011765:0.010441:0.005882:0.005882:0.006526:0.011765:0.010441:0.006526:0.011765:0.011765:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.006526:0.010441:0.011765:0.010441:0.007831:0.009154:0.005882:0.005882:0.007831:0.006526:0.011765:0.010441:0.006526:0.006526:0.011765:0.011765:0.007831:0.011765:0.011765:0.006526:0.011765:0.006526:0.005882:0.011765:0.011765:0.018291:0.011765:0.010441:0.007831:0.009154:0.005882:0.005882:0.010441:0.011765:0.010441:0.007831:0.010441:0.010441:0.006526:0.010441:0.007831:0.009154:0.005882:0.005882:0.010441:0.011765:0.011765
Booleans can be compared using the equality test, :@0.117647:0.175745:0.593824:0.175745:0.593824:0.159218:0.117647:0.159218:0.015680:0.011765:0.011765:0.006526:0.010441:0.010441:0.011765:0.009154:0.005882:0.010441:0.010441:0.011765:0.005882:0.011765:0.010441:0.005882:0.010441:0.011765:0.018291:0.011765:0.010441:0.007831:0.010441:0.011765:0.005882:0.011765:0.009154:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.010441:0.006526:0.006526:0.006526:0.011765:0.005882:0.006526:0.010441:0.009154:0.006526:0.005882:0.005882
==:@0.593824:0.175745:0.620636:0.175745:0.620636:0.159509:0.593824:0.159509:0.013401:0.013412
, and the inequality test,  .:@0.620624:0.175745:0.878306:0.175745:0.878306:0.159218:0.620624:0.159218:0.005882:0.005882:0.010441:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.011765:0.010441:0.011765:0.011765:0.010441:0.006526:0.006526:0.006526:0.011765:0.005882:0.006526:0.010441:0.009154:0.006526:0.005882:0.005882:0.021230:0.005882
!=:@0.851200:0.175745:0.872443:0.175745:0.872443:0.159509:0.851200:0.159509:0.007831:0.013412
Notice that in Java equality is denoted with two equal signs, not one.:@0.117647:0.196655:0.764338:0.196655:0.764338:0.180127:0.117647:0.180127:0.016985:0.011765:0.006526:0.006526:0.010441:0.010441:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.006526:0.011765:0.005882:0.009154:0.010441:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.010441:0.006526:0.006526:0.006526:0.011765:0.005882:0.006526:0.009154:0.005882:0.011765:0.010441:0.011765:0.011765:0.006526:0.010441:0.011765:0.005882:0.016985:0.006526:0.006526:0.011765:0.005882:0.006526:0.016985:0.011765:0.005882:0.010441:0.011765:0.011765:0.010441:0.006526:0.005882:0.009154:0.006526:0.011765:0.011765:0.009154:0.005882:0.005882:0.011765:0.011765:0.006526:0.005882:0.011765:0.011765:0.010441:0.005882
(Remember: a single equal sign is the assignment operator.) Only numeric types:@0.117647:0.217564:0.871414:0.217564:0.871414:0.201036:0.117647:0.201036:0.007831:0.015680:0.010441:0.018291:0.010441:0.018291:0.011765:0.010441:0.007831:0.006526:0.005882:0.010441:0.005882:0.009154:0.006526:0.011765:0.011765:0.006526:0.010441:0.005882:0.010441:0.011765:0.011765:0.010441:0.006526:0.005882:0.009154:0.006526:0.011765:0.011765:0.005882:0.006526:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.009154:0.009154:0.006526:0.011765:0.011765:0.018291:0.010441:0.011765:0.006526:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.006526:0.011765:0.006526:0.005882:0.007831:0.005882:0.016985:0.011765:0.006526:0.011765:0.005882:0.011765:0.011765:0.018291:0.010441:0.007831:0.006526:0.010441:0.005882:0.006526:0.011765:0.011765:0.010441:0.009153
can be compared using the ordering operators. That is, only integer, floating-:@0.117647:0.238473:0.840427:0.238473:0.840427:0.221945:0.117647:0.221945:0.010441:0.010441:0.011765:0.005882:0.011765:0.010441:0.005882:0.010441:0.011765:0.018291:0.011765:0.010441:0.007831:0.010441:0.011765:0.005882:0.011765:0.009154:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.007831:0.011765:0.010441:0.007831:0.006526:0.011765:0.011765:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.006526:0.011765:0.007831:0.009154:0.005882:0.005882:0.014357:0.011765:0.010441:0.006526:0.005882:0.006526:0.009154:0.005882:0.005882:0.011765:0.011765:0.006526:0.011765:0.005882:0.006526:0.011765:0.006526:0.010441:0.011765:0.010441:0.006893:0.005882:0.005882:0.007831:0.006526:0.011765:0.010441:0.006526:0.006526:0.011765:0.011765:0.007835
point, and character operands may be compared to see which is greater or less:@0.117647:0.259382:0.850476:0.259382:0.850476:0.242855:0.117647:0.242855:0.011765:0.011765:0.006526:0.011765:0.006526:0.005882:0.005882:0.010441:0.011765:0.011765:0.005882:0.010441:0.011765:0.010441:0.007831:0.010441:0.010441:0.006526:0.010441:0.007831:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.011765:0.011765:0.009154:0.005882:0.018291:0.010441:0.011765:0.005882:0.011765:0.010441:0.005882:0.010441:0.011765:0.018291:0.011765:0.010441:0.007831:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882:0.009154:0.010441:0.010441:0.005882:0.016985:0.011765:0.006526:0.010441:0.011765:0.005882:0.006526:0.009154:0.005882:0.011765:0.007831:0.010441:0.010441:0.006526:0.010441:0.007831:0.005882:0.011765:0.007831:0.005882:0.006526:0.010441:0.009154:0.009153
than the other.:@0.117647:0.280291:0.251544:0.280291:0.251544:0.263764:0.117647:0.263764:0.006526:0.011765:0.010441:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.006526:0.011765:0.010441:0.006526:0.005882
As stated, the result produced by a relational operator is a :@0.145882:0.303018:0.693217:0.303018:0.693217:0.286491:0.145882:0.286491:0.016985:0.009154:0.005882:0.009154:0.006526:0.010441:0.006526:0.010441:0.011765:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.005882:0.011765:0.007831:0.011765:0.011765:0.011765:0.010441:0.010441:0.011765:0.005882:0.011765:0.011765:0.005882:0.010441:0.005882:0.007831:0.010441:0.006526:0.010441:0.006526:0.006526:0.011765:0.011765:0.010441:0.006526:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.006526:0.011765:0.007831:0.005882:0.006526:0.009154:0.005882:0.010441:0.005882
boolean:@0.693212:0.303018:0.771625:0.303018:0.771625:0.286782:0.693212:0.286782:0.013070:0.011765:0.011765:0.006526:0.010441:0.011765:0.013082
 value. For:@0.771624:0.303018:0.872878:0.303018:0.872878:0.286491:0.771624:0.286491:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.005882:0.013070:0.011765:0.007835
example, the following code fragment is perfectly valid::@0.117647:0.323927:0.646670:0.323927:0.646670:0.307400:0.117647:0.307400:0.010441:0.011765:0.010441:0.018291:0.011765:0.006526:0.010441:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.011765:0.006526:0.006526:0.011765:0.016985:0.006526:0.011765:0.011765:0.005882:0.010441:0.011765:0.011765:0.010441:0.005882:0.007831:0.007831:0.010441:0.011765:0.018291:0.010441:0.011765:0.006526:0.005882:0.006526:0.009154:0.005882:0.011765:0.010441:0.007831:0.007831:0.010441:0.010441:0.006526:0.006526:0.011765:0.005882:0.011765:0.010441:0.006526:0.006526:0.011765:0.006541
int a = 4;:@0.117647:0.357280:0.230522:0.357280:0.230522:0.345629:0.117647:0.345629:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
int b = 1;:@0.117647:0.373644:0.230522:0.373644:0.230522:0.361993:0.117647:0.361993:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
boolean c = a < b;:@0.117647:0.390007:0.320816:0.390007:0.320816:0.378356:0.117647:0.378356:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
In this case, the result of :@0.117647:0.430291:0.353437:0.430291:0.353437:0.413764:0.117647:0.413764:0.007831:0.011765:0.005882:0.006526:0.011765:0.006526:0.009154:0.005882:0.010441:0.010441:0.009154:0.010441:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.005882:0.011765:0.007831:0.005882
a<b:@0.353435:0.430291:0.391683:0.430291:0.391683:0.414055:0.353435:0.414055:0.011765:0.013401:0.013082
 (which is :@0.391671:0.430291:0.490310:0.430291:0.490310:0.413764:0.391671:0.413764:0.005882:0.007831:0.016985:0.011765:0.006526:0.010441:0.011765:0.005882:0.006526:0.009154:0.005882
false:@0.490318:0.430291:0.536040:0.430291:0.536040:0.414055:0.490318:0.414055:0.007831:0.011765:0.006526:0.009154:0.010447
) is stored in  .:@0.536024:0.430291:0.675165:0.430291:0.675165:0.413764:0.536024:0.413764:0.007831:0.005882:0.006526:0.009154:0.005882:0.009154:0.006526:0.011765:0.007831:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882:0.010446:0.005882
c:@0.658847:0.430291:0.669294:0.430291:0.669294:0.414055:0.658847:0.414055:0.010447
If you are coming from a C/C++ background, please note the following. In:@0.145882:0.453018:0.849118:0.453018:0.849118:0.436491:0.145882:0.436491:0.007831:0.007831:0.005882:0.011765:0.011765:0.011765:0.005882:0.010441:0.007831:0.010441:0.005882:0.010441:0.011765:0.018291:0.006526:0.011765:0.011765:0.005882:0.007831:0.007831:0.011765:0.018291:0.005882:0.010441:0.005882:0.015680:0.006526:0.015680:0.013254:0.013254:0.005882:0.011765:0.010441:0.010441:0.011765:0.011765:0.007831:0.011765:0.011765:0.011765:0.011765:0.005882:0.005882:0.011765:0.006526:0.010441:0.010441:0.009154:0.010441:0.005882:0.011765:0.011765:0.006526:0.010441:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.011765:0.006526:0.006526:0.011765:0.016985:0.006526:0.011765:0.011765:0.005882:0.005882:0.007831:0.011765
C/C++, these types of statements are very common::@0.117647:0.473927:0.605309:0.473927:0.605309:0.457400:0.117647:0.457400:0.015680:0.006526:0.015680:0.013254:0.013254:0.005882:0.005882:0.006526:0.011765:0.010441:0.009154:0.010441:0.005882:0.006526:0.011765:0.011765:0.010441:0.009154:0.005882:0.011765:0.007831:0.005882:0.009154:0.006526:0.010441:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.009154:0.005882:0.010441:0.007831:0.010441:0.005882:0.011765:0.010441:0.007831:0.011765:0.005882:0.010441:0.011765:0.018291:0.018291:0.011765:0.011765:0.006541
int done;:@0.117647:0.507280:0.219235:0.507280:0.219235:0.495629:0.117647:0.495629:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
//...:@0.117647:0.523644:0.174088:0.523644:0.174088:0.511993:0.117647:0.511993:0.011287:0.011287:0.011287:0.011287:0.011294
if(!done)... // Valid in C/C++:@0.117647:0.540007:0.456257:0.540007:0.456257:0.528356:0.117647:0.528356:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
if(done)... // but not in Java.:@0.117647:0.556371:0.467544:0.556371:0.467544:0.544720:0.117647:0.544720:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
In Java, these statements must be written like this::@0.117647:0.596655:0.589887:0.596655:0.589887:0.580127:0.117647:0.580127:0.007831:0.011765:0.005882:0.009154:0.010441:0.011765:0.010441:0.005882:0.005882:0.006526:0.011765:0.010441:0.009154:0.010441:0.005882:0.009154:0.006526:0.010441:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.009154:0.005882:0.018291:0.011765:0.009154:0.006526:0.005882:0.011765:0.010441:0.005882:0.016985:0.007831:0.006526:0.006526:0.006526:0.010441:0.011765:0.005882:0.006526:0.006526:0.011765:0.010441:0.005882:0.006526:0.011765:0.006526:0.009154:0.006541
if(done == 0)... // This is Java-style.:@0.117647:0.630007:0.557838:0.630007:0.557838:0.618356:0.117647:0.618356:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
if(done != 0)...:@0.117647:0.646371:0.298243:0.646371:0.298243:0.634720:0.117647:0.634720:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
The reason is that Java does not define true and false in the same way as:@0.145882:0.686655:0.825826:0.686655:0.825826:0.670127:0.145882:0.670127:0.014357:0.011765:0.010441:0.005882:0.007831:0.010441:0.010441:0.009154:0.011765:0.011765:0.005882:0.006526:0.009154:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.009154:0.010441:0.011765:0.010441:0.005882:0.011765:0.011765:0.010441:0.009154:0.005882:0.011765:0.011765:0.006526:0.005882:0.011765:0.010441:0.007831:0.006526:0.011765:0.010441:0.005882:0.006526:0.007831:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.005882:0.007831:0.010441:0.006526:0.009154:0.010441:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.010441:0.018291:0.010441:0.005882:0.016985:0.010441:0.011765:0.005882:0.010441:0.009153
C/C++. In C/C++, true is any nonzero value and false is zero. In Java, :@0.117647:0.707564:0.780754:0.707564:0.780754:0.691036:0.117647:0.691036:0.015680:0.006526:0.015680:0.013254:0.013254:0.005882:0.005882:0.007831:0.011765:0.005882:0.015680:0.006526:0.015680:0.013254:0.013254:0.005882:0.005882:0.006526:0.007831:0.011765:0.010441:0.005882:0.006526:0.009154:0.005882:0.010441:0.011765:0.011765:0.005882:0.011765:0.011765:0.011765:0.010441:0.010441:0.007831:0.011765:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.005882:0.007831:0.010441:0.006526:0.009154:0.010441:0.005882:0.006526:0.009154:0.005882:0.010441:0.010441:0.007831:0.011765:0.005882:0.005882:0.007831:0.011765:0.005882:0.009154:0.010441:0.011765:0.010441:0.005882:0.005882
true:@0.780753:0.707564:0.822542:0.707564:0.822542:0.691327:0.780753:0.691327:0.007831:0.010441:0.013070:0.010447
 and:@0.822541:0.707564:0.862394:0.707564:0.862394:0.691036:0.822541:0.691036:0.005882:0.010441:0.011765:0.011765
false:@0.117647:0.728473:0.163370:0.728473:0.163370:0.712236:0.117647:0.712236:0.007831:0.011765:0.006526:0.009154:0.010447
 are nonnumeric values that do not relate to zero or nonzero. Therefore, to:@0.163365:0.728473:0.858935:0.728473:0.858935:0.711945:0.163365:0.711945:0.005882:0.010441:0.007831:0.010441:0.005882:0.011765:0.011765:0.011765:0.011765:0.011765:0.018291:0.010441:0.007831:0.006526:0.010441:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.009154:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.011765:0.011765:0.005882:0.011765:0.011765:0.006526:0.005882:0.007831:0.010441:0.006526:0.010441:0.006526:0.010441:0.005882:0.006526:0.011765:0.005882:0.010441:0.010441:0.007831:0.011765:0.005882:0.011765:0.007831:0.005882:0.011765:0.011765:0.011765:0.010441:0.010441:0.007831:0.011765:0.005882:0.005882:0.014357:0.011765:0.010441:0.007831:0.010441:0.007831:0.011765:0.007831:0.010441:0.005882:0.005882:0.006526:0.011765
test for zero or nonzero, you must explicitly employ one or more of the relational:@0.117647:0.749382:0.881210:0.749382:0.881210:0.732855:0.117647:0.732855:0.006526:0.010441:0.009154:0.006526:0.005882:0.007831:0.011765:0.007831:0.005882:0.010441:0.010441:0.007831:0.011765:0.005882:0.011765:0.007831:0.005882:0.011765:0.011765:0.011765:0.010441:0.010441:0.007831:0.011765:0.005882:0.005882:0.011765:0.011765:0.011765:0.005882:0.018291:0.011765:0.009154:0.006526:0.005882:0.010441:0.011765:0.011765:0.006526:0.006526:0.010441:0.006526:0.006526:0.006526:0.011765:0.005882:0.010441:0.018291:0.011765:0.006526:0.011765:0.011765:0.005882:0.011765:0.011765:0.010441:0.005882:0.011765:0.007831:0.005882:0.018291:0.011765:0.007831:0.010441:0.005882:0.011765:0.007831:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.010441:0.006526:0.010441:0.006526:0.006526:0.011765:0.011765:0.010441:0.006541
operators.:@0.117647:0.770291:0.211048:0.770291:0.211048:0.753764:0.117647:0.753764:0.011765:0.011765:0.010441:0.007831:0.010441:0.006526:0.011765:0.007831:0.009154:0.005882
Boolean Logical Operators:@0.117647:0.834662:0.563926:0.834662:0.563926:0.807872:0.117647:0.807872:0.025882:0.019412:0.019412:0.010772:0.017224:0.019412:0.021581:0.009706:0.025882:0.019412:0.019412:0.010772:0.017224:0.019412:0.010772:0.009706:0.030184:0.021581:0.017224:0.017224:0.019412:0.012923:0.019412:0.017224:0.015102
The Boolean logical operators shown here operate only on :@0.117647:0.865745:0.673511:0.865745:0.673511:0.849218:0.117647:0.849218:0.014357:0.011765:0.010441:0.005882:0.015680:0.011765:0.011765:0.006526:0.010441:0.010441:0.011765:0.005882:0.006526:0.011765:0.011765:0.006526:0.010441:0.010441:0.006526:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.006526:0.011765:0.007831:0.009154:0.005882:0.009154:0.011765:0.011765:0.016985:0.011765:0.005882:0.011765:0.010441:0.007831:0.010441:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.006526:0.010441:0.005882:0.011765:0.011765:0.006526:0.011765:0.005882:0.011765:0.011765:0.005882
boolean:@0.673506:0.865745:0.751919:0.865745:0.751919:0.849509:0.673506:0.849509:0.013070:0.011765:0.011765:0.006526:0.010441:0.011765:0.013082
 operands.:@0.751906:0.865745:0.848597:0.865745:0.848597:0.849218:0.751906:0.849218:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.011765:0.011765:0.009154:0.005882
All of the binary logical operators combine two :@0.117647:0.886655:0.570938:0.886655:0.570938:0.870127:0.117647:0.870127:0.016985:0.006526:0.006526:0.005882:0.011765:0.007831:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.006526:0.011765:0.010441:0.007831:0.011765:0.005882:0.006526:0.011765:0.011765:0.006526:0.010441:0.010441:0.006526:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.006526:0.011765:0.007831:0.009154:0.005882:0.010441:0.011765:0.018291:0.011765:0.006526:0.011765:0.010441:0.005882:0.006526:0.016985:0.011765:0.005882
boolean:@0.570941:0.886655:0.649354:0.886655:0.649354:0.870418:0.570941:0.870418:0.013070:0.011765:0.011765:0.006526:0.010441:0.011765:0.013082
 values to form a:@0.649341:0.886655:0.807417:0.886655:0.807417:0.870127:0.649341:0.870127:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.009154:0.005882:0.006526:0.011765:0.005882:0.007831:0.011765:0.007831:0.018291:0.005882:0.010447
resultant :@0.117647:0.907564:0.204504:0.907564:0.204504:0.891036:0.117647:0.891036:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.010441:0.011765:0.006526:0.005882
boolean:@0.204506:0.907564:0.282919:0.907564:0.282919:0.891327:0.204506:0.891327:0.013070:0.011765:0.011765:0.006526:0.010441:0.011765:0.013082
 value.:@0.282906:0.907564:0.345608:0.907564:0.345608:0.891036:0.282906:0.891036:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882