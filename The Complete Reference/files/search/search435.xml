Although the :@0.117647:0.813927:0.247004:0.813927:0.247004:0.797400:0.117647:0.797400:0.016985:0.006526:0.006526:0.011765:0.011765:0.011765:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882
put( ):@0.247000:0.813927:0.302519:0.813927:0.302519:0.797691:0.247000:0.797691:0.013070:0.013070:0.007831:0.007831:0.005882:0.007835
 and :@0.302518:0.813927:0.348253:0.813927:0.348253:0.797400:0.302518:0.797400:0.005882:0.010441:0.011765:0.011765:0.005882
get( ):@0.348259:0.813927:0.399844:0.813927:0.399844:0.797691:0.348259:0.797691:0.011765:0.010441:0.007831:0.007831:0.005882:0.007835
 methods on   are synchronized, nothing stops the:@0.399835:0.813927:0.877418:0.813927:0.877418:0.797400:0.399835:0.797400:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.009154:0.005882:0.011765:0.011765:0.005882:0.018294:0.005882:0.010441:0.007831:0.010441:0.005882:0.009154:0.011765:0.011765:0.010441:0.011765:0.007831:0.011765:0.011765:0.006526:0.010441:0.010441:0.011765:0.005882:0.005882:0.011765:0.011765:0.006526:0.011765:0.006526:0.011765:0.011765:0.005882:0.009154:0.006526:0.011765:0.011765:0.009154:0.005882:0.006526:0.011765:0.010447
Q:@0.520718:0.813927:0.539024:0.813927:0.539024:0.797691:0.520718:0.797691:0.018306
producer from overrunning the consumer, nor will anything stop the consumer:@0.117647:0.834836:0.855538:0.834836:0.855538:0.818309:0.117647:0.818309:0.011765:0.007831:0.011765:0.011765:0.011765:0.010441:0.010441:0.007831:0.005882:0.007831:0.007831:0.011765:0.018291:0.005882:0.011765:0.011765:0.010441:0.007831:0.007831:0.011765:0.011765:0.011765:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.009154:0.011765:0.018291:0.010441:0.006893:0.005882:0.005882:0.011765:0.011765:0.007831:0.005882:0.016985:0.006526:0.006526:0.006526:0.005882:0.010441:0.011765:0.011765:0.006526:0.011765:0.006526:0.011765:0.011765:0.005882:0.009154:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.009154:0.011765:0.018291:0.010441:0.007835
from consuming the same queue value twice. Thus, you get the erroneous output:@0.117647:0.855745:0.876725:0.855745:0.876725:0.839218:0.117647:0.839218:0.007831:0.007831:0.011765:0.018291:0.005882:0.010441:0.011765:0.011765:0.009154:0.011765:0.018291:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.010441:0.018291:0.010441:0.005882:0.011765:0.011765:0.010441:0.011765:0.010441:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.006526:0.016985:0.006526:0.010441:0.010441:0.005882:0.005882:0.014357:0.011765:0.011765:0.009154:0.005882:0.005882:0.011765:0.011765:0.011765:0.005882:0.011765:0.010441:0.006526:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.007831:0.007831:0.011765:0.011765:0.010441:0.011765:0.011765:0.009154:0.005882:0.011765:0.011765:0.006526:0.011765:0.011765:0.006541
shown here (the exact output will vary with processor speed and task load)::@0.117647:0.876655:0.827037:0.876655:0.827037:0.860127:0.117647:0.860127:0.009154:0.011765:0.011765:0.016985:0.011765:0.005882:0.011765:0.010441:0.007831:0.010441:0.005882:0.007831:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.010441:0.010441:0.006526:0.005882:0.011765:0.011765:0.006526:0.011765:0.011765:0.006526:0.005882:0.016985:0.006526:0.006526:0.006526:0.005882:0.011765:0.010441:0.007831:0.011765:0.005882:0.016985:0.006526:0.006526:0.011765:0.005882:0.011765:0.007831:0.011765:0.010441:0.010441:0.009154:0.009154:0.011765:0.007831:0.005882:0.009154:0.011765:0.010441:0.010441:0.011765:0.005882:0.010441:0.011765:0.011765:0.005882:0.006526:0.010441:0.009154:0.011765:0.005882:0.006526:0.011765:0.010441:0.011765:0.007831:0.006541