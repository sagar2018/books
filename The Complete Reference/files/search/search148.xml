results in 11010110, or –42. To decode a negative number, first invert all of the:@0.117647:0.111200:0.861293:0.111200:0.861293:0.094673:0.117647:0.094673:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.009154:0.005882:0.006526:0.011765:0.005882:0.010901:0.011765:0.011765:0.011765:0.011765:0.010901:0.011765:0.011765:0.005882:0.005882:0.011765:0.007831:0.005882:0.011765:0.011765:0.011765:0.005882:0.005882:0.012721:0.011765:0.005882:0.011765:0.010441:0.010441:0.011765:0.011765:0.010441:0.005882:0.010441:0.005882:0.011765:0.010441:0.011765:0.010441:0.006526:0.006526:0.011765:0.010441:0.005882:0.011765:0.011765:0.018291:0.011765:0.010441:0.006893:0.005882:0.005882:0.007831:0.006526:0.007831:0.009154:0.006526:0.005882:0.006526:0.011765:0.011765:0.010441:0.007831:0.006526:0.005882:0.010441:0.006526:0.006526:0.005882:0.011765:0.007831:0.005882:0.006526:0.011765:0.010447
bits, then add 1. For example, –42, or 11010110 inverted, yields 00101001, or:@0.117647:0.132109:0.850299:0.132109:0.850299:0.115582:0.117647:0.115582:0.011765:0.006526:0.006526:0.009154:0.005882:0.005882:0.006526:0.011765:0.010441:0.011765:0.005882:0.010441:0.011765:0.011765:0.005882:0.011765:0.005882:0.005882:0.013070:0.011765:0.007831:0.005882:0.010441:0.011765:0.010441:0.018291:0.011765:0.006526:0.010441:0.005882:0.005882:0.011765:0.011765:0.011765:0.005882:0.005882:0.011765:0.007831:0.005882:0.010901:0.011765:0.011765:0.011765:0.011765:0.010901:0.011765:0.011765:0.005882:0.006526:0.011765:0.011765:0.010441:0.007831:0.006526:0.010441:0.011765:0.005882:0.005882:0.011765:0.006526:0.010441:0.006526:0.011765:0.009154:0.005882:0.011765:0.011765:0.011765:0.011765:0.011765:0.011765:0.011765:0.011765:0.005882:0.005882:0.011765:0.007835
41, so when you add 1 you get 42.:@0.117647:0.153018:0.440459:0.153018:0.440459:0.136491:0.117647:0.136491:0.011765:0.011765:0.005882:0.005882:0.009154:0.011765:0.005882:0.016985:0.011765:0.010441:0.011765:0.005882:0.011765:0.011765:0.011765:0.005882:0.010441:0.011765:0.011765:0.005882:0.011765:0.005882:0.011765:0.011765:0.011765:0.005882:0.011765:0.010441:0.006526:0.005882:0.011765:0.011765:0.005882
The reason Java (and most other computer languages) uses two’s complement:@0.145882:0.175745:0.878784:0.175745:0.878784:0.159218:0.145882:0.159218:0.014357:0.011765:0.010441:0.005882:0.007831:0.010441:0.010441:0.009154:0.011765:0.011765:0.005882:0.009154:0.010441:0.011765:0.010441:0.005882:0.007831:0.010441:0.011765:0.011765:0.005882:0.018291:0.011765:0.009154:0.006526:0.005882:0.011765:0.006526:0.011765:0.010441:0.007831:0.005882:0.010441:0.011765:0.018291:0.011765:0.011765:0.006526:0.010441:0.007831:0.005882:0.006526:0.010441:0.011765:0.011765:0.011765:0.010441:0.011765:0.010441:0.009154:0.007831:0.005882:0.011765:0.009154:0.010441:0.009154:0.005882:0.006526:0.016985:0.011765:0.006526:0.009154:0.005882:0.010441:0.011765:0.018291:0.011765:0.006526:0.010441:0.018291:0.010441:0.011765:0.006541
is easy to see when you consider the issue of :@0.117647:0.196655:0.543584:0.196655:0.543584:0.180127:0.117647:0.180127:0.006526:0.009154:0.005882:0.010441:0.010441:0.009154:0.011765:0.005882:0.006526:0.011765:0.005882:0.009154:0.010441:0.010441:0.005882:0.016985:0.011765:0.010441:0.011765:0.005882:0.011765:0.011765:0.011765:0.005882:0.010441:0.011765:0.011765:0.009154:0.006526:0.011765:0.010441:0.007831:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.009154:0.009154:0.011765:0.010441:0.005882:0.011765:0.007831:0.005882
zero crossing:@0.543585:0.196655:0.667978:0.196655:0.667978:0.180109:0.543585:0.180109:0.009154:0.010441:0.008290:0.011765:0.005882:0.010441:0.008290:0.011765:0.009154:0.009154:0.006526:0.011765:0.011765
. Assuming a :@0.667978:0.196655:0.797353:0.196655:0.797353:0.180127:0.667978:0.180127:0.005882:0.005882:0.016985:0.009154:0.009154:0.011765:0.018291:0.006526:0.011765:0.011765:0.005882:0.010441:0.005882
byte:@0.797353:0.196655:0.840466:0.196655:0.840466:0.180418:0.797353:0.180418:0.013070:0.011765:0.007831:0.010447
value, zero is represented by 00000000. In one’s complement, simply inverting:@0.117647:0.217564:0.861691:0.217564:0.861691:0.201036:0.117647:0.201036:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.005882:0.010441:0.010441:0.007831:0.011765:0.005882:0.006526:0.009154:0.005882:0.007831:0.010441:0.011765:0.007831:0.010441:0.009154:0.010441:0.011765:0.006526:0.010441:0.011765:0.005882:0.011765:0.011765:0.005882:0.011765:0.011765:0.011765:0.011765:0.011765:0.011765:0.011765:0.011765:0.005882:0.005882:0.007831:0.011765:0.005882:0.011765:0.011765:0.010441:0.006526:0.009154:0.005882:0.010441:0.011765:0.018291:0.011765:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.005882:0.005882:0.009154:0.006526:0.018291:0.011765:0.006526:0.011765:0.005882:0.006526:0.011765:0.011765:0.010441:0.007831:0.006526:0.006526:0.011765:0.011765
all of the bits creates 11111111, which creates negative zero. The trouble is that:@0.117647:0.238473:0.862056:0.238473:0.862056:0.221945:0.117647:0.221945:0.010441:0.006526:0.006526:0.005882:0.011765:0.007831:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.006526:0.006526:0.009154:0.005882:0.010441:0.007831:0.010441:0.010441:0.006526:0.010441:0.009154:0.005882:0.010901:0.010901:0.010901:0.010901:0.010901:0.010901:0.010901:0.011765:0.005882:0.005882:0.016985:0.011765:0.006526:0.010441:0.011765:0.005882:0.010441:0.007831:0.010441:0.010441:0.006526:0.010441:0.009154:0.005882:0.011765:0.010441:0.011765:0.010441:0.006526:0.006526:0.011765:0.010441:0.005882:0.010441:0.010441:0.007831:0.011765:0.005882:0.005882:0.014357:0.011765:0.010441:0.005882:0.006526:0.007831:0.011765:0.011765:0.011765:0.006526:0.010441:0.005882:0.006526:0.009154:0.005882:0.006526:0.011765:0.010441:0.006541
negative zero is invalid in integer math. This problem is solved by using two’s:@0.117647:0.259382:0.854484:0.259382:0.854484:0.242855:0.117647:0.242855:0.011765:0.010441:0.011765:0.010441:0.006526:0.006526:0.011765:0.010441:0.005882:0.010441:0.010441:0.007831:0.011765:0.005882:0.006526:0.009154:0.005882:0.006526:0.011765:0.011765:0.010441:0.006526:0.006526:0.011765:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.006526:0.010441:0.011765:0.010441:0.007831:0.005882:0.018291:0.010441:0.006526:0.011765:0.005882:0.005882:0.014357:0.011765:0.006526:0.009154:0.005882:0.011765:0.007831:0.011765:0.011765:0.006526:0.010441:0.018291:0.005882:0.006526:0.009154:0.005882:0.009154:0.011765:0.006526:0.011765:0.010441:0.011765:0.005882:0.011765:0.011765:0.005882:0.011765:0.009154:0.006526:0.011765:0.011765:0.005882:0.006526:0.016985:0.011765:0.006526:0.009153
complement to represent negative values. When using two’s complement, 1 is:@0.117647:0.280291:0.850532:0.280291:0.850532:0.263764:0.117647:0.263764:0.010441:0.011765:0.018291:0.011765:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.005882:0.006526:0.011765:0.005882:0.007831:0.010441:0.011765:0.007831:0.010441:0.009154:0.010441:0.011765:0.006526:0.005882:0.011765:0.010441:0.011765:0.010441:0.006526:0.006526:0.011765:0.010441:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.009154:0.005882:0.005882:0.022206:0.011765:0.010441:0.011765:0.005882:0.011765:0.009154:0.006526:0.011765:0.011765:0.005882:0.006526:0.016985:0.011765:0.006526:0.009154:0.005882:0.010441:0.011765:0.018291:0.011765:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.005882:0.005882:0.011765:0.005882:0.006526:0.009153
added to the complement, producing 100000000. This produces a 1 bit too far to:@0.117647:0.301200:0.874798:0.301200:0.874798:0.284673:0.117647:0.284673:0.010441:0.011765:0.011765:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.018291:0.011765:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.005882:0.005882:0.011765:0.007831:0.011765:0.011765:0.011765:0.010441:0.006526:0.011765:0.011765:0.005882:0.011765:0.011765:0.011765:0.011765:0.011765:0.011765:0.011765:0.011765:0.011765:0.005882:0.005882:0.014357:0.011765:0.006526:0.009154:0.005882:0.011765:0.007831:0.011765:0.011765:0.011765:0.010441:0.010441:0.009154:0.005882:0.010441:0.005882:0.011765:0.005882:0.011765:0.006526:0.006526:0.005882:0.006526:0.011765:0.011765:0.005882:0.007831:0.010441:0.007831:0.005882:0.006526:0.011765
the left to fit back into the :@0.117647:0.322109:0.367776:0.322109:0.367776:0.305582:0.117647:0.305582:0.006526:0.011765:0.010441:0.005882:0.006526:0.010441:0.007831:0.006526:0.005882:0.006526:0.011765:0.005882:0.007831:0.006526:0.006526:0.005882:0.011765:0.010441:0.010441:0.011765:0.005882:0.006526:0.011765:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882
byte:@0.367775:0.322109:0.410888:0.322109:0.410888:0.305873:0.367775:0.305873:0.013070:0.011765:0.007831:0.010447
 value, resulting in the desired behavior, where –0:@0.410882:0.322109:0.880239:0.322109:0.880239:0.305582:0.410882:0.305582:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.005882:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.010441:0.009154:0.006526:0.007831:0.010441:0.011765:0.005882:0.011765:0.010441:0.011765:0.010441:0.011765:0.006526:0.011765:0.006893:0.005882:0.005882:0.016985:0.011765:0.010441:0.007831:0.010441:0.005882:0.011765:0.011765
is the same as 0, and 11111111 is the encoding for –1. Although we used a :@0.117647:0.343018:0.821121:0.343018:0.821121:0.326491:0.117647:0.326491:0.006526:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.010441:0.018291:0.010441:0.005882:0.010441:0.009154:0.005882:0.011765:0.005882:0.005882:0.010441:0.011765:0.011765:0.005882:0.010901:0.010901:0.010901:0.010901:0.010901:0.010901:0.010901:0.011765:0.005882:0.006526:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.010441:0.011765:0.011765:0.006526:0.011765:0.011765:0.005882:0.007831:0.011765:0.007831:0.005882:0.011765:0.011765:0.005882:0.005882:0.016985:0.006526:0.006526:0.011765:0.011765:0.011765:0.011765:0.011765:0.005882:0.016985:0.010441:0.005882:0.011765:0.009154:0.010441:0.011765:0.005882:0.010441:0.005882
byte:@0.821121:0.343018:0.864234:0.343018:0.864234:0.326782:0.821121:0.326782:0.013070:0.011765:0.007831:0.010447
value in the preceding example, the same basic principle applies to all of Java’s:@0.117647:0.363927:0.864815:0.363927:0.864815:0.347400:0.117647:0.347400:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.007831:0.010441:0.010441:0.010441:0.011765:0.006526:0.011765:0.011765:0.005882:0.010441:0.011765:0.010441:0.018291:0.011765:0.006526:0.010441:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.010441:0.018291:0.010441:0.005882:0.011765:0.010441:0.009154:0.006526:0.010441:0.005882:0.011765:0.007831:0.006526:0.011765:0.010441:0.006526:0.011765:0.006526:0.010441:0.005882:0.010441:0.011765:0.011765:0.006526:0.006526:0.010441:0.009154:0.005882:0.006526:0.011765:0.005882:0.010441:0.006526:0.006526:0.005882:0.011765:0.007831:0.005882:0.009154:0.010441:0.011765:0.010441:0.006526:0.009153
integer types.:@0.117647:0.384836:0.244357:0.384836:0.244357:0.368309:0.117647:0.368309:0.006526:0.011765:0.006526:0.010441:0.011765:0.010441:0.007831:0.005882:0.006526:0.011765:0.011765:0.010441:0.009154:0.005882
Because Java uses two’s complement to store negative numbers—and:@0.145882:0.407564:0.803015:0.407564:0.803015:0.391036:0.145882:0.391036:0.015680:0.010441:0.010441:0.010441:0.011765:0.009154:0.010441:0.005882:0.009154:0.010441:0.011765:0.010441:0.005882:0.011765:0.009154:0.010441:0.009154:0.005882:0.006526:0.016985:0.011765:0.006526:0.009154:0.005882:0.010441:0.011765:0.018291:0.011765:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.005882:0.006526:0.011765:0.005882:0.009154:0.006526:0.011765:0.007831:0.010441:0.005882:0.011765:0.010441:0.011765:0.010441:0.006526:0.006526:0.011765:0.010441:0.005882:0.011765:0.011765:0.018291:0.011765:0.010441:0.007831:0.009154:0.023529:0.010441:0.011765:0.011765
because all integers are signed values in Java—applying the bitwise operators:@0.117647:0.428473:0.849190:0.428473:0.849190:0.411945:0.117647:0.411945:0.011765:0.010441:0.010441:0.010441:0.011765:0.009154:0.010441:0.005882:0.010441:0.006526:0.006526:0.005882:0.006526:0.011765:0.006526:0.010441:0.011765:0.010441:0.007831:0.009154:0.005882:0.010441:0.007831:0.010441:0.005882:0.009154:0.006526:0.011765:0.011765:0.010441:0.011765:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.009154:0.005882:0.006526:0.011765:0.005882:0.009154:0.010441:0.011765:0.010441:0.023529:0.010441:0.011765:0.011765:0.006526:0.011765:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.006526:0.006526:0.016985:0.006526:0.009154:0.010441:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.006526:0.011765:0.007831:0.009153
can easily produce unexpected results. For example, turning on the high-order:@0.117647:0.449382:0.851843:0.449382:0.851843:0.432855:0.117647:0.432855:0.010441:0.010441:0.011765:0.005882:0.010441:0.010441:0.009154:0.006526:0.006526:0.011765:0.005882:0.011765:0.007831:0.011765:0.011765:0.011765:0.010441:0.010441:0.005882:0.011765:0.011765:0.010441:0.011765:0.011765:0.010441:0.010441:0.006526:0.010441:0.011765:0.005882:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.009154:0.005882:0.005882:0.013070:0.011765:0.007831:0.005882:0.010441:0.011765:0.010441:0.018291:0.011765:0.006526:0.010441:0.005882:0.005882:0.006526:0.011765:0.007831:0.011765:0.006526:0.011765:0.011765:0.005882:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.006526:0.011765:0.011765:0.007831:0.011765:0.007831:0.011765:0.010441:0.007835
bit will cause the resulting value to be interpreted as a negative number, whether:@0.117647:0.470291:0.874324:0.470291:0.874324:0.453764:0.117647:0.453764:0.011765:0.006526:0.006526:0.005882:0.016985:0.006526:0.006526:0.006526:0.005882:0.010441:0.010441:0.011765:0.009154:0.010441:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.006526:0.011765:0.011765:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.006526:0.011765:0.005882:0.011765:0.010441:0.005882:0.006526:0.011765:0.006526:0.010441:0.007831:0.011765:0.007831:0.010441:0.006526:0.010441:0.011765:0.005882:0.010441:0.009154:0.005882:0.010441:0.005882:0.011765:0.010441:0.011765:0.010441:0.006526:0.006526:0.011765:0.010441:0.005882:0.011765:0.011765:0.018291:0.011765:0.010441:0.006893:0.005882:0.005882:0.016985:0.011765:0.010441:0.006526:0.011765:0.010441:0.007835
this is what you intended or not. To avoid unpleasant surprises, just remember:@0.117647:0.491200:0.851567:0.491200:0.851567:0.474673:0.117647:0.474673:0.006526:0.011765:0.006526:0.009154:0.005882:0.006526:0.009154:0.005882:0.016985:0.011765:0.010441:0.006526:0.005882:0.011765:0.011765:0.011765:0.005882:0.006526:0.011765:0.006526:0.010441:0.011765:0.011765:0.010441:0.011765:0.005882:0.011765:0.007831:0.005882:0.011765:0.011765:0.006526:0.005882:0.005882:0.012721:0.011765:0.005882:0.010441:0.011765:0.011765:0.006526:0.011765:0.005882:0.011765:0.011765:0.011765:0.006526:0.010441:0.010441:0.009154:0.010441:0.011765:0.006526:0.005882:0.009154:0.011765:0.007831:0.011765:0.007831:0.006526:0.009154:0.010441:0.009154:0.005882:0.005882:0.006526:0.011765:0.009154:0.006526:0.005882:0.007831:0.010441:0.018291:0.010441:0.018291:0.011765:0.010441:0.007835
that the high-order bit determines the sign of an integer no matter how that high-:@0.117647:0.512109:0.875317:0.512109:0.875317:0.495582:0.117647:0.495582:0.006526:0.011765:0.010441:0.006526:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.006526:0.011765:0.011765:0.007831:0.011765:0.007831:0.011765:0.010441:0.007831:0.005882:0.011765:0.006526:0.006526:0.005882:0.011765:0.010441:0.006526:0.010441:0.007831:0.018291:0.006526:0.011765:0.010441:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.006526:0.011765:0.011765:0.005882:0.011765:0.007831:0.005882:0.010441:0.011765:0.005882:0.006526:0.011765:0.006526:0.010441:0.011765:0.010441:0.007831:0.005882:0.011765:0.011765:0.005882:0.018291:0.010441:0.006526:0.006526:0.010441:0.007831:0.005882:0.011765:0.011765:0.016985:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.011765:0.006526:0.011765:0.011765:0.007835
order bit gets set.:@0.117647:0.533018:0.279632:0.533018:0.279632:0.516491:0.117647:0.516491:0.011765:0.007831:0.011765:0.010441:0.007831:0.005882:0.011765:0.006526:0.006526:0.005882:0.011765:0.010441:0.006526:0.009154:0.005882:0.009154:0.010441:0.006526:0.005882
The Bitwise Logical Operators:@0.117647:0.588226:0.548384:0.588226:0.548384:0.565495:0.117647:0.565495:0.021967:0.018309:0.014614:0.008235:0.021967:0.009136:0.010956:0.023787:0.009136:0.012812:0.014614:0.008235:0.021967:0.016471:0.016471:0.009136:0.014614:0.016471:0.009136:0.008235:0.025607:0.018309:0.014614:0.014614:0.016471:0.010956:0.016471:0.014614:0.012814
The bitwise logical operators are  ,  ,  , and  . The following table shows the:@0.117647:0.617564:0.854124:0.617564:0.854124:0.601036:0.117647:0.601036:0.014357:0.011765:0.010441:0.005882:0.011765:0.006526:0.006526:0.016985:0.006526:0.009154:0.010441:0.005882:0.006526:0.011765:0.011765:0.006526:0.010441:0.010441:0.006526:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.006526:0.011765:0.007831:0.009154:0.005882:0.010441:0.007831:0.010441:0.005882:0.019595:0.005882:0.005882:0.005166:0.005882:0.005882:0.013658:0.005882:0.005882:0.010441:0.011765:0.011765:0.005882:0.012225:0.005882:0.005882:0.014357:0.011765:0.010441:0.005882:0.007831:0.011765:0.006526:0.006526:0.011765:0.016985:0.006526:0.011765:0.011765:0.005882:0.006526:0.010441:0.011765:0.006526:0.010441:0.005882:0.009154:0.011765:0.011765:0.016985:0.009154:0.005882:0.006526:0.011765:0.010447
& | ^:@0.431765:0.617564:0.493726:0.617564:0.493726:0.601327:0.431765:0.601327:0.019600:0.011760:0.005176:0.011754:0.013671
~:@0.545331:0.617564:0.557566:0.617564:0.557566:0.601327:0.545331:0.601327:0.012235
outcome of each operation. In the discussion that follows, keep in mind that the:@0.117647:0.638473:0.865576:0.638473:0.865576:0.621945:0.117647:0.621945:0.011765:0.011765:0.006526:0.010441:0.011765:0.018291:0.010441:0.005882:0.011765:0.007831:0.005882:0.010441:0.010441:0.010441:0.011765:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.005882:0.007831:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.006526:0.009154:0.010441:0.011765:0.009154:0.009154:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.007831:0.011765:0.006526:0.006526:0.011765:0.016985:0.009154:0.005882:0.005882:0.011765:0.010441:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882:0.018291:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.006526:0.011765:0.010447
bitwise operators are applied to each individual bit within each operand.:@0.117647:0.659382:0.796250:0.659382:0.796250:0.642855:0.117647:0.642855:0.011765:0.006526:0.006526:0.016985:0.006526:0.009154:0.010441:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.006526:0.011765:0.007831:0.009154:0.005882:0.010441:0.007831:0.010441:0.005882:0.010441:0.011765:0.011765:0.006526:0.006526:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882:0.010441:0.010441:0.010441:0.011765:0.005882:0.006526:0.011765:0.011765:0.006526:0.011765:0.006526:0.011765:0.011765:0.010441:0.006526:0.005882:0.011765:0.006526:0.006526:0.005882:0.016985:0.006526:0.006526:0.011765:0.006526:0.011765:0.005882:0.010441:0.010441:0.010441:0.011765:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.011765:0.011765:0.005882
The Bitwise NOT:@0.117647:0.853607:0.318967:0.853607:0.318967:0.834935:0.117647:0.834935:0.018033:0.015037:0.012004:0.006765:0.018033:0.007500:0.009007:0.019541:0.007500:0.010515:0.012004:0.006765:0.019541:0.021029:0.018048
Also called the :@0.117647:0.881200:0.264596:0.881200:0.264596:0.864673:0.117647:0.864673:0.016985:0.006526:0.009154:0.011765:0.005882:0.010441:0.010441:0.006526:0.006526:0.010441:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882
bitwise complement:@0.264595:0.881200:0.450750:0.881200:0.450750:0.864655:0.264595:0.864655:0.011765:0.006526:0.006526:0.015680:0.006526:0.009154:0.010441:0.005882:0.010441:0.011765:0.016985:0.011765:0.006526:0.010441:0.016985:0.010441:0.011765:0.006541
, the unary NOT operator, ~, inverts all of the:@0.450735:0.881200:0.877506:0.881200:0.877506:0.864673:0.450735:0.864673:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.011765:0.010441:0.007831:0.011765:0.005882:0.016985:0.016985:0.013934:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.006526:0.011765:0.006893:0.005882:0.005882:0.012721:0.005882:0.005882:0.006526:0.011765:0.011765:0.010441:0.007831:0.006526:0.009154:0.005882:0.010441:0.006526:0.006526:0.005882:0.011765:0.007831:0.005882:0.006526:0.011765:0.010447
bits of its operand. For example, the number 42, which has the following bit:@0.117647:0.902109:0.833618:0.902109:0.833618:0.885582:0.117647:0.885582:0.011765:0.006526:0.006526:0.009154:0.005882:0.011765:0.007831:0.005882:0.006526:0.006526:0.009154:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.011765:0.011765:0.005882:0.005882:0.013070:0.011765:0.007831:0.005882:0.010441:0.011765:0.010441:0.018291:0.011765:0.006526:0.010441:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.011765:0.018291:0.011765:0.010441:0.007831:0.005882:0.011765:0.011765:0.005882:0.005882:0.016985:0.011765:0.006526:0.010441:0.011765:0.005882:0.011765:0.010441:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.011765:0.006526:0.006526:0.011765:0.016985:0.006526:0.011765:0.011765:0.005882:0.011765:0.006526:0.006541