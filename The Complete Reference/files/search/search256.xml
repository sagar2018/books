The output from this program is shown here::@0.145882:0.111200:0.567240:0.111200:0.567240:0.094673:0.145882:0.094673:0.014357:0.011765:0.010441:0.005882:0.011765:0.011765:0.006526:0.011765:0.011765:0.006526:0.005882:0.007831:0.007831:0.011765:0.018291:0.005882:0.006526:0.011765:0.006526:0.009154:0.005882:0.011765:0.007831:0.011765:0.011765:0.007831:0.010441:0.018291:0.005882:0.006526:0.009154:0.005882:0.009154:0.011765:0.011765:0.016985:0.011765:0.005882:0.011765:0.010441:0.007831:0.010441:0.006541
Factorial of 3 is 6:@0.145882:0.144553:0.360338:0.144553:0.360338:0.132902:0.145882:0.132902:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
Factorial of 4 is 24:@0.145882:0.160916:0.371625:0.160916:0.371625:0.149265:0.145882:0.149265:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
Factorial of 5 is 120:@0.145882:0.177280:0.382912:0.177280:0.382912:0.165629:0.145882:0.165629:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
If you are unfamiliar with recursive methods, then the operation of :@0.145882:0.217564:0.779430:0.217564:0.779430:0.201036:0.145882:0.201036:0.007831:0.007831:0.005882:0.011765:0.011765:0.011765:0.005882:0.010441:0.007831:0.010441:0.005882:0.011765:0.011765:0.007831:0.010441:0.018291:0.006526:0.006526:0.006526:0.010441:0.007831:0.005882:0.016985:0.006526:0.006526:0.011765:0.005882:0.007831:0.010441:0.010441:0.011765:0.007831:0.009154:0.006526:0.011765:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.009154:0.005882:0.005882:0.006526:0.011765:0.010441:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.011765:0.007831:0.005882
fact( ):@0.779435:0.217564:0.838851:0.217564:0.838851:0.201327:0.779435:0.201327:0.007831:0.011765:0.010441:0.007831:0.007831:0.005882:0.007835
may seem a bit confusing. Here is how it works. When :@0.117647:0.238473:0.639596:0.238473:0.639596:0.221945:0.117647:0.221945:0.018291:0.010441:0.011765:0.005882:0.009154:0.010441:0.010441:0.018291:0.005882:0.010441:0.005882:0.011765:0.006526:0.006526:0.005882:0.010441:0.011765:0.011765:0.007831:0.011765:0.009154:0.006526:0.011765:0.011765:0.005882:0.005882:0.016985:0.010441:0.007831:0.010441:0.005882:0.006526:0.009154:0.005882:0.011765:0.011765:0.016985:0.005882:0.006526:0.006526:0.005882:0.016985:0.011765:0.007831:0.011765:0.009154:0.005882:0.005882:0.022206:0.011765:0.010441:0.011765:0.005882
fact( ):@0.639600:0.238473:0.699016:0.238473:0.699016:0.222236:0.639600:0.222236:0.007831:0.011765:0.010441:0.007831:0.007831:0.005882:0.007835
 is called with an:@0.699012:0.238473:0.858368:0.238473:0.858368:0.221945:0.699012:0.221945:0.005882:0.006526:0.009154:0.005882:0.010441:0.010441:0.006526:0.006526:0.010441:0.011765:0.005882:0.016985:0.006526:0.006526:0.011765:0.005882:0.010441:0.011765
argument of 1, the function returns 1; otherwise, it returns the product of :@0.117647:0.259382:0.806342:0.259382:0.806342:0.242855:0.117647:0.242855:0.010441:0.007408:0.011765:0.011765:0.018291:0.010441:0.011765:0.006526:0.005882:0.011765:0.007831:0.005882:0.011765:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.011765:0.011765:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.009154:0.005882:0.011765:0.006526:0.005882:0.011765:0.006526:0.011765:0.010441:0.007831:0.016985:0.006526:0.009154:0.010441:0.005882:0.005882:0.006526:0.006526:0.005882:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.007831:0.011765:0.011765:0.011765:0.010441:0.006526:0.005882:0.011765:0.007831:0.005882
fact(n–:@0.806341:0.259382:0.876874:0.259382:0.876874:0.243145:0.806341:0.243145:0.007831:0.011765:0.010441:0.007831:0.007831:0.013070:0.011765
1)*n:@0.117647:0.280291:0.162090:0.280291:0.162090:0.264055:0.117647:0.264055:0.011765:0.007831:0.011765:0.013082
. To evaluate this expression, :@0.162078:0.280291:0.440662:0.280291:0.440662:0.263764:0.162078:0.263764:0.005882:0.005882:0.012721:0.011765:0.005882:0.010441:0.011765:0.010441:0.006526:0.011765:0.010441:0.006526:0.010441:0.005882:0.006526:0.011765:0.006526:0.009154:0.005882:0.010441:0.011765:0.011765:0.007831:0.010441:0.009154:0.009154:0.006526:0.011765:0.011765:0.005882:0.005882
fact( ):@0.440659:0.280291:0.500075:0.280291:0.500075:0.264055:0.440659:0.264055:0.007831:0.011765:0.010441:0.007831:0.007831:0.005882:0.007835
 is called with :@0.500071:0.280291:0.637221:0.280291:0.637221:0.263764:0.500071:0.263764:0.005882:0.006526:0.009154:0.005882:0.010441:0.010441:0.006526:0.006526:0.010441:0.011765:0.005882:0.016985:0.006526:0.006526:0.011765:0.005882
n–1:@0.637224:0.280291:0.673823:0.280291:0.673823:0.264055:0.637224:0.264055:0.013070:0.011765:0.011765
. This process repeats:@0.673824:0.280291:0.876304:0.280291:0.876304:0.263764:0.673824:0.263764:0.005882:0.005882:0.014357:0.011765:0.006526:0.009154:0.005882:0.011765:0.007831:0.011765:0.010441:0.010441:0.009154:0.009154:0.005882:0.007831:0.010441:0.011765:0.010441:0.010441:0.006526:0.009153
until   equals 1 and the calls to the method begin returning.:@0.117647:0.301200:0.678107:0.301200:0.678107:0.284673:0.117647:0.284673:0.011765:0.011765:0.006526:0.006526:0.006526:0.005882:0.013070:0.005882:0.010441:0.011765:0.011765:0.010441:0.006526:0.009154:0.005882:0.011765:0.005882:0.010441:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.010441:0.006526:0.006526:0.009154:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.005882:0.011765:0.010441:0.011765:0.006526:0.011765:0.005882:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.006526:0.011765:0.011765:0.005882
n:@0.166636:0.301200:0.179719:0.301200:0.179719:0.284964:0.166636:0.284964:0.013082
To better understand how the :@0.145882:0.323927:0.425772:0.323927:0.425772:0.307400:0.145882:0.307400:0.012721:0.011765:0.005882:0.011765:0.010441:0.006526:0.006526:0.010441:0.007831:0.005882:0.011765:0.011765:0.011765:0.010441:0.007831:0.009154:0.006526:0.010441:0.011765:0.011765:0.005882:0.011765:0.011765:0.016985:0.005882:0.006526:0.011765:0.010441:0.005882
fact( ):@0.425776:0.323927:0.485193:0.323927:0.485193:0.307691:0.425776:0.307691:0.007831:0.011765:0.010441:0.007831:0.007831:0.005882:0.007835
 method works, let’s go through a short:@0.485188:0.323927:0.853678:0.323927:0.853678:0.307400:0.485188:0.307400:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.005882:0.016985:0.011765:0.007831:0.011765:0.009154:0.005882:0.005882:0.006526:0.010441:0.006526:0.006526:0.009154:0.005882:0.011765:0.011765:0.005882:0.006526:0.011765:0.007831:0.011765:0.011765:0.011765:0.011765:0.005882:0.010441:0.005882:0.009154:0.011765:0.011765:0.007831:0.006541
example. When you compute the factorial of 3, the first call to :@0.117647:0.344836:0.709375:0.344836:0.709375:0.328309:0.117647:0.328309:0.010441:0.011765:0.010441:0.018291:0.011765:0.006526:0.010441:0.005882:0.005882:0.022206:0.011765:0.010441:0.011765:0.005882:0.011765:0.011765:0.011765:0.005882:0.010441:0.011765:0.018291:0.011765:0.011765:0.006526:0.010441:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.010441:0.010441:0.006526:0.011765:0.007831:0.006526:0.010441:0.006526:0.005882:0.011765:0.007831:0.005882:0.011765:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.006526:0.007831:0.009154:0.006526:0.005882:0.010441:0.010441:0.006526:0.006526:0.005882:0.006526:0.011765:0.005882
fact( ):@0.709376:0.344836:0.768793:0.344836:0.768793:0.328600:0.709376:0.328600:0.007831:0.011765:0.010441:0.007831:0.007831:0.005882:0.007835
 will cause:@0.768788:0.344836:0.869364:0.344836:0.869364:0.328309:0.768788:0.328309:0.005882:0.016985:0.006526:0.006526:0.006526:0.005882:0.010441:0.010441:0.011765:0.009154:0.010447
a second call to be made with an argument of 2. This invocation will cause :@0.117647:0.365745:0.826563:0.365745:0.826563:0.349218:0.117647:0.349218:0.010441:0.005882:0.009154:0.010441:0.010441:0.011765:0.011765:0.011765:0.005882:0.010441:0.010441:0.006526:0.006526:0.005882:0.006526:0.011765:0.005882:0.011765:0.010441:0.005882:0.018291:0.010441:0.011765:0.010441:0.005882:0.016985:0.006526:0.006526:0.011765:0.005882:0.010441:0.011765:0.005882:0.010441:0.007408:0.011765:0.011765:0.018291:0.010441:0.011765:0.006526:0.005882:0.011765:0.007831:0.005882:0.011765:0.005882:0.005882:0.014357:0.011765:0.006526:0.009154:0.005882:0.006526:0.011765:0.011765:0.011765:0.010441:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.016985:0.006526:0.006526:0.006526:0.005882:0.010441:0.010441:0.011765:0.009154:0.010441:0.005882
fact(:@0.826565:0.365745:0.872268:0.365745:0.872268:0.349509:0.826565:0.349509:0.007831:0.011765:0.010441:0.007831:0.007835
):@0.117647:0.386655:0.125482:0.386655:0.125482:0.370418:0.117647:0.370418:0.007835
 to be called a third time with an argument of 1. This call will return 1, which is:@0.125478:0.386655:0.873546:0.386655:0.873546:0.370127:0.125478:0.370127:0.005882:0.006526:0.011765:0.005882:0.011765:0.010441:0.005882:0.010441:0.010441:0.006526:0.006526:0.010441:0.011765:0.005882:0.010441:0.005882:0.006526:0.011765:0.006526:0.007831:0.011765:0.005882:0.006526:0.006526:0.018291:0.010441:0.005882:0.016985:0.006526:0.006526:0.011765:0.005882:0.010441:0.011765:0.005882:0.010441:0.007408:0.011765:0.011765:0.018291:0.010441:0.011765:0.006526:0.005882:0.011765:0.007831:0.005882:0.011765:0.005882:0.005882:0.014357:0.011765:0.006526:0.009154:0.005882:0.010441:0.010441:0.006526:0.006526:0.005882:0.016985:0.006526:0.006526:0.006526:0.005882:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.005882:0.011765:0.005882:0.005882:0.016985:0.011765:0.006526:0.010441:0.011765:0.005882:0.006526:0.009153
then multiplied by 2 (the value of   in the second invocation). This result (which:@0.117647:0.407564:0.877318:0.407564:0.877318:0.391036:0.117647:0.391036:0.006526:0.011765:0.010441:0.011765:0.005882:0.018291:0.011765:0.006526:0.006526:0.006526:0.011765:0.006526:0.006526:0.010441:0.011765:0.005882:0.011765:0.011765:0.005882:0.011765:0.005882:0.007831:0.006526:0.011765:0.010441:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.011765:0.007831:0.005882:0.013071:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.010441:0.010441:0.011765:0.011765:0.011765:0.005882:0.006526:0.011765:0.011765:0.011765:0.010441:0.010441:0.006526:0.006526:0.011765:0.011765:0.007831:0.005882:0.005882:0.014357:0.011765:0.006526:0.009154:0.005882:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.005882:0.007831:0.016985:0.011765:0.006526:0.010441:0.011765
n:@0.438365:0.407564:0.451447:0.407564:0.451447:0.391327:0.438365:0.391327:0.013082
is 2) is then returned to the original invocation of :@0.117647:0.428473:0.585331:0.428473:0.585331:0.411945:0.117647:0.411945:0.006526:0.009154:0.005882:0.011765:0.007831:0.005882:0.006526:0.009154:0.005882:0.006526:0.011765:0.010441:0.011765:0.005882:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.007831:0.006526:0.011765:0.006526:0.011765:0.010441:0.006526:0.005882:0.006526:0.011765:0.011765:0.011765:0.010441:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.011765:0.007831:0.005882
fact( ):@0.585329:0.428473:0.644746:0.428473:0.644746:0.412236:0.585329:0.412236:0.007831:0.011765:0.010441:0.007831:0.007831:0.005882:0.007835
 and multiplied by 3 (the:@0.644741:0.428473:0.876641:0.428473:0.876641:0.411945:0.644741:0.411945:0.005882:0.010441:0.011765:0.011765:0.005882:0.018291:0.011765:0.006526:0.006526:0.006526:0.011765:0.006526:0.006526:0.010441:0.011765:0.005882:0.011765:0.011765:0.005882:0.011765:0.005882:0.007831:0.006526:0.011765:0.010447
original value of  ). This yields the answer, 6. You might find it interesting to:@0.117647:0.449382:0.847904:0.449382:0.847904:0.432855:0.117647:0.432855:0.011765:0.007831:0.006526:0.011765:0.006526:0.011765:0.010441:0.006526:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.011765:0.007831:0.005882:0.013069:0.007831:0.005882:0.005882:0.014357:0.011765:0.006526:0.009154:0.005882:0.011765:0.006526:0.010441:0.006526:0.011765:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.009154:0.016985:0.010441:0.006893:0.005882:0.005882:0.011765:0.005882:0.005882:0.014632:0.011765:0.011765:0.005882:0.018291:0.006526:0.011765:0.011765:0.006526:0.005882:0.007831:0.006526:0.011765:0.011765:0.005882:0.006526:0.006526:0.005882:0.006526:0.011765:0.006526:0.010441:0.007831:0.010441:0.009154:0.006526:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765
n:@0.278971:0.449382:0.292053:0.449382:0.292053:0.433145:0.278971:0.433145:0.013082
insert :@0.117647:0.470291:0.175772:0.470291:0.175772:0.453764:0.117647:0.453764:0.006526:0.011765:0.009154:0.010441:0.007831:0.006526:0.005882
println( ):@0.175772:0.470291:0.267853:0.470291:0.267853:0.454055:0.175772:0.454055:0.013070:0.010441:0.006526:0.013070:0.007831:0.006526:0.013070:0.007831:0.005882:0.007835
 statements into :@0.267849:0.470291:0.421342:0.470291:0.421342:0.453764:0.267849:0.453764:0.005882:0.009154:0.006526:0.010441:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.009154:0.005882:0.006526:0.011765:0.006526:0.011765:0.005882
fact( ):@0.421341:0.470291:0.480757:0.470291:0.480757:0.454055:0.421341:0.454055:0.007831:0.011765:0.010441:0.007831:0.007831:0.005882:0.007835
, which will show at what level each call:@0.480753:0.470291:0.862827:0.470291:0.862827:0.453764:0.480753:0.453764:0.005882:0.005882:0.016985:0.011765:0.006526:0.010441:0.011765:0.005882:0.016985:0.006526:0.006526:0.006526:0.005882:0.009154:0.011765:0.011765:0.016985:0.005882:0.010441:0.006526:0.005882:0.016985:0.011765:0.010441:0.006526:0.005882:0.006526:0.010441:0.011765:0.010441:0.006526:0.005882:0.010441:0.010441:0.010441:0.011765:0.005882:0.010441:0.010441:0.006526:0.006541
is and what the intermediate answers are.:@0.117647:0.491200:0.504926:0.491200:0.504926:0.474673:0.117647:0.474673:0.006526:0.009154:0.005882:0.010441:0.011765:0.011765:0.005882:0.016985:0.011765:0.010441:0.006526:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.011765:0.006526:0.010441:0.007831:0.018291:0.010441:0.011765:0.006526:0.010441:0.006526:0.010441:0.005882:0.010441:0.011765:0.009154:0.016985:0.010441:0.007831:0.009154:0.005882:0.010441:0.007831:0.010441:0.005882
When a method calls itself, new local variables and parameters are allocated:@0.145882:0.513927:0.864228:0.513927:0.864228:0.497400:0.145882:0.497400:0.022206:0.011765:0.010441:0.011765:0.005882:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.005882:0.010441:0.010441:0.006526:0.006526:0.009154:0.005882:0.006526:0.006526:0.009154:0.010441:0.006526:0.007831:0.005882:0.005882:0.011765:0.010441:0.016985:0.005882:0.006526:0.011765:0.010441:0.010441:0.006526:0.005882:0.011765:0.010441:0.007831:0.006526:0.010441:0.011765:0.006526:0.010441:0.009154:0.005882:0.010441:0.011765:0.011765:0.005882:0.011765:0.010441:0.007831:0.010441:0.018291:0.010441:0.006526:0.010441:0.007831:0.009154:0.005882:0.010441:0.007831:0.010441:0.005882:0.010441:0.006526:0.006526:0.011765:0.010441:0.010441:0.006526:0.010441:0.011765
storage on the stack, and the method code is executed with these new variables:@0.117647:0.534836:0.859649:0.534836:0.859649:0.518309:0.117647:0.518309:0.009154:0.006526:0.011765:0.007831:0.010441:0.011765:0.010441:0.005882:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.006526:0.010441:0.010441:0.011765:0.005882:0.005882:0.010441:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.005882:0.010441:0.011765:0.011765:0.010441:0.005882:0.006526:0.009154:0.005882:0.010441:0.011765:0.010441:0.010441:0.011765:0.006526:0.010441:0.011765:0.005882:0.016985:0.006526:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.009154:0.010441:0.005882:0.011765:0.010441:0.016985:0.005882:0.011765:0.010441:0.007831:0.006526:0.010441:0.011765:0.006526:0.010441:0.009153
from the start. As each recursive call returns, the old local variables and:@0.117647:0.555745:0.792941:0.555745:0.792941:0.539218:0.117647:0.539218:0.007831:0.007831:0.011765:0.018291:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.006526:0.010441:0.007831:0.006526:0.005882:0.005882:0.016985:0.009154:0.005882:0.010441:0.010441:0.010441:0.011765:0.005882:0.007831:0.010441:0.010441:0.011765:0.007831:0.009154:0.006526:0.011765:0.010441:0.005882:0.010441:0.010441:0.006526:0.006526:0.005882:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.009154:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.010441:0.006526:0.005882:0.011765:0.010441:0.007831:0.006526:0.010441:0.011765:0.006526:0.010441:0.009154:0.005882:0.010441:0.011765:0.011765
parameters are removed from the stack, and execution resumes at the point of the:@0.117647:0.576655:0.881807:0.576655:0.881807:0.560127:0.117647:0.560127:0.011765:0.010441:0.007831:0.010441:0.018291:0.010441:0.006526:0.010441:0.007831:0.009154:0.005882:0.010441:0.007831:0.010441:0.005882:0.007831:0.010441:0.018291:0.011765:0.011765:0.010441:0.011765:0.005882:0.007831:0.007831:0.011765:0.018291:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.006526:0.010441:0.010441:0.011765:0.005882:0.005882:0.010441:0.011765:0.011765:0.005882:0.010441:0.011765:0.010441:0.010441:0.011765:0.006526:0.006526:0.011765:0.011765:0.005882:0.007831:0.010441:0.009154:0.011765:0.018291:0.010441:0.009154:0.005882:0.010441:0.006526:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.011765:0.006526:0.011765:0.006526:0.005882:0.011765:0.007831:0.005882:0.006526:0.011765:0.010447
call inside the method. Recursive methods could be said to “telescope” out and:@0.117647:0.597564:0.860313:0.597564:0.860313:0.581036:0.117647:0.581036:0.010441:0.010441:0.006526:0.006526:0.005882:0.006526:0.011765:0.009154:0.006526:0.011765:0.010441:0.005882:0.006526:0.011765:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.005882:0.005882:0.015680:0.010441:0.010441:0.011765:0.007831:0.009154:0.006526:0.011765:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.009154:0.005882:0.010441:0.011765:0.011765:0.006526:0.011765:0.005882:0.011765:0.010441:0.005882:0.009154:0.010441:0.006526:0.011765:0.005882:0.006526:0.011765:0.005882:0.010441:0.006526:0.010441:0.006526:0.010441:0.009154:0.010441:0.011765:0.011765:0.010441:0.010441:0.005882:0.011765:0.011765:0.006526:0.005882:0.010441:0.011765:0.011765
back.:@0.117647:0.618473:0.167941:0.618473:0.167941:0.601945:0.117647:0.601945:0.011765:0.010441:0.010441:0.011765:0.005882
Recursive versions of many routines may execute a bit more slowly than the:@0.145882:0.641200:0.864399:0.641200:0.864399:0.624673:0.145882:0.624673:0.015680:0.010441:0.010441:0.011765:0.007831:0.009154:0.006526:0.011765:0.010441:0.005882:0.011765:0.010441:0.007831:0.009154:0.006526:0.011765:0.011765:0.009154:0.005882:0.011765:0.007831:0.005882:0.018291:0.010441:0.011765:0.011765:0.005882:0.007831:0.011765:0.011765:0.006526:0.006526:0.011765:0.010441:0.009154:0.005882:0.018291:0.010441:0.011765:0.005882:0.010441:0.011765:0.010441:0.010441:0.011765:0.006526:0.010441:0.005882:0.010441:0.005882:0.011765:0.006526:0.006526:0.005882:0.018291:0.011765:0.007831:0.010441:0.005882:0.009154:0.006526:0.011765:0.016985:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.011765:0.005882:0.006526:0.011765:0.010447
iterative equivalent because of the added overhead of the additional method:@0.117647:0.662109:0.829541:0.662109:0.829541:0.645582:0.117647:0.645582:0.006526:0.006526:0.010441:0.007831:0.010441:0.006526:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.006526:0.011765:0.010441:0.006526:0.010441:0.011765:0.006526:0.005882:0.011765:0.010441:0.010441:0.010441:0.011765:0.009154:0.010441:0.005882:0.011765:0.007831:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.010441:0.011765:0.005882:0.011765:0.011765:0.010441:0.007831:0.011765:0.010441:0.010441:0.011765:0.005882:0.011765:0.007831:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.006526:0.006526:0.006526:0.011765:0.011765:0.010441:0.006526:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765
calls. A large number of recursive calls to a method could cause a stack overrun.:@0.117647:0.683018:0.873566:0.683018:0.873566:0.666491:0.117647:0.666491:0.010441:0.010441:0.006526:0.006526:0.009154:0.005882:0.005882:0.015680:0.005882:0.006526:0.010441:0.007408:0.011765:0.010441:0.005882:0.011765:0.011765:0.018291:0.011765:0.010441:0.007831:0.005882:0.011765:0.007831:0.005882:0.007831:0.010441:0.010441:0.011765:0.007831:0.009154:0.006526:0.011765:0.010441:0.005882:0.010441:0.010441:0.006526:0.006526:0.009154:0.005882:0.006526:0.011765:0.005882:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.005882:0.010441:0.011765:0.011765:0.006526:0.011765:0.005882:0.010441:0.010441:0.011765:0.009154:0.010441:0.005882:0.010441:0.005882:0.009154:0.006526:0.010441:0.010441:0.011765:0.005882:0.011765:0.011765:0.010441:0.007831:0.007831:0.011765:0.011765:0.005882
Because storage for parameters and local variables is on the stack and each new:@0.117647:0.703927:0.868073:0.703927:0.868073:0.687400:0.117647:0.687400:0.015680:0.010441:0.010441:0.010441:0.011765:0.009154:0.010441:0.005882:0.009154:0.006526:0.011765:0.007831:0.010441:0.011765:0.010441:0.005882:0.007831:0.011765:0.007831:0.005882:0.011765:0.010441:0.007831:0.010441:0.018291:0.010441:0.006526:0.010441:0.007831:0.009154:0.005882:0.010441:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.010441:0.006526:0.005882:0.011765:0.010441:0.007831:0.006526:0.010441:0.011765:0.006526:0.010441:0.009154:0.005882:0.006526:0.009154:0.005882:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.006526:0.010441:0.010441:0.011765:0.005882:0.010441:0.011765:0.011765:0.005882:0.010441:0.010441:0.010441:0.011765:0.005882:0.011765:0.010441:0.016988
call creates a new copy of these variables, it is possible that the stack could be:@0.117647:0.724836:0.851771:0.724836:0.851771:0.708309:0.117647:0.708309:0.010441:0.010441:0.006526:0.006526:0.005882:0.010441:0.007831:0.010441:0.010441:0.006526:0.010441:0.009154:0.005882:0.010441:0.005882:0.011765:0.010441:0.016985:0.005882:0.010441:0.011765:0.011765:0.011765:0.005882:0.011765:0.007831:0.005882:0.006526:0.011765:0.010441:0.009154:0.010441:0.005882:0.011765:0.010441:0.007831:0.006526:0.010441:0.011765:0.006526:0.010441:0.009154:0.005882:0.005882:0.006526:0.006526:0.005882:0.006526:0.009154:0.005882:0.011765:0.011765:0.009154:0.009154:0.006526:0.011765:0.006526:0.010441:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.006526:0.010441:0.010441:0.011765:0.005882:0.010441:0.011765:0.011765:0.006526:0.011765:0.005882:0.011765:0.010447
exhausted. If this occurs, the Java run-time system will cause an exception.:@0.117647:0.745745:0.824375:0.745745:0.824375:0.729218:0.117647:0.729218:0.010441:0.011765:0.011765:0.010441:0.011765:0.009154:0.006526:0.010441:0.011765:0.005882:0.005882:0.007831:0.007831:0.005882:0.006526:0.011765:0.006526:0.009154:0.005882:0.011765:0.010441:0.010441:0.011765:0.007831:0.009154:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.010441:0.011765:0.010441:0.005882:0.007831:0.011765:0.011765:0.007831:0.006526:0.006526:0.018291:0.010441:0.005882:0.009154:0.011765:0.009154:0.006526:0.010441:0.018291:0.005882:0.016985:0.006526:0.006526:0.006526:0.005882:0.010441:0.010441:0.011765:0.009154:0.010441:0.005882:0.010441:0.011765:0.005882:0.010441:0.011765:0.010441:0.010441:0.011765:0.006526:0.006526:0.011765:0.011765:0.005882
However, this is typically not an issue unless a recursive routine runs wild.:@0.117647:0.766655:0.820882:0.766655:0.820882:0.750127:0.117647:0.750127:0.016985:0.011765:0.016985:0.010441:0.011765:0.010441:0.006893:0.005882:0.005882:0.006526:0.011765:0.006526:0.009154:0.005882:0.006526:0.009154:0.005882:0.006526:0.011765:0.011765:0.006526:0.010441:0.010441:0.006526:0.006526:0.011765:0.005882:0.011765:0.011765:0.006526:0.005882:0.010441:0.011765:0.005882:0.006526:0.009154:0.009154:0.011765:0.010441:0.005882:0.011765:0.011765:0.006526:0.010441:0.009154:0.009154:0.005882:0.010441:0.005882:0.007831:0.010441:0.010441:0.011765:0.007831:0.009154:0.006526:0.011765:0.010441:0.005882:0.007831:0.011765:0.011765:0.006526:0.006526:0.011765:0.010441:0.005882:0.007831:0.011765:0.011765:0.009154:0.005882:0.016985:0.006526:0.006526:0.011765:0.005882
The main advantage to recursive methods is that they can be used to create:@0.145882:0.789382:0.849307:0.789382:0.849307:0.772855:0.145882:0.772855:0.014357:0.011765:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.005882:0.010441:0.011765:0.011765:0.010441:0.011765:0.006526:0.010441:0.011765:0.010441:0.005882:0.006526:0.011765:0.005882:0.007831:0.010441:0.010441:0.011765:0.007831:0.009154:0.006526:0.011765:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.009154:0.005882:0.006526:0.009154:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.006526:0.011765:0.010441:0.011765:0.005882:0.010441:0.010441:0.011765:0.005882:0.011765:0.010441:0.005882:0.011765:0.009154:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882:0.010441:0.007831:0.010441:0.010441:0.006526:0.010447
clearer and simpler versions of several algorithms than can their iterative:@0.117647:0.810291:0.803370:0.810291:0.803370:0.793764:0.117647:0.793764:0.010441:0.006526:0.010441:0.010441:0.007831:0.010441:0.007831:0.005882:0.010441:0.011765:0.011765:0.005882:0.009154:0.006526:0.018291:0.011765:0.006526:0.010441:0.007831:0.005882:0.011765:0.010441:0.007831:0.009154:0.006526:0.011765:0.011765:0.009154:0.005882:0.011765:0.007831:0.005882:0.009154:0.010441:0.011765:0.010441:0.007831:0.010441:0.006526:0.005882:0.010441:0.006526:0.011765:0.011765:0.007831:0.006526:0.006526:0.011765:0.018291:0.009154:0.005882:0.006526:0.011765:0.010441:0.011765:0.005882:0.010441:0.010441:0.011765:0.005882:0.006526:0.011765:0.010441:0.006526:0.007831:0.005882:0.006526:0.006526:0.010441:0.007831:0.010441:0.006526:0.006526:0.011765:0.010447
relatives. For example, the QuickSort sorting algorithm is quite difficult to:@0.117647:0.831200:0.818695:0.831200:0.818695:0.814673:0.117647:0.814673:0.007831:0.010441:0.006526:0.010441:0.006526:0.006526:0.011765:0.010441:0.009154:0.005882:0.005882:0.013070:0.011765:0.007831:0.005882:0.010441:0.011765:0.010441:0.018291:0.011765:0.006526:0.010441:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.016985:0.011765:0.006526:0.010441:0.011765:0.013070:0.011765:0.007831:0.006526:0.005882:0.009154:0.011765:0.007831:0.006526:0.006526:0.011765:0.011765:0.005882:0.010441:0.006526:0.011765:0.011765:0.007831:0.006526:0.006526:0.011765:0.018291:0.005882:0.006526:0.009154:0.005882:0.011765:0.011765:0.006526:0.006526:0.010441:0.005882:0.011765:0.006526:0.007408:0.007831:0.006526:0.010441:0.011765:0.006526:0.006526:0.005882:0.006526:0.011765
implement in an iterative way. Also, some types of AI-related algorithms are:@0.117647:0.852109:0.839124:0.852109:0.839124:0.835582:0.117647:0.835582:0.006526:0.018291:0.011765:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.005882:0.006526:0.011765:0.005882:0.010441:0.011765:0.005882:0.006526:0.006526:0.010441:0.007831:0.010441:0.006526:0.006526:0.011765:0.010441:0.005882:0.016985:0.010441:0.010239:0.005882:0.005882:0.016985:0.006526:0.009154:0.011765:0.005882:0.005882:0.009154:0.011765:0.018291:0.010441:0.005882:0.006526:0.011765:0.011765:0.010441:0.009154:0.005882:0.011765:0.007831:0.005882:0.016985:0.007831:0.007831:0.007831:0.010441:0.006526:0.010441:0.006526:0.010441:0.011765:0.005882:0.010441:0.006526:0.011765:0.011765:0.007831:0.006526:0.006526:0.011765:0.018291:0.009154:0.005882:0.010441:0.007831:0.010447
most easily implemented using recursive solutions.:@0.117647:0.873018:0.598419:0.873018:0.598419:0.856491:0.117647:0.856491:0.018291:0.011765:0.009154:0.006526:0.005882:0.010441:0.010441:0.009154:0.006526:0.006526:0.011765:0.005882:0.006526:0.018291:0.011765:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.010441:0.011765:0.005882:0.011765:0.009154:0.006526:0.011765:0.011765:0.005882:0.007831:0.010441:0.010441:0.011765:0.007831:0.009154:0.006526:0.011765:0.010441:0.005882:0.009154:0.011765:0.006526:0.011765:0.006526:0.006526:0.011765:0.011765:0.009154:0.005882
When writing recursive methods, you must have an   statement somewhere:@0.145882:0.895745:0.859818:0.895745:0.859818:0.879218:0.145882:0.879218:0.022206:0.011765:0.010441:0.011765:0.005882:0.016985:0.007831:0.006526:0.006526:0.006526:0.011765:0.011765:0.005882:0.007831:0.010441:0.010441:0.011765:0.007831:0.009154:0.006526:0.011765:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.009154:0.005882:0.005882:0.011765:0.011765:0.011765:0.005882:0.018291:0.011765:0.009154:0.006526:0.005882:0.011765:0.010441:0.011765:0.010441:0.005882:0.010441:0.011765:0.005882:0.014353:0.005882:0.009154:0.006526:0.010441:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.005882:0.009154:0.011765:0.018291:0.010441:0.016985:0.011765:0.010441:0.007831:0.010447
if:@0.636471:0.895745:0.650832:0.895745:0.650832:0.879509:0.636471:0.879509:0.006526:0.007835