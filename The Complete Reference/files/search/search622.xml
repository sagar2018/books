returns the constant value 123.45. Therefore, it is similar to the following:@0.117647:0.111356:0.807390:0.111356:0.807390:0.094829:0.117647:0.094829:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.009154:0.006526:0.010441:0.011765:0.006526:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.011765:0.011765:0.011765:0.005882:0.011765:0.011765:0.005882:0.005882:0.014357:0.011765:0.010441:0.007831:0.010441:0.007831:0.011765:0.007831:0.010441:0.005882:0.005882:0.006526:0.006526:0.005882:0.006526:0.009154:0.005882:0.009154:0.006526:0.018291:0.006526:0.006526:0.010441:0.007831:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.011765:0.006526:0.006526:0.011765:0.016985:0.006526:0.011765:0.011765
method::@0.117647:0.132109:0.194740:0.132109:0.194740:0.115582:0.117647:0.115582:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.006541
double myMeth() { return 123.45; }:@0.117647:0.165462:0.501404:0.165462:0.501404:0.153811:0.117647:0.153811:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
Of course, the method defined by a lambda expression does not have a name.:@0.117647:0.205745:0.844688:0.205745:0.844688:0.189218:0.117647:0.189218:0.016985:0.007831:0.005882:0.010441:0.011765:0.011765:0.007831:0.009154:0.010441:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.005882:0.011765:0.010441:0.007831:0.006526:0.011765:0.010441:0.011765:0.005882:0.011765:0.011765:0.005882:0.010441:0.005882:0.006526:0.010441:0.018291:0.011765:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.007831:0.010441:0.009154:0.009154:0.006526:0.011765:0.011765:0.005882:0.011765:0.011765:0.010441:0.009154:0.005882:0.011765:0.011765:0.006526:0.005882:0.011765:0.010441:0.011765:0.010441:0.005882:0.010441:0.005882:0.011765:0.010441:0.018291:0.010441:0.005882
A slightly more interesting lambda expression is shown here::@0.145882:0.228473:0.720732:0.228473:0.720732:0.211945:0.145882:0.211945:0.015680:0.005882:0.009154:0.006526:0.006526:0.011765:0.011765:0.006526:0.006526:0.011765:0.005882:0.018291:0.011765:0.007831:0.010441:0.005882:0.006526:0.011765:0.006526:0.010441:0.007831:0.010441:0.009154:0.006526:0.006526:0.011765:0.011765:0.005882:0.006526:0.010441:0.018291:0.011765:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.007831:0.010441:0.009154:0.009154:0.006526:0.011765:0.011765:0.005882:0.006526:0.009154:0.005882:0.009154:0.011765:0.011765:0.016985:0.011765:0.005882:0.011765:0.010441:0.007831:0.010441:0.006541
() -> Math.random() * 100:@0.117647:0.261826:0.399824:0.261826:0.399824:0.250174:0.117647:0.250174:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
This lambda expression obtains a pseudo-random value from :@0.117647:0.302109:0.697721:0.302109:0.697721:0.285582:0.117647:0.285582:0.014357:0.011765:0.006526:0.009154:0.005882:0.006526:0.010441:0.018291:0.011765:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.007831:0.010441:0.009154:0.009154:0.006526:0.011765:0.011765:0.005882:0.011765:0.011765:0.006526:0.010441:0.006526:0.011765:0.009154:0.005882:0.010441:0.005882:0.011765:0.009154:0.010441:0.011765:0.011765:0.011765:0.007831:0.007831:0.010441:0.011765:0.011765:0.011765:0.018291:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.007831:0.007831:0.011765:0.018291:0.005882
Math.random( ):@0.697720:0.302109:0.859728:0.302109:0.859728:0.285873:0.697720:0.285873:0.022206:0.011765:0.007831:0.013070:0.005882:0.010441:0.011765:0.013070:0.013070:0.011765:0.019596:0.007831:0.005882:0.007835
,:@0.859725:0.302109:0.865607:0.302109:0.865607:0.285582:0.859725:0.285582:0.005882
multiplies it by 100, and returns the result. It, too, does not require a parameter.:@0.117647:0.323018:0.862923:0.323018:0.862923:0.306491:0.117647:0.306491:0.018291:0.011765:0.006526:0.006526:0.006526:0.011765:0.006526:0.006526:0.010441:0.009154:0.005882:0.006526:0.006526:0.005882:0.011765:0.011765:0.005882:0.011765:0.011765:0.011765:0.005882:0.005882:0.010441:0.011765:0.011765:0.005882:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.005882:0.005882:0.007831:0.006526:0.005882:0.005882:0.006526:0.011765:0.011765:0.005882:0.005882:0.011765:0.011765:0.010441:0.009154:0.005882:0.011765:0.011765:0.006526:0.005882:0.007831:0.010441:0.011765:0.011765:0.006526:0.007831:0.010441:0.005882:0.010441:0.005882:0.011765:0.010441:0.007831:0.010441:0.018291:0.010441:0.006526:0.010441:0.006526:0.005882
When a lambda expression requires a parameter, it is specified in the:@0.145882:0.345745:0.792837:0.345745:0.792837:0.329218:0.145882:0.329218:0.022206:0.011765:0.010441:0.011765:0.005882:0.010441:0.005882:0.006526:0.010441:0.018291:0.011765:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.007831:0.010441:0.009154:0.009154:0.006526:0.011765:0.011765:0.005882:0.007831:0.010441:0.011765:0.011765:0.006526:0.007831:0.010441:0.009154:0.005882:0.010441:0.005882:0.011765:0.010441:0.007831:0.010441:0.018291:0.010441:0.006526:0.010441:0.006893:0.005882:0.005882:0.006526:0.006526:0.005882:0.006526:0.009154:0.005882:0.009154:0.011765:0.010441:0.010441:0.006526:0.007831:0.006526:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.010447
parameter list on the left side of the lambda operator. Here is a simple example::@0.117647:0.366655:0.865438:0.366655:0.865438:0.350127:0.117647:0.350127:0.011765:0.010441:0.007831:0.010441:0.018291:0.010441:0.006526:0.010441:0.007831:0.005882:0.006526:0.006526:0.009154:0.006526:0.005882:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.010441:0.007831:0.006526:0.005882:0.009154:0.006526:0.011765:0.010441:0.005882:0.011765:0.007831:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.010441:0.018291:0.011765:0.011765:0.010441:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.006526:0.011765:0.006526:0.005882:0.005882:0.016985:0.010441:0.007831:0.010441:0.005882:0.006526:0.009154:0.005882:0.010441:0.005882:0.009154:0.006526:0.018291:0.011765:0.006526:0.010441:0.005882:0.010441:0.011765:0.010441:0.018291:0.011765:0.006526:0.010441:0.006541
(n) -> (n % 2)==0:@0.117647:0.400007:0.309529:0.400007:0.309529:0.388356:0.117647:0.388356:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011287:0.011294
This lambda expression returns :@0.117647:0.440291:0.418125:0.440291:0.418125:0.423764:0.117647:0.423764:0.014357:0.011765:0.006526:0.009154:0.005882:0.006526:0.010441:0.018291:0.011765:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.007831:0.010441:0.009154:0.009154:0.006526:0.011765:0.011765:0.005882:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.009154:0.005882
true:@0.418125:0.440291:0.459914:0.440291:0.459914:0.424055:0.418125:0.424055:0.007831:0.010441:0.013070:0.010447
 if the value of parameter   is even.:@0.459908:0.440291:0.793640:0.440291:0.793640:0.423764:0.459908:0.423764:0.005882:0.006526:0.007831:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.011765:0.007831:0.005882:0.011765:0.010441:0.007831:0.010441:0.018291:0.010441:0.006526:0.010441:0.007831:0.005882:0.013070:0.005882:0.006526:0.009154:0.005882:0.010441:0.011765:0.010441:0.011765:0.005882
n:@0.702831:0.440291:0.715913:0.440291:0.715913:0.424055:0.702831:0.424055:0.013082
Although it is possible to explicitly specify the type of a parameter, such as   in:@0.117647:0.461200:0.867886:0.461200:0.867886:0.444673:0.117647:0.444673:0.016985:0.006526:0.006526:0.011765:0.011765:0.011765:0.011765:0.011765:0.005882:0.006526:0.006526:0.005882:0.006526:0.009154:0.005882:0.011765:0.011765:0.009154:0.009154:0.006526:0.011765:0.006526:0.010441:0.005882:0.006526:0.011765:0.005882:0.010441:0.011765:0.011765:0.006526:0.006526:0.010441:0.006526:0.006526:0.006526:0.011765:0.005882:0.009154:0.011765:0.010441:0.010441:0.006526:0.007831:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.006526:0.011765:0.011765:0.010441:0.005882:0.011765:0.007831:0.005882:0.010441:0.005882:0.011765:0.010441:0.007831:0.010441:0.018291:0.010441:0.006526:0.010441:0.006893:0.005882:0.005882:0.009154:0.011765:0.010441:0.011765:0.005882:0.010441:0.009154:0.005882:0.013070:0.005882:0.006526:0.011765
n:@0.830643:0.461200:0.843726:0.461200:0.843726:0.444964:0.830643:0.444964:0.013082
this case, often you won’t need to do so because in many cases its type can be:@0.117647:0.482109:0.849510:0.482109:0.849510:0.465582:0.117647:0.465582:0.006526:0.011765:0.006526:0.009154:0.005882:0.010441:0.010441:0.009154:0.010441:0.005882:0.005882:0.011765:0.007831:0.006526:0.010441:0.011765:0.005882:0.011765:0.011765:0.011765:0.005882:0.016985:0.011765:0.011765:0.007408:0.006526:0.005882:0.011765:0.010441:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882:0.011765:0.011765:0.005882:0.009154:0.011765:0.005882:0.011765:0.010441:0.010441:0.010441:0.011765:0.009154:0.010441:0.005882:0.006526:0.011765:0.005882:0.018291:0.010441:0.011765:0.011765:0.005882:0.010441:0.010441:0.009154:0.010441:0.009154:0.005882:0.006526:0.006526:0.009154:0.005882:0.006526:0.011765:0.011765:0.010441:0.005882:0.010441:0.010441:0.011765:0.005882:0.011765:0.010447
inferred. Like a named method, a lambda expression can specify as many:@0.117647:0.503018:0.808033:0.503018:0.808033:0.486491:0.117647:0.486491:0.006526:0.011765:0.007831:0.010441:0.007831:0.007831:0.010441:0.011765:0.005882:0.005882:0.014357:0.006526:0.011765:0.010441:0.005882:0.010441:0.005882:0.011765:0.010441:0.018291:0.010441:0.011765:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.005882:0.005882:0.010441:0.005882:0.006526:0.010441:0.018291:0.011765:0.011765:0.010441:0.005882:0.010441:0.011765:0.011765:0.007831:0.010441:0.009154:0.009154:0.006526:0.011765:0.011765:0.005882:0.010441:0.010441:0.011765:0.005882:0.009154:0.011765:0.010441:0.010441:0.006526:0.007831:0.011765:0.005882:0.010441:0.009154:0.005882:0.018291:0.010441:0.011765:0.011765
parameters as needed.:@0.117647:0.523927:0.324669:0.523927:0.324669:0.507400:0.117647:0.507400:0.011765:0.010441:0.007831:0.010441:0.018291:0.010441:0.006526:0.010441:0.007831:0.009154:0.005882:0.010441:0.009154:0.005882:0.011765:0.010441:0.010441:0.011765:0.010441:0.011765:0.005882
Functional Interfaces:@0.117647:0.579135:0.418476:0.579135:0.418476:0.556404:0.117647:0.556404:0.020110:0.018309:0.018309:0.014614:0.010956:0.009136:0.016471:0.018309:0.016471:0.009136:0.008235:0.012812:0.018309:0.010956:0.014614:0.014614:0.010956:0.016471:0.014614:0.014614:0.012814
As stated, a functional interface is an interface that specifies only one abstract:@0.117647:0.608473:0.849740:0.608473:0.849740:0.591945:0.117647:0.591945:0.016985:0.009154:0.005882:0.009154:0.006526:0.010441:0.006526:0.010441:0.011765:0.005882:0.005882:0.010441:0.005882:0.007831:0.011765:0.011765:0.010441:0.006526:0.006526:0.011765:0.011765:0.010441:0.006526:0.005882:0.006526:0.011765:0.006526:0.010441:0.007831:0.007831:0.010441:0.010441:0.010441:0.005882:0.006526:0.009154:0.005882:0.010441:0.011765:0.005882:0.006526:0.011765:0.006526:0.010441:0.007831:0.007831:0.010441:0.010441:0.010441:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.009154:0.011765:0.010441:0.010441:0.006526:0.007831:0.006526:0.010441:0.009154:0.005882:0.011765:0.011765:0.006526:0.011765:0.005882:0.011765:0.011765:0.010441:0.005882:0.010441:0.011765:0.009154:0.006526:0.007831:0.010441:0.010441:0.006541
method. If you have been programming in Java for some time, you might at first:@0.117647:0.629382:0.874096:0.629382:0.874096:0.612855:0.117647:0.612855:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.005882:0.005882:0.007831:0.007831:0.005882:0.011765:0.011765:0.011765:0.005882:0.011765:0.010441:0.011765:0.010441:0.005882:0.011765:0.010441:0.010441:0.011765:0.005882:0.011765:0.007831:0.011765:0.011765:0.007831:0.010441:0.018291:0.018291:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.005882:0.009154:0.010441:0.011765:0.010441:0.005882:0.007831:0.011765:0.007831:0.005882:0.009154:0.011765:0.018291:0.010441:0.005882:0.006526:0.006526:0.018291:0.010441:0.005882:0.005882:0.011765:0.011765:0.011765:0.005882:0.018291:0.006526:0.011765:0.011765:0.006526:0.005882:0.010441:0.006526:0.005882:0.007831:0.006526:0.007831:0.009154:0.006541
think that all interface methods are implicitly abstract. Although this was true:@0.117647:0.650291:0.846513:0.650291:0.846513:0.633764:0.117647:0.633764:0.006526:0.011765:0.006526:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.010441:0.006526:0.006526:0.005882:0.006526:0.011765:0.006526:0.010441:0.007831:0.007831:0.010441:0.010441:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.009154:0.005882:0.010441:0.007831:0.010441:0.005882:0.006526:0.018291:0.011765:0.006526:0.006526:0.010441:0.006526:0.006526:0.006526:0.011765:0.005882:0.010441:0.011765:0.009154:0.006526:0.007831:0.010441:0.010441:0.006526:0.005882:0.005882:0.016985:0.006526:0.006526:0.011765:0.011765:0.011765:0.011765:0.011765:0.005882:0.006526:0.011765:0.006526:0.009154:0.005882:0.016985:0.010441:0.009154:0.005882:0.006526:0.007831:0.011765:0.010447
prior to JDK 8, the situation has changed. As explained in :@0.117647:0.671200:0.668346:0.671200:0.668346:0.654673:0.117647:0.654673:0.011765:0.007831:0.006526:0.011765:0.007831:0.005882:0.006526:0.011765:0.005882:0.009154:0.016985:0.016985:0.005882:0.011765:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.006526:0.006526:0.011765:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.011765:0.010441:0.009154:0.005882:0.010441:0.011765:0.010441:0.011765:0.011765:0.010441:0.011765:0.005882:0.005882:0.016985:0.009154:0.005882:0.010441:0.011765:0.011765:0.006526:0.010441:0.006526:0.011765:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882
Chapter 9:@0.668346:0.671200:0.760442:0.671200:0.760442:0.654673:0.668346:0.654673:0.015680:0.011765:0.010441:0.011765:0.006526:0.010441:0.007831:0.005882:0.011765
, beginning:@0.760441:0.671200:0.866287:0.671200:0.866287:0.654673:0.760441:0.654673:0.005882:0.005882:0.011765:0.010441:0.011765:0.006526:0.011765:0.011765:0.006526:0.011765:0.011765
with JDK 8, it is possible to specify a default implementation for a method:@0.117647:0.692109:0.820478:0.692109:0.820478:0.675582:0.117647:0.675582:0.016985:0.006526:0.006526:0.011765:0.005882:0.009154:0.016985:0.016985:0.005882:0.011765:0.005882:0.005882:0.006526:0.006526:0.005882:0.006526:0.009154:0.005882:0.011765:0.011765:0.009154:0.009154:0.006526:0.011765:0.006526:0.010441:0.005882:0.006526:0.011765:0.005882:0.009154:0.011765:0.010441:0.010441:0.006526:0.007831:0.011765:0.005882:0.010441:0.005882:0.011765:0.010441:0.007831:0.010441:0.011765:0.006526:0.006526:0.005882:0.006526:0.018291:0.011765:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.007831:0.011765:0.007831:0.005882:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765
declared in an interface. Private and static interface methods also supply an:@0.117647:0.713018:0.825588:0.713018:0.825588:0.696491:0.117647:0.696491:0.011765:0.010441:0.010441:0.006526:0.010441:0.007831:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882:0.010441:0.011765:0.005882:0.006526:0.011765:0.006526:0.010441:0.007831:0.007831:0.010441:0.010441:0.010441:0.005882:0.005882:0.013070:0.007831:0.006526:0.011765:0.010441:0.006526:0.010441:0.005882:0.010441:0.011765:0.011765:0.005882:0.009154:0.006526:0.010441:0.006526:0.006526:0.010441:0.005882:0.006526:0.011765:0.006526:0.010441:0.007831:0.007831:0.010441:0.010441:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.009154:0.005882:0.010441:0.006526:0.009154:0.011765:0.005882:0.009154:0.011765:0.011765:0.011765:0.006526:0.011765:0.005882:0.010441:0.011765
implementation. As a result, today, an interface method is abstract only if it does:@0.117647:0.733927:0.875072:0.733927:0.875072:0.717400:0.117647:0.717400:0.006526:0.018291:0.011765:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.005882:0.016985:0.009154:0.005882:0.010441:0.005882:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.005882:0.005882:0.006526:0.011765:0.011765:0.010441:0.010239:0.005882:0.005882:0.010441:0.011765:0.005882:0.006526:0.011765:0.006526:0.010441:0.007831:0.007831:0.010441:0.010441:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.005882:0.006526:0.009154:0.005882:0.010441:0.011765:0.009154:0.006526:0.007831:0.010441:0.010441:0.006526:0.005882:0.011765:0.011765:0.006526:0.011765:0.005882:0.006526:0.007831:0.005882:0.006526:0.006526:0.005882:0.011765:0.011765:0.010441:0.009153
not specify an implementation. Because non-default non-static, non-private:@0.117647:0.754836:0.826311:0.754836:0.826311:0.738309:0.117647:0.738309:0.011765:0.011765:0.006526:0.005882:0.009154:0.011765:0.010441:0.010441:0.006526:0.007831:0.011765:0.005882:0.010441:0.011765:0.005882:0.006526:0.018291:0.011765:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.005882:0.015680:0.010441:0.010441:0.010441:0.011765:0.009154:0.010441:0.005882:0.011765:0.011765:0.011765:0.007831:0.011765:0.010441:0.007831:0.010441:0.011765:0.006526:0.006526:0.005882:0.011765:0.011765:0.011765:0.007831:0.009154:0.006526:0.010441:0.006526:0.006526:0.010441:0.005882:0.005882:0.011765:0.011765:0.011765:0.007831:0.011765:0.007831:0.006526:0.011765:0.010441:0.006526:0.010447
interface methods are implicitly abstract, there is no need to use the :@0.117647:0.775745:0.758327:0.775745:0.758327:0.759218:0.117647:0.759218:0.006526:0.011765:0.006526:0.010441:0.007831:0.007831:0.010441:0.010441:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.009154:0.005882:0.010441:0.007831:0.010441:0.005882:0.006526:0.018291:0.011765:0.006526:0.006526:0.010441:0.006526:0.006526:0.006526:0.011765:0.005882:0.010441:0.011765:0.009154:0.006526:0.007831:0.010441:0.010441:0.006526:0.005882:0.005882:0.006526:0.011765:0.010441:0.007831:0.010441:0.005882:0.006526:0.009154:0.005882:0.011765:0.011765:0.005882:0.011765:0.010441:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882:0.011765:0.009154:0.010441:0.005882:0.006526:0.011765:0.010441:0.005882
abstract:@0.758327:0.775745:0.840629:0.775745:0.840629:0.759509:0.758327:0.759509:0.011765:0.013070:0.009154:0.007831:0.010441:0.011765:0.010441:0.007835
modifier (although you can specify it, if you like).:@0.117647:0.796655:0.589246:0.796655:0.589246:0.780127:0.117647:0.780127:0.018291:0.011765:0.011765:0.006526:0.007831:0.006526:0.010441:0.007831:0.005882:0.007831:0.010441:0.006526:0.006526:0.011765:0.011765:0.011765:0.011765:0.011765:0.005882:0.011765:0.011765:0.011765:0.005882:0.010441:0.010441:0.011765:0.005882:0.009154:0.011765:0.010441:0.010441:0.006526:0.007831:0.011765:0.005882:0.006526:0.006526:0.005882:0.005882:0.006526:0.007831:0.005882:0.011765:0.011765:0.011765:0.005882:0.006526:0.006526:0.011765:0.010441:0.007831:0.005882
Here is an example of a functional interface::@0.145882:0.819382:0.564482:0.819382:0.564482:0.802855:0.145882:0.802855:0.016985:0.010441:0.007831:0.010441:0.005882:0.006526:0.009154:0.005882:0.010441:0.011765:0.005882:0.010441:0.011765:0.010441:0.018291:0.011765:0.006526:0.010441:0.005882:0.011765:0.007831:0.005882:0.010441:0.005882:0.007831:0.011765:0.011765:0.010441:0.006526:0.006526:0.011765:0.011765:0.010441:0.006526:0.005882:0.006526:0.011765:0.006526:0.010441:0.007831:0.007831:0.010441:0.010441:0.010441:0.006541
In this case, the method :@0.117647:0.903018:0.346268:0.903018:0.346268:0.886491:0.117647:0.886491:0.007831:0.011765:0.005882:0.006526:0.011765:0.006526:0.009154:0.005882:0.010441:0.010441:0.009154:0.010441:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765:0.005882
getValue( ):@0.346268:0.903018:0.454490:0.903018:0.454490:0.886782:0.346268:0.886782:0.011765:0.010441:0.007831:0.014835:0.011765:0.006526:0.013070:0.010441:0.007831:0.005882:0.007835
 is implicitly abstract, and it is the only:@0.454485:0.903018:0.820900:0.903018:0.820900:0.886491:0.454485:0.886491:0.005882:0.006526:0.009154:0.005882:0.006526:0.018291:0.011765:0.006526:0.006526:0.010441:0.006526:0.006526:0.006526:0.011765:0.005882:0.010441:0.011765:0.009154:0.006526:0.007831:0.010441:0.010441:0.006526:0.005882:0.005882:0.010441:0.011765:0.011765:0.005882:0.006526:0.006526:0.005882:0.006526:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.011765:0.006526:0.011765