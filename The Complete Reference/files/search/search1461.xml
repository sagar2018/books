getCommonPoolParallelism( ):@0.117647:0.111200:0.420041:0.111200:0.420041:0.094964:0.117647:0.094964:0.011765:0.010441:0.007831:0.016985:0.011765:0.019596:0.019596:0.011765:0.013070:0.014357:0.011765:0.011765:0.006526:0.014357:0.011765:0.010441:0.011765:0.006526:0.006526:0.010441:0.006526:0.006526:0.009154:0.019596:0.007831:0.005882:0.007835
. Second, you can obtain the number of:@0.420035:0.111200:0.789139:0.111200:0.789139:0.094673:0.420035:0.094673:0.005882:0.005882:0.013070:0.010441:0.010441:0.011765:0.011765:0.011765:0.005882:0.005882:0.011765:0.011765:0.011765:0.005882:0.010441:0.010441:0.011765:0.005882:0.011765:0.011765:0.006526:0.010441:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.011765:0.018291:0.011765:0.010441:0.007831:0.005882:0.011765:0.007835
processors available in the system by calling :@0.117647:0.132109:0.542868:0.132109:0.542868:0.115582:0.117647:0.115582:0.011765:0.007831:0.011765:0.010441:0.010441:0.009154:0.009154:0.011765:0.007831:0.009154:0.005882:0.010441:0.011765:0.010441:0.006526:0.006526:0.010441:0.011765:0.006526:0.010441:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.011765:0.009154:0.006526:0.010441:0.018291:0.005882:0.011765:0.011765:0.005882:0.010441:0.010441:0.006526:0.006526:0.006526:0.011765:0.011765:0.005882
availableProcessors( ):@0.542871:0.132109:0.761257:0.132109:0.761257:0.115873:0.542871:0.115873:0.011765:0.011765:0.011765:0.006526:0.006526:0.011765:0.013070:0.006526:0.010441:0.014357:0.010018:0.011765:0.010441:0.010441:0.009154:0.009154:0.011765:0.010441:0.009154:0.007831:0.005882:0.007835
, which is:@0.761247:0.132109:0.852054:0.132109:0.852054:0.115582:0.761247:0.115582:0.005882:0.005882:0.016985:0.011765:0.006526:0.010441:0.011765:0.005882:0.006526:0.009153
defined by the :@0.117647:0.153018:0.258088:0.153018:0.258088:0.136491:0.117647:0.136491:0.011765:0.010441:0.007831:0.006526:0.011765:0.010441:0.011765:0.005882:0.011765:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882
Runtime:@0.258094:0.153018:0.345618:0.153018:0.345618:0.136782:0.258094:0.136782:0.016985:0.013070:0.013070:0.007831:0.006526:0.019596:0.010447
 class. It is shown here::@0.345612:0.153018:0.565112:0.153018:0.565112:0.136491:0.345612:0.136491:0.005882:0.010441:0.006526:0.010441:0.009154:0.009154:0.005882:0.005882:0.007831:0.006526:0.005882:0.006526:0.009154:0.005882:0.009154:0.011765:0.011765:0.016985:0.011765:0.005882:0.011765:0.010441:0.007831:0.010441:0.006541
int availableProcessors( ):@0.145882:0.192109:0.383607:0.192109:0.383607:0.175582:0.145882:0.175582:0.006526:0.011765:0.006526:0.005882:0.010441:0.011765:0.010441:0.006526:0.006526:0.010441:0.011765:0.006526:0.010441:0.013070:0.007831:0.011765:0.010441:0.010441:0.009154:0.009154:0.011765:0.007831:0.009154:0.007831:0.005882:0.007835
The value returned may change from one call to the next because of other system:@0.117647:0.231200:0.881835:0.231200:0.881835:0.214673:0.117647:0.214673:0.014357:0.011765:0.010441:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.010441:0.011765:0.005882:0.018291:0.010441:0.011765:0.005882:0.010441:0.011765:0.010441:0.011765:0.011765:0.010441:0.005882:0.007831:0.007831:0.011765:0.018291:0.005882:0.011765:0.011765:0.010441:0.005882:0.010441:0.010441:0.006526:0.006526:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.010441:0.011765:0.006526:0.005882:0.011765:0.010441:0.010441:0.010441:0.011765:0.009154:0.010441:0.005882:0.011765:0.007831:0.005882:0.011765:0.006526:0.011765:0.010441:0.007831:0.005882:0.009154:0.011765:0.009154:0.006526:0.010441:0.018306
demands.:@0.117647:0.252109:0.207151:0.252109:0.207151:0.235582:0.117647:0.235582:0.011765:0.010441:0.018291:0.010441:0.011765:0.011765:0.009154:0.005882
An Example that Uses RecursiveTask<V>:@0.117647:0.308226:0.704622:0.308226:0.704622:0.285495:0.117647:0.285495:0.023787:0.018309:0.008235:0.021967:0.016471:0.016471:0.027426:0.018309:0.009136:0.014614:0.008235:0.010956:0.018309:0.016471:0.010956:0.008235:0.023787:0.012812:0.014614:0.012812:0.008235:0.023787:0.014614:0.014614:0.018309:0.014614:0.012812:0.009136:0.016471:0.014614:0.018934:0.016471:0.012812:0.018309:0.018768:0.023787:0.018776
The two preceding examples are based on :@0.117647:0.336655:0.518033:0.336655:0.518033:0.320127:0.117647:0.320127:0.014357:0.011765:0.010441:0.005882:0.006526:0.016985:0.011765:0.005882:0.011765:0.007831:0.010441:0.010441:0.010441:0.011765:0.006526:0.011765:0.011765:0.005882:0.010441:0.011765:0.010441:0.018291:0.011765:0.006526:0.010441:0.009154:0.005882:0.010441:0.007831:0.010441:0.005882:0.011765:0.010441:0.009154:0.010441:0.011765:0.005882:0.011765:0.011765:0.005882
RecursiveAction:@0.518035:0.336655:0.683930:0.336655:0.683930:0.320418:0.518035:0.320418:0.016985:0.010441:0.010441:0.013070:0.010441:0.009154:0.006526:0.011765:0.010441:0.016985:0.010441:0.007831:0.006526:0.011765:0.013082
, which means that:@0.683918:0.336655:0.860293:0.336655:0.860293:0.320127:0.683918:0.320127:0.005882:0.005882:0.016985:0.011765:0.006526:0.010441:0.011765:0.005882:0.018291:0.010441:0.010441:0.011765:0.009154:0.005882:0.006526:0.011765:0.010441:0.006541
they concurrently execute tasks that do not return results. To create a task that:@0.117647:0.357564:0.848821:0.357564:0.848821:0.341036:0.117647:0.341036:0.006526:0.011765:0.010441:0.011765:0.005882:0.010441:0.011765:0.011765:0.010441:0.011765:0.007831:0.007831:0.010441:0.011765:0.006526:0.006526:0.011765:0.005882:0.010441:0.011765:0.010441:0.010441:0.011765:0.006526:0.010441:0.005882:0.006526:0.010441:0.009154:0.011765:0.009154:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.011765:0.011765:0.005882:0.011765:0.011765:0.006526:0.005882:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.005882:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.009154:0.005882:0.005882:0.012721:0.011765:0.005882:0.010441:0.007831:0.010441:0.010441:0.006526:0.010441:0.005882:0.010441:0.005882:0.006526:0.010441:0.009154:0.011765:0.005882:0.006526:0.011765:0.010441:0.006541
returns a result, use :@0.117647:0.378473:0.306415:0.378473:0.306415:0.361945:0.117647:0.361945:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.009154:0.005882:0.010441:0.005882:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.005882:0.005882:0.011765:0.009154:0.010441:0.005882
RecursiveTask:@0.306412:0.378473:0.453207:0.378473:0.453207:0.362236:0.306412:0.362236:0.016985:0.010441:0.010441:0.013070:0.010441:0.009154:0.006526:0.011765:0.010441:0.013529:0.011765:0.009154:0.013082
. In general, solutions are designed in the:@0.453200:0.378473:0.839254:0.378473:0.839254:0.361945:0.453200:0.361945:0.005882:0.005882:0.007831:0.011765:0.005882:0.011765:0.010441:0.011765:0.010441:0.007831:0.010441:0.006526:0.005882:0.005882:0.009154:0.011765:0.006526:0.011765:0.006526:0.006526:0.011765:0.011765:0.009154:0.005882:0.010441:0.007831:0.010441:0.005882:0.011765:0.010441:0.009154:0.006526:0.011765:0.011765:0.010441:0.011765:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.010447
same manner as just shown. The key difference is that the :@0.117647:0.399382:0.667186:0.399382:0.667186:0.382855:0.117647:0.382855:0.009154:0.010441:0.018291:0.010441:0.005882:0.018291:0.010441:0.011765:0.011765:0.010441:0.007831:0.005882:0.010441:0.009154:0.005882:0.006526:0.011765:0.009154:0.006526:0.005882:0.009154:0.011765:0.011765:0.016985:0.011765:0.005882:0.005881:0.014357:0.011765:0.010441:0.005882:0.011765:0.010441:0.011765:0.005882:0.011765:0.006526:0.007408:0.007831:0.010441:0.007831:0.010441:0.011765:0.010441:0.010441:0.005882:0.006526:0.009154:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.006526:0.011765:0.010441:0.005882
compute( ):@0.667188:0.399382:0.774950:0.399382:0.774950:0.383145:0.667188:0.383145:0.010441:0.011765:0.019596:0.013070:0.013070:0.007831:0.010441:0.007831:0.005882:0.007835
 method:@0.774941:0.399382:0.851375:0.399382:0.851375:0.382855:0.774941:0.382855:0.005882:0.018291:0.010441:0.006526:0.011765:0.011765:0.011765
returns a result. Thus, you must aggregate the results, so that when the first:@0.117647:0.420291:0.823122:0.420291:0.823122:0.403764:0.117647:0.403764:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.009154:0.005882:0.010441:0.005882:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.005882:0.005882:0.014357:0.011765:0.011765:0.009154:0.005882:0.005882:0.011765:0.011765:0.011765:0.005882:0.018291:0.011765:0.009154:0.006526:0.005882:0.010441:0.011765:0.011765:0.007831:0.010441:0.011765:0.010441:0.006526:0.010441:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.009154:0.005882:0.005882:0.009154:0.011765:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.016985:0.011765:0.010441:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.006526:0.007831:0.009154:0.006541
invocation finishes, it returns the overall result. Another difference is that you:@0.117647:0.441200:0.849393:0.441200:0.849393:0.424673:0.117647:0.424673:0.006526:0.011765:0.011765:0.011765:0.010441:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.007831:0.006526:0.011765:0.006526:0.009154:0.011765:0.010441:0.009154:0.005882:0.005882:0.006526:0.006526:0.005882:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.011765:0.010441:0.007831:0.010441:0.006526:0.006526:0.005882:0.007831:0.010441:0.009154:0.011765:0.006526:0.006526:0.005882:0.005882:0.016985:0.011765:0.011765:0.006526:0.011765:0.010441:0.007831:0.005882:0.011765:0.006526:0.007408:0.007831:0.010441:0.007831:0.010441:0.011765:0.010441:0.010441:0.005882:0.006526:0.009154:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.011765:0.011765:0.011765
will typically start a subtask by calling :@0.117647:0.462109:0.486673:0.462109:0.486673:0.445582:0.117647:0.445582:0.016985:0.006526:0.006526:0.006526:0.005882:0.006526:0.011765:0.011765:0.006526:0.010441:0.010441:0.006526:0.006526:0.011765:0.005882:0.009154:0.006526:0.010441:0.007831:0.006526:0.005882:0.010441:0.005882:0.009154:0.011765:0.011765:0.006526:0.010441:0.009154:0.011765:0.005882:0.011765:0.011765:0.005882:0.010441:0.010441:0.006526:0.006526:0.006526:0.011765:0.011765:0.005882
fork( ):@0.486671:0.462109:0.551326:0.462109:0.551326:0.445873:0.486671:0.445873:0.007831:0.011765:0.010441:0.013070:0.007831:0.005882:0.007835
 and :@0.551318:0.462109:0.597053:0.462109:0.597053:0.445582:0.551318:0.445582:0.005882:0.010441:0.011765:0.011765:0.005882
join( ):@0.597059:0.462109:0.657799:0.462109:0.657799:0.445873:0.597059:0.445873:0.007831:0.011765:0.006526:0.013070:0.007831:0.005882:0.007835
 explicitly (rather than:@0.657788:0.462109:0.867402:0.462109:0.867402:0.445582:0.657788:0.445582:0.005882:0.010441:0.011765:0.011765:0.006526:0.006526:0.010441:0.006526:0.006526:0.006526:0.011765:0.005882:0.007831:0.007831:0.010441:0.006526:0.011765:0.010441:0.007831:0.005882:0.006526:0.011765:0.010441:0.011765
implicitly by calling :@0.117647:0.483018:0.314228:0.483018:0.314228:0.466491:0.117647:0.466491:0.006526:0.018291:0.011765:0.006526:0.006526:0.010441:0.006526:0.006526:0.006526:0.011765:0.005882:0.011765:0.011765:0.005882:0.010441:0.010441:0.006526:0.006526:0.006526:0.011765:0.011765:0.005882
invokeAll( ):@0.314224:0.483018:0.432445:0.483018:0.432445:0.466782:0.314224:0.466782:0.006526:0.013070:0.011765:0.011765:0.013070:0.010441:0.016985:0.006526:0.006526:0.007831:0.005882:0.007835
, for example).:@0.432447:0.483018:0.570903:0.483018:0.570903:0.466491:0.432447:0.466491:0.005882:0.005882:0.007831:0.011765:0.007831:0.005882:0.010441:0.011765:0.010441:0.018291:0.011765:0.006526:0.010441:0.007831:0.005882
The following program demonstrates :@0.145882:0.505745:0.501213:0.505745:0.501213:0.489218:0.145882:0.489218:0.014357:0.011765:0.010441:0.005882:0.007831:0.011765:0.006526:0.006526:0.011765:0.016985:0.006526:0.011765:0.011765:0.005882:0.011765:0.007831:0.011765:0.011765:0.007831:0.010441:0.018291:0.005882:0.011765:0.010441:0.018291:0.011765:0.011765:0.009154:0.006526:0.007831:0.010441:0.006526:0.010441:0.009154:0.005882
RecursiveTask:@0.501212:0.505745:0.648007:0.505745:0.648007:0.489509:0.501212:0.489509:0.016985:0.010441:0.010441:0.013070:0.010441:0.009154:0.006526:0.011765:0.010441:0.013529:0.011765:0.009154:0.013082
. It creates a task called:@0.648000:0.505745:0.867393:0.505745:0.867393:0.489218:0.648000:0.489218:0.005882:0.005882:0.007831:0.006526:0.005882:0.010441:0.007831:0.010441:0.010441:0.006526:0.010441:0.009154:0.005882:0.010441:0.005882:0.006526:0.010441:0.009154:0.011765:0.005882:0.010441:0.010441:0.006526:0.006526:0.010441:0.011765
Sum:@0.117647:0.526655:0.163387:0.526655:0.163387:0.510418:0.117647:0.510418:0.013070:0.013070:0.019600
 that returns the summation of the values in an array of :@0.163388:0.526655:0.684620:0.526655:0.684620:0.510127:0.163388:0.510127:0.005882:0.006526:0.011765:0.010441:0.006526:0.005882:0.007831:0.010441:0.006526:0.011765:0.007831:0.011765:0.009154:0.005882:0.006526:0.011765:0.010441:0.005882:0.009154:0.011765:0.018291:0.018291:0.010441:0.006526:0.006526:0.011765:0.011765:0.005882:0.011765:0.007831:0.005882:0.006526:0.011765:0.010441:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.009154:0.005882:0.006526:0.011765:0.005882:0.010441:0.011765:0.005882:0.010441:0.007831:0.007831:0.010441:0.011765:0.005882:0.011765:0.007831:0.005882
double:@0.684612:0.526655:0.752559:0.526655:0.752559:0.510418:0.684612:0.510418:0.013070:0.011765:0.013070:0.013070:0.006526:0.010447
. In this:@0.752553:0.526655:0.823765:0.526655:0.823765:0.510127:0.752553:0.510127:0.005882:0.005882:0.007831:0.011765:0.005882:0.006526:0.011765:0.006526:0.009153
example, the array consists of 5,000 elements. However, every other value is:@0.117647:0.547564:0.839778:0.547564:0.839778:0.531036:0.117647:0.531036:0.010441:0.011765:0.010441:0.018291:0.011765:0.006526:0.010441:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.007831:0.007831:0.010441:0.011765:0.005882:0.010441:0.011765:0.011765:0.009154:0.006526:0.009154:0.006526:0.009154:0.005882:0.011765:0.007831:0.005882:0.011765:0.005882:0.011765:0.011765:0.011765:0.005882:0.010441:0.006526:0.010441:0.018291:0.010441:0.011765:0.006526:0.009154:0.005882:0.005882:0.016985:0.011765:0.016985:0.010441:0.011765:0.010441:0.006893:0.005882:0.005882:0.010441:0.011765:0.010441:0.007831:0.011765:0.005882:0.011765:0.006526:0.011765:0.010441:0.007831:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.005882:0.006526:0.009153
negative. Thus, the first values in the array are 0, –1, 2, –3, 4, and so on. (Notice:@0.117647:0.568473:0.873443:0.568473:0.873443:0.551945:0.117647:0.551945:0.011765:0.010441:0.011765:0.010441:0.006526:0.006526:0.011765:0.010441:0.005882:0.005882:0.014357:0.011765:0.011765:0.009154:0.005882:0.005882:0.006526:0.011765:0.010441:0.005882:0.007831:0.006526:0.007831:0.009154:0.006526:0.005882:0.011765:0.010441:0.006526:0.011765:0.010441:0.009154:0.005882:0.006526:0.011765:0.005882:0.006526:0.011765:0.010441:0.005882:0.010441:0.007831:0.007831:0.010441:0.011765:0.005882:0.010441:0.007831:0.010441:0.005882:0.011765:0.005882:0.005882:0.011765:0.011765:0.005882:0.005882:0.011765:0.005882:0.005882:0.011765:0.011765:0.005882:0.005882:0.011765:0.005882:0.005882:0.010441:0.011765:0.011765:0.005882:0.009154:0.011765:0.005882:0.011765:0.011765:0.005882:0.005882:0.007831:0.016985:0.011765:0.006526:0.006526:0.010441:0.010447
that this example creates its own pool. You might try changing it to use the:@0.117647:0.589382:0.821421:0.589382:0.821421:0.572855:0.117647:0.572855:0.006526:0.011765:0.010441:0.006526:0.005882:0.006526:0.011765:0.006526:0.009154:0.005882:0.010441:0.011765:0.010441:0.018291:0.011765:0.006526:0.010441:0.005882:0.010441:0.007831:0.010441:0.010441:0.006526:0.010441:0.009154:0.005882:0.006526:0.006526:0.009154:0.005882:0.011765:0.016985:0.011765:0.005882:0.011765:0.011765:0.011765:0.006526:0.005882:0.005882:0.014632:0.011765:0.011765:0.005882:0.018291:0.006526:0.011765:0.011765:0.006526:0.005882:0.006526:0.007831:0.011765:0.005882:0.010441:0.011765:0.010441:0.011765:0.011765:0.006526:0.011765:0.011765:0.005882:0.006526:0.006526:0.005882:0.006526:0.011765:0.005882:0.011765:0.009154:0.010441:0.005882:0.006526:0.011765:0.010447
common pool as an exercise.):@0.117647:0.610291:0.397872:0.610291:0.397872:0.593764:0.117647:0.593764:0.010441:0.011765:0.018291:0.018291:0.011765:0.011765:0.005882:0.011765:0.011765:0.011765:0.006526:0.005882:0.010441:0.009154:0.005882:0.010441:0.011765:0.005882:0.010441:0.011765:0.010441:0.007831:0.010441:0.006526:0.009154:0.010441:0.005882:0.007835