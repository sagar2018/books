4.2:@0.071429:0.063921:0.093750:0.063921:0.093750:0.051756:0.071429:0.051756:0.008929:0.004464:0.008929
Primitive Types and Values:@0.142857:0.063921:0.341952:0.063921:0.341952:0.051756:0.142857:0.051756:0.010911:0.006946:0.004964:0.012893:0.004964:0.004964:0.004964:0.007929:0.007929:0.005192:0.009929:0.007929:0.008929:0.007929:0.006946:0.005192:0.008929:0.008929:0.008929:0.005192:0.010911:0.008929:0.004964:0.008929:0.007929:0.006946
TYPES, VALUES, AND VARIABLES:@0.591558:0.063921:0.857135:0.063921:0.857135:0.051756:0.591558:0.051756:0.009929:0.009929:0.010911:0.010911:0.008929:0.004464:0.005192:0.010911:0.010911:0.009929:0.012893:0.010911:0.008929:0.004464:0.005192:0.010911:0.011911:0.012893:0.005192:0.010911:0.010911:0.010911:0.005946:0.010911:0.010911:0.009929:0.010911:0.008929
50:@0.071429:0.955624:0.093254:0.955624:0.093254:0.940874:0.071429:0.940874:0.010913:0.010913
Example 4.2.4-1. Floating-point Operations:@0.178571:0.117906:0.508946:0.117906:0.508946:0.105837:0.178571:0.105837:0.011911:0.008929:0.008929:0.014875:0.009929:0.004964:0.007929:0.004464:0.008929:0.004464:0.008929:0.004464:0.008929:0.005946:0.008929:0.004464:0.004464:0.010911:0.004964:0.008929:0.008929:0.005946:0.004964:0.009929:0.008929:0.005946:0.009929:0.008929:0.004964:0.009929:0.005946:0.004464:0.013893:0.009929:0.007929:0.007929:0.008929:0.005946:0.004964:0.008929:0.009929:0.006946
class Test { :@0.214286:0.146338:0.338095:0.146338:0.338095:0.136767:0.214286:0.136767:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
    public static void main(String[] args) { :@0.214286:0.161559:0.642857:0.161559:0.642857:0.151988:0.214286:0.151988:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        // An example of overflow: :@0.214286:0.176779:0.547619:0.176779:0.547619:0.167209:0.214286:0.167209:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        double d = 1e308; :@0.214286:0.192000:0.461905:0.192000:0.461905:0.182429:0.214286:0.182429:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        System.out.print(\overflow produces infinity: \); :@0.214286:0.207221:0.766667:0.207221:0.766667:0.197650:0.214286:0.197650:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        System.out.println(d + \*10==\ + d*10); :@0.214286:0.222441:0.671429:0.222441:0.671429:0.212871:0.214286:0.212871:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        // An example of gradual underflow: :@0.214286:0.237662:0.633333:0.237662:0.633333:0.228091:0.214286:0.228091:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        d = 1e-305 * Math.PI; :@0.214286:0.252883:0.500000:0.252883:0.500000:0.243312:0.214286:0.243312:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        System.out.print(\gradual underflow: \ + d + \\n   \); :@0.214286:0.268104:0.814286:0.268104:0.814286:0.258533:0.214286:0.258533:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        for (int i = 0; i < 4; i++) :@0.214286:0.283324:0.557143:0.283324:0.557143:0.273753:0.214286:0.273753:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
            System.out.print(\ \ + (d /= 100000)); :@0.214286:0.298545:0.700000:0.298545:0.700000:0.288974:0.214286:0.288974:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        System.out.println(); :@0.214286:0.313766:0.500000:0.313766:0.500000:0.304195:0.214286:0.304195:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        // An example of NaN: :@0.214286:0.328986:0.500000:0.328986:0.500000:0.319416:0.214286:0.319416:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        System.out.print(\0.0/0.0 is Not-a-Number: \); :@0.214286:0.344207:0.738095:0.344207:0.738095:0.334636:0.214286:0.334636:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        d = 0.0/0.0; :@0.214286:0.359428:0.414286:0.359428:0.414286:0.349857:0.214286:0.349857:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        System.out.println(d); :@0.214286:0.374648:0.509524:0.374648:0.509524:0.365078:0.214286:0.365078:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        // An example of inexact results and rounding: :@0.214286:0.389869:0.738095:0.389869:0.738095:0.380298:0.214286:0.380298:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        System.out.print(\inexact results with float:\); :@0.214286:0.405090:0.757143:0.405090:0.757143:0.395519:0.214286:0.395519:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        for (int i = 0; i < 100; i++) { :@0.214286:0.420311:0.595238:0.420311:0.595238:0.410740:0.214286:0.410740:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
            float z = 1.0f / i; :@0.214286:0.435531:0.519048:0.435531:0.519048:0.425960:0.214286:0.425960:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
            if (z * i != 1.0f) :@0.214286:0.450752:0.509524:0.450752:0.509524:0.441181:0.214286:0.441181:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
                System.out.print(\ \ + i); :@0.214286:0.465973:0.623810:0.465973:0.623810:0.456402:0.214286:0.456402:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        } :@0.214286:0.481193:0.309524:0.481193:0.309524:0.471623:0.214286:0.471623:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        System.out.println(); :@0.214286:0.496414:0.500000:0.496414:0.500000:0.486843:0.214286:0.486843:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        // Another example of inexact results and rounding: :@0.214286:0.511635:0.785714:0.511635:0.785714:0.502064:0.214286:0.502064:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        System.out.print(\inexact results with double:\); :@0.214286:0.526855:0.766667:0.526855:0.766667:0.517285:0.214286:0.517285:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        for (int i = 0; i < 100; i++) { :@0.214286:0.542076:0.595238:0.542076:0.595238:0.532505:0.214286:0.532505:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
            double z = 1.0 / i; :@0.214286:0.557297:0.519048:0.557297:0.519048:0.547726:0.214286:0.547726:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
            if (z * i != 1.0) :@0.214286:0.572518:0.500000:0.572518:0.500000:0.562947:0.214286:0.562947:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
                System.out.print(\ \ + i); :@0.214286:0.587738:0.623810:0.587738:0.623810:0.578167:0.214286:0.578167:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        } :@0.214286:0.602959:0.309524:0.602959:0.309524:0.593388:0.214286:0.593388:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        System.out.println(); :@0.214286:0.618180:0.500000:0.618180:0.500000:0.608609:0.214286:0.608609:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        // An example of cast to integer rounding: :@0.214286:0.633400:0.700000:0.633400:0.700000:0.623830:0.214286:0.623830:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        System.out.print(\cast to int rounds toward 0: \); :@0.214286:0.648621:0.776190:0.648621:0.776190:0.639050:0.214286:0.639050:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        d = 12345.6; :@0.214286:0.663842:0.414286:0.663842:0.414286:0.654271:0.214286:0.654271:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
        System.out.println((int)d + \ \ + (int)(-d)); :@0.214286:0.679062:0.728571:0.679062:0.728571:0.669492:0.214286:0.669492:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
    } :@0.214286:0.694283:0.271429:0.694283:0.271429:0.684712:0.214286:0.684712:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
}:@0.214286:0.709504:0.223810:0.709504:0.223810:0.699933:0.214286:0.699933:0.009524
This program produces the output::@0.178571:0.744368:0.425571:0.744368:0.425571:0.732040:0.178571:0.732040:0.010911:0.008929:0.004964:0.006946:0.004464:0.008929:0.005946:0.008929:0.008929:0.005946:0.007929:0.013893:0.004464:0.008929:0.005946:0.008929:0.008929:0.008929:0.007929:0.007929:0.006946:0.004464:0.004964:0.008929:0.007929:0.004464:0.008929:0.008929:0.004964:0.008929:0.008929:0.004964:0.004964
overflow produces infinity: 1.0e+308*10==Infinity:@0.214286:0.776475:0.680952:0.776475:0.680952:0.766904:0.214286:0.766904:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
gradual underflow: 3.141592653589793E-305:@0.214286:0.791696:0.604762:0.791696:0.604762:0.782125:0.214286:0.782125:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
3.1415926535898E-310 3.141592653E-315 3.142E-320 0.0:@0.214286:0.806916:0.709524:0.806916:0.709524:0.797346:0.214286:0.797346:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
0.0/0.0 is Not-a-Number: NaN:@0.214286:0.822137:0.480952:0.822137:0.480952:0.812566:0.214286:0.812566:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
inexact results with float: 0 41 47 55 61 82 83 94 97:@0.214286:0.837358:0.719048:0.837358:0.719048:0.827787:0.214286:0.827787:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
inexact results with double: 0 49 98:@0.214286:0.852578:0.557143:0.852578:0.557143:0.843008:0.214286:0.843008:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524
cast to int rounds toward 0: 12345 -12345:@0.214286:0.867799:0.604762:0.867799:0.604762:0.858228:0.214286:0.858228:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524:0.009524