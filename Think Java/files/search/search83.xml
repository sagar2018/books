6.8. More recursion:@0.145320:0.131763:0.342689:0.131763:0.342689:0.118359:0.145320:0.118359:0.010988:0.006105:0.010988:0.006105:0.017093:0.020845:0.010988:0.008976:0.010027:0.007325:0.008976:0.010027:0.009767:0.012209:0.008976:0.008669:0.006105:0.010988:0.012209
65:@0.758229:0.131763:0.780206:0.131763:0.780206:0.118359:0.758229:0.118359:0.010988:0.010988
factorial of 0 is 1, and the factorial of any other value, , is:@0.145320:0.171827:0.644462:0.171827:0.644462:0.158423:0.145320:0.158423:0.005845:0.009564:0.008501:0.007439:0.009564:0.007439:0.005313:0.009564:0.005313:0.006544:0.009564:0.005845:0.006564:0.009564:0.006544:0.005313:0.007544:0.006544:0.009564:0.005313:0.006603:0.009564:0.010627:0.010627:0.006544:0.007439:0.010627:0.008501:0.006544:0.005845:0.009564:0.008501:0.007439:0.009564:0.007439:0.005313:0.009564:0.005313:0.006564:0.009564:0.005845:0.006544:0.009564:0.010099:0.010095:0.006544:0.009564:0.007439:0.010627:0.008501:0.007439:0.006544:0.009041:0.009564:0.005313:0.010627:0.008501:0.005313:0.018007:0.005313:0.006603:0.005313:0.007544
n:@0.608271:0.171827:0.619689:0.171827:0.619689:0.158423:0.608271:0.158423:0.011418
n:@0.651007:0.171827:0.662425:0.171827:0.662425:0.158423:0.651007:0.158423:0.011418
multiplied by:@0.668974:0.171827:0.780200:0.171827:0.780200:0.158423:0.668974:0.158423:0.015413:0.010627:0.005313:0.007439:0.005313:0.010627:0.005313:0.005313:0.008501:0.010627:0.006544:0.010099:0.010095
the factorial of:@0.145320:0.190067:0.271917:0.190067:0.271917:0.176663:0.145320:0.176663:0.007439:0.010627:0.008501:0.008048:0.005845:0.009564:0.008501:0.007439:0.009564:0.007439:0.005313:0.009564:0.005313:0.008029:0.009564:0.005845
n:@0.279966:0.190067:0.291384:0.190067:0.291384:0.176663:0.279966:0.176663:0.011418
−:@0.296859:0.190067:0.312054:0.190067:0.312054:0.175818:0.296859:0.175818:0.015194
1. So 3! is 3 times 2!, which is 2 times 1!, which is 1:@0.317529:0.190067:0.780200:0.190067:0.780200:0.176663:0.317529:0.176663:0.009564:0.005313:0.013498:0.010627:0.009564:0.008048:0.009564:0.005313:0.008048:0.005313:0.007544:0.008029:0.009564:0.008048:0.007439:0.005313:0.015940:0.008501:0.007544:0.008048:0.009564:0.005313:0.005313:0.008458:0.013815:0.010627:0.005313:0.007974:0.010627:0.008029:0.005313:0.007544:0.008048:0.009564:0.008048:0.007439:0.005313:0.015940:0.008501:0.007544:0.008048:0.009564:0.005313:0.005313:0.008458:0.013815:0.010627:0.005313:0.007955:0.010627:0.008048:0.005313:0.007544:0.008048:0.009564
times 0!. Putting it all together, we get 3! equal to 3 times 2 times 1 times:@0.145320:0.208307:0.780188:0.208307:0.780188:0.194903:0.145320:0.194903:0.007439:0.005313:0.015940:0.008501:0.007544:0.006837:0.009564:0.005313:0.005313:0.009865:0.013014:0.010627:0.007439:0.007419:0.005313:0.010627:0.009564:0.006837:0.005313:0.007439:0.006837:0.009564:0.005313:0.005313:0.006818:0.007439:0.009564:0.009564:0.008501:0.007439:0.010627:0.008501:0.007439:0.005313:0.006954:0.013268:0.008501:0.006837:0.009564:0.008501:0.007439:0.006837:0.009564:0.005313:0.006818:0.008501:0.010095:0.010627:0.009564:0.005313:0.006837:0.007439:0.009564:0.006818:0.009564:0.006837:0.007439:0.005313:0.015940:0.008501:0.007544:0.006837:0.009564:0.006818:0.007439:0.005313:0.015940:0.008501:0.007544:0.006837:0.009564:0.006818:0.007439:0.005313:0.015940:0.008501:0.007544
1, which is 6.:@0.145320:0.226547:0.255414:0.226547:0.255414:0.213143:0.145320:0.213143:0.009564:0.005313:0.006368:0.013815:0.010627:0.005313:0.007974:0.010627:0.006368:0.005313:0.007544:0.006388:0.009564:0.005313
If you can write a recursive deﬁnition of something, you can usually write a:@0.145320:0.253983:0.780188:0.253983:0.780188:0.240578:0.145320:0.240578:0.006900:0.005845:0.006466:0.009568:0.009564:0.010627:0.006466:0.008501:0.009564:0.010627:0.006466:0.013815:0.007439:0.005313:0.007439:0.008501:0.006466:0.009564:0.006466:0.007439:0.008501:0.008501:0.010627:0.007439:0.007544:0.005313:0.009568:0.008501:0.006466:0.010627:0.008501:0.010627:0.010627:0.005313:0.007439:0.005313:0.009564:0.010627:0.006466:0.009564:0.005845:0.006466:0.007544:0.009564:0.015940:0.008501:0.007439:0.010627:0.005313:0.010627:0.009564:0.005313:0.006485:0.009568:0.009564:0.010627:0.006466:0.008501:0.009564:0.010627:0.006466:0.010627:0.007544:0.010627:0.009564:0.005313:0.005313:0.010095:0.006466:0.013815:0.007439:0.005313:0.007439:0.008501:0.006466:0.009564
Java method to evaluate it. The ﬁrst step is to decide what the parameters:@0.145320:0.272221:0.780204:0.272221:0.780204:0.258817:0.145320:0.258817:0.009826:0.009037:0.009021:0.009564:0.006583:0.015940:0.008501:0.007439:0.010627:0.010092:0.010627:0.006583:0.007439:0.009564:0.006564:0.008501:0.009041:0.009564:0.005313:0.010627:0.009564:0.007439:0.008501:0.006564:0.005313:0.007439:0.005313:0.009103:0.013815:0.010627:0.008501:0.006564:0.010627:0.007439:0.007544:0.007439:0.006583:0.007544:0.007439:0.008501:0.010627:0.006564:0.005313:0.007544:0.006583:0.007439:0.009564:0.006564:0.010627:0.008501:0.008501:0.005313:0.010627:0.008501:0.006583:0.013815:0.010627:0.009564:0.007439:0.006564:0.007439:0.010627:0.008501:0.006583:0.010627:0.009564:0.007439:0.009564:0.015940:0.008501:0.007439:0.008501:0.007439:0.007544
are and what the return type is. Since factorial is deﬁned for integers, the:@0.145320:0.290461:0.780188:0.290461:0.780188:0.277057:0.145320:0.277057:0.009564:0.007439:0.008501:0.007365:0.009564:0.010627:0.010627:0.007365:0.013815:0.010627:0.009564:0.007439:0.007345:0.007439:0.010627:0.008501:0.007365:0.007439:0.008501:0.007439:0.010627:0.007439:0.010627:0.007365:0.006911:0.010095:0.011154:0.008501:0.007365:0.005313:0.007544:0.005313:0.011447:0.010627:0.005313:0.010627:0.008501:0.008501:0.007365:0.005845:0.009564:0.008501:0.007439:0.009564:0.007439:0.005313:0.009564:0.005313:0.007365:0.005313:0.007544:0.007365:0.010627:0.008501:0.010627:0.010627:0.008501:0.010627:0.007345:0.005845:0.009564:0.007439:0.007365:0.005313:0.010099:0.007439:0.008501:0.009564:0.008501:0.007439:0.007544:0.005313:0.007599:0.007439:0.010627:0.008501
method takes an integer as a parameter and returns an integer::@0.145320:0.308701:0.676436:0.308701:0.676436:0.295297:0.145320:0.295297:0.015940:0.008501:0.007439:0.010627:0.010092:0.010627:0.006368:0.007439:0.009564:0.009568:0.008501:0.007544:0.006388:0.009564:0.010627:0.006368:0.005313:0.010099:0.007439:0.008501:0.009564:0.008501:0.007439:0.006368:0.009564:0.007544:0.006368:0.009564:0.006388:0.010627:0.009564:0.007439:0.009564:0.015940:0.008501:0.007439:0.008501:0.007439:0.006368:0.009564:0.010627:0.010627:0.006368:0.007439:0.008501:0.007439:0.010627:0.007439:0.010627:0.007544:0.006368:0.009564:0.010627:0.006388:0.005313:0.010099:0.007439:0.008501:0.009564:0.008501:0.007439:0.005313
public static int:@0.165425:0.332760:0.336314:0.332760:0.336314:0.320186:0.165425:0.320186:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010060:0.010033:0.010052:0.010052:0.010052:0.010052:0.010052:0.010060:0.010052:0.010052:0.010052
factorial(:@0.346374:0.332760:0.446880:0.332760:0.446880:0.320186:0.346374:0.320186:0.010052:0.010033:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
int:@0.446880:0.332760:0.477038:0.332760:0.477038:0.320186:0.446880:0.320186:0.010052:0.010052:0.010052
n) {:@0.487098:0.332760:0.527296:0.332760:0.527296:0.320186:0.487098:0.320186:0.010052:0.010052:0.010041:0.010052
}:@0.165425:0.351365:0.175477:0.351365:0.175477:0.338791:0.165425:0.338791:0.010052
If the argument happens to be zero, return 1::@0.145320:0.373346:0.526383:0.373346:0.526383:0.359942:0.145320:0.359942:0.006900:0.005845:0.006368:0.007439:0.010627:0.008501:0.006388:0.009564:0.007439:0.009564:0.010627:0.015940:0.008501:0.010080:0.007439:0.006388:0.010627:0.009564:0.010627:0.011154:0.008501:0.010627:0.007544:0.006368:0.007439:0.009564:0.006388:0.011154:0.008501:0.006368:0.008501:0.008501:0.007439:0.009564:0.005313:0.006368:0.007439:0.008501:0.007439:0.010627:0.007439:0.010627:0.006388:0.009564:0.005313
public static int:@0.165425:0.397404:0.336314:0.397404:0.336314:0.384830:0.165425:0.384830:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010060:0.010033:0.010052:0.010052:0.010052:0.010052:0.010052:0.010060:0.010052:0.010052:0.010052
factorial(:@0.346374:0.397404:0.446880:0.397404:0.446880:0.384830:0.346374:0.384830:0.010052:0.010033:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
int:@0.446880:0.397404:0.477038:0.397404:0.477038:0.384830:0.446880:0.384830:0.010052:0.010052:0.010052
n) {:@0.487098:0.397404:0.527296:0.397404:0.527296:0.384830:0.487098:0.384830:0.010052:0.010052:0.010041:0.010052
if:@0.185529:0.416009:0.205634:0.416009:0.205634:0.403435:0.185529:0.403435:0.010052:0.010052
(n == 0) {:@0.215695:0.416009:0.316204:0.416009:0.316204:0.403435:0.215695:0.403435:0.010052:0.010052:0.010041:0.010052:0.010052:0.010060:0.010052:0.010052:0.010041:0.010052
return:@0.205634:0.434614:0.265949:0.434614:0.265949:0.422040:0.205634:0.422040:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
1;:@0.275990:0.434614:0.296095:0.434614:0.296095:0.422040:0.275990:0.422040:0.010052:0.010052
}:@0.185529:0.453219:0.195582:0.453219:0.195582:0.440644:0.185529:0.440644:0.010052
}:@0.165425:0.471823:0.175477:0.471823:0.175477:0.459249:0.165425:0.459249:0.010052
That’s the base case.:@0.145320:0.493803:0.320976:0.493803:0.320976:0.480399:0.145320:0.480399:0.013815:0.010627:0.009564:0.007439:0.005313:0.007544:0.006368:0.007439:0.010627:0.008501:0.006388:0.010627:0.009564:0.007544:0.008501:0.006368:0.008501:0.009564:0.007544:0.008501:0.005313
Otherwise, and this is the interesting part, we have to make a recursive call:@0.145320:0.521239:0.780200:0.521239:0.780200:0.507835:0.145320:0.507835:0.014878:0.007439:0.010627:0.008501:0.007439:0.013815:0.005313:0.007544:0.008501:0.005313:0.006525:0.009564:0.010627:0.010627:0.006485:0.007439:0.010627:0.005313:0.007544:0.006485:0.005313:0.007544:0.006485:0.007439:0.010627:0.008501:0.006485:0.005313:0.010099:0.007439:0.008501:0.007439:0.008501:0.007544:0.007439:0.005313:0.010627:0.009564:0.006485:0.010627:0.009564:0.007439:0.007439:0.005313:0.006525:0.013287:0.008501:0.006485:0.010627:0.009037:0.009549:0.008501:0.006505:0.007439:0.009564:0.006485:0.015940:0.009564:0.009549:0.008501:0.006505:0.009564:0.006485:0.007439:0.008501:0.008501:0.010627:0.007439:0.007544:0.005313:0.009568:0.008501:0.006485:0.008501:0.009564:0.005313:0.005313
to ﬁnd the factorial of:@0.145320:0.539479:0.330216:0.539479:0.330216:0.526075:0.145320:0.526075:0.007439:0.009564:0.006368:0.010627:0.010627:0.010627:0.006388:0.007439:0.010627:0.008501:0.006368:0.005845:0.009564:0.008501:0.007439:0.009564:0.007439:0.005313:0.009564:0.005313:0.006368:0.009564:0.005845
n:@0.336595:0.539479:0.348013:0.539479:0.348013:0.526075:0.336595:0.526075:0.011418
−:@0.352353:0.539479:0.367547:0.539479:0.367547:0.525229:0.352353:0.525229:0.015194
1, and then multiply it by .:@0.371889:0.539479:0.612835:0.539479:0.612835:0.526075:0.371889:0.526075:0.009564:0.005313:0.006368:0.009564:0.010627:0.010627:0.006388:0.007439:0.010627:0.008501:0.010627:0.006368:0.015413:0.010627:0.005313:0.007439:0.005313:0.010627:0.005313:0.010095:0.006368:0.005313:0.007439:0.006368:0.010099:0.010095:0.017794:0.005313
n:@0.596105:0.539479:0.607523:0.539479:0.607523:0.526075:0.596105:0.526075:0.011418
public static int:@0.165425:0.563538:0.336314:0.563538:0.336314:0.550964:0.165425:0.550964:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010060:0.010033:0.010052:0.010052:0.010052:0.010052:0.010052:0.010060:0.010052:0.010052:0.010052
factorial(:@0.346374:0.563538:0.446880:0.563538:0.446880:0.550964:0.346374:0.550964:0.010052:0.010033:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
int:@0.446880:0.563538:0.477038:0.563538:0.477038:0.550964:0.446880:0.550964:0.010052:0.010052:0.010052
n) {:@0.487098:0.563538:0.527296:0.563538:0.527296:0.550964:0.487098:0.550964:0.010052:0.010052:0.010041:0.010052
if:@0.185529:0.582143:0.205634:0.582143:0.205634:0.569569:0.185529:0.569569:0.010052:0.010052
(n == 0) {:@0.215695:0.582143:0.316204:0.582143:0.316204:0.569569:0.215695:0.569569:0.010052:0.010052:0.010041:0.010052:0.010052:0.010060:0.010052:0.010052:0.010041:0.010052
return:@0.205634:0.600746:0.265949:0.600746:0.265949:0.588172:0.205634:0.588172:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
1;:@0.275990:0.600746:0.296095:0.600746:0.296095:0.588172:0.275990:0.588172:0.010052:0.010052
}:@0.185529:0.619351:0.195582:0.619351:0.195582:0.606777:0.185529:0.606777:0.010052
else:@0.205642:0.619351:0.245852:0.619351:0.245852:0.606777:0.205642:0.606777:0.010052:0.010052:0.010052:0.010052
{:@0.255893:0.619351:0.265946:0.619351:0.265946:0.606777:0.255893:0.606777:0.010052
int:@0.205634:0.637956:0.235792:0.637956:0.235792:0.625382:0.205634:0.625382:0.010052:0.010052:0.010052
recurse = factorial(n-1);:@0.245852:0.637956:0.497142:0.637956:0.497142:0.625382:0.245852:0.625382:0.010052:0.010033:0.010052:0.010052:0.010052:0.010052:0.010052:0.010060:0.010052:0.010060:0.010052:0.010052:0.010052:0.010033:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
int:@0.205634:0.656561:0.235792:0.656561:0.235792:0.643987:0.205634:0.643987:0.010052:0.010052:0.010052
result = n * recurse;:@0.245852:0.656561:0.456947:0.656561:0.456947:0.643987:0.245852:0.643987:0.010052:0.010033:0.010052:0.010052:0.010052:0.010052:0.010060:0.010052:0.010060:0.010052:0.010041:0.010052:0.010060:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
return:@0.205634:0.675166:0.265949:0.675166:0.265949:0.662591:0.205634:0.662591:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
result;:@0.275990:0.675166:0.346358:0.675166:0.346358:0.662591:0.275990:0.662591:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
}:@0.185529:0.693769:0.195582:0.693769:0.195582:0.681195:0.185529:0.681195:0.010052
}:@0.165425:0.712374:0.175477:0.712374:0.175477:0.699800:0.165425:0.699800:0.010052
The ﬂow of execution for this program is similar to:@0.145320:0.734355:0.591824:0.734355:0.591824:0.720951:0.145320:0.720951:0.013815:0.010627:0.008501:0.008361:0.010627:0.009037:0.013815:0.008380:0.009564:0.005845:0.008361:0.008501:0.010095:0.008501:0.008501:0.010627:0.007439:0.005313:0.009564:0.010627:0.008361:0.005845:0.009564:0.007439:0.008380:0.007439:0.010627:0.005313:0.007544:0.008361:0.010627:0.007439:0.009564:0.009564:0.007439:0.009564:0.015940:0.008361:0.005313:0.007544:0.008380:0.007544:0.005313:0.015940:0.005313:0.005313:0.009564:0.007439:0.008361:0.007439:0.009564
countdown:@0.600196:0.734778:0.690669:0.734778:0.690669:0.722204:0.600196:0.722204:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
from Sec-:@0.699034:0.734355:0.780189:0.734355:0.780189:0.720951:0.699034:0.720951:0.005845:0.007439:0.009564:0.015940:0.008361:0.010627:0.008501:0.008501:0.006376
tion 4.8. If we invoke:@0.145320:0.752595:0.322769:0.752595:0.322769:0.739191:0.145320:0.739191:0.007439:0.005313:0.009564:0.010627:0.006368:0.009564:0.005313:0.009564:0.005313:0.008498:0.006900:0.005845:0.006388:0.013287:0.008501:0.006368:0.005313:0.010099:0.009568:0.009564:0.009549:0.008501
factorial:@0.329150:0.753018:0.419623:0.753018:0.419623:0.740444:0.329150:0.740444:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
with the value 3::@0.425995:0.752595:0.566785:0.752595:0.566785:0.739191:0.425995:0.739191:0.013815:0.005313:0.007439:0.010627:0.006368:0.007439:0.010627:0.008501:0.006388:0.009021:0.009564:0.005313:0.010627:0.008501:0.006388:0.009545:0.005313
Since 3 is not zero, we take the second branch and calculate the factorial of:@0.145320:0.780031:0.780192:0.780031:0.780192:0.766626:0.145320:0.766626:0.010627:0.005313:0.010627:0.008501:0.008501:0.006544:0.009564:0.006544:0.005313:0.007544:0.006544:0.010627:0.009564:0.007439:0.006544:0.008501:0.008501:0.007439:0.009564:0.005313:0.006583:0.013287:0.008501:0.006544:0.007439:0.009564:0.009549:0.008501:0.006544:0.007439:0.010627:0.008501:0.006544:0.007544:0.008501:0.008501:0.009564:0.010627:0.010627:0.006544:0.010627:0.007439:0.009564:0.010627:0.007974:0.010627:0.006544:0.009564:0.010627:0.010627:0.006544:0.008501:0.009564:0.005313:0.008501:0.010627:0.005313:0.009564:0.007419:0.008501:0.006544:0.007439:0.010627:0.008501:0.006544:0.005845:0.009564:0.008501:0.007439:0.009564:0.007439:0.005313:0.009564:0.005313:0.006544:0.009564:0.005845
n:@0.145320:0.798269:0.156738:0.798269:0.156738:0.784865:0.145320:0.784865:0.011418
−:@0.161080:0.798269:0.176274:0.798269:0.176274:0.784020:0.161080:0.784020:0.015194
1...:@0.180614:0.798269:0.206119:0.798269:0.206119:0.784865:0.180614:0.784865:0.009564:0.005313:0.005313:0.005313
Since 2 is not zero, we take the second branch and calculate the:@0.193139:0.828456:0.732377:0.828456:0.732377:0.815052:0.193139:0.815052:0.010627:0.005313:0.010627:0.008501:0.008501:0.006661:0.009564:0.006661:0.005313:0.007544:0.006642:0.010627:0.009564:0.007439:0.006661:0.008501:0.008501:0.007439:0.009564:0.005313:0.006739:0.013268:0.008501:0.006661:0.007439:0.009564:0.009568:0.008501:0.006661:0.007439:0.010627:0.008501:0.006642:0.007544:0.008501:0.008501:0.009564:0.010627:0.010627:0.006661:0.010627:0.007439:0.009564:0.010627:0.007974:0.010627:0.006661:0.009564:0.010627:0.010627:0.006642:0.008501:0.009564:0.005313:0.008501:0.010627:0.005313:0.009564:0.007439:0.008501:0.006661:0.007439:0.010627:0.008501
factorial of:@0.193139:0.846696:0.283459:0.846696:0.283459:0.833292:0.193139:0.833292:0.005845:0.009564:0.008501:0.007439:0.009564:0.007439:0.005313:0.009564:0.005313:0.006368:0.009564:0.005845
n:@0.289840:0.846696:0.301258:0.846696:0.301258:0.833292:0.289840:0.833292:0.011418
−:@0.305598:0.846696:0.320792:0.846696:0.320792:0.832446:0.305598:0.832446:0.015194
1...:@0.325132:0.846696:0.350637:0.846696:0.350637:0.833292:0.325132:0.833292:0.009564:0.005313:0.005313:0.005313