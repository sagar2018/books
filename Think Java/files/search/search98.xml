80:@0.218575:0.131763:0.240552:0.131763:0.240552:0.118359:0.218575:0.118359:0.010988:0.010988
Chapter 7. Iteration and loops:@0.549824:0.131763:0.853443:0.131763:0.853443:0.118359:0.549824:0.118359:0.015872:0.012209:0.010683:0.012209:0.008546:0.010027:0.008976:0.007325:0.010988:0.006105:0.017093:0.008185:0.008546:0.010027:0.008976:0.010683:0.008546:0.006105:0.010988:0.012209:0.007325:0.010683:0.012209:0.012209:0.007325:0.006105:0.011594:0.010988:0.012209:0.008669
We can see that 1, 2, 4 and 8 are powers of two, because their logarithms base:@0.218575:0.171827:0.853443:0.171827:0.853443:0.158423:0.218575:0.158423:0.018050:0.008501:0.004903:0.008501:0.009564:0.010627:0.004884:0.007544:0.008501:0.008501:0.004884:0.007439:0.010627:0.009564:0.007439:0.004884:0.009564:0.005313:0.005196:0.009564:0.005313:0.005177:0.009564:0.004903:0.009564:0.010627:0.010627:0.004884:0.009564:0.004884:0.009564:0.007439:0.008501:0.004884:0.011174:0.009017:0.013287:0.008501:0.007439:0.007544:0.004884:0.009564:0.005845:0.004903:0.006892:0.013287:0.009564:0.005313:0.005196:0.011154:0.008501:0.008501:0.009564:0.010627:0.007544:0.008501:0.004884:0.007439:0.010627:0.008501:0.005313:0.007439:0.004884:0.005313:0.009564:0.009564:0.009564:0.007439:0.005313:0.007439:0.010627:0.015940:0.007544:0.004884:0.010627:0.009564:0.007544:0.008501
2 are round numbers. If we wanted to ﬁnd the logarithms of other powers of:@0.218575:0.190067:0.853459:0.190067:0.853459:0.176663:0.218575:0.176663:0.009564:0.005958:0.009564:0.007439:0.008501:0.005939:0.007439:0.009564:0.010627:0.010627:0.010627:0.005958:0.010080:0.010627:0.015413:0.011154:0.008501:0.007439:0.007544:0.005313:0.008361:0.006900:0.005845:0.005958:0.013287:0.008501:0.005939:0.013287:0.009564:0.010099:0.007439:0.008501:0.010627:0.005939:0.007439:0.009564:0.005958:0.010627:0.010627:0.010627:0.005939:0.007439:0.010627:0.008501:0.005958:0.005313:0.009564:0.009564:0.009564:0.007439:0.005313:0.007439:0.010627:0.015940:0.007544:0.005939:0.009564:0.005845:0.005958:0.009564:0.007439:0.010627:0.008501:0.007439:0.005939:0.011154:0.009037:0.013287:0.008501:0.007439:0.007544:0.005958:0.009564:0.005845
two, we could modify the program like this::@0.218575:0.208307:0.584221:0.208307:0.584221:0.194903:0.218575:0.194903:0.006911:0.013287:0.009564:0.005313:0.006368:0.013287:0.008501:0.006368:0.008501:0.009564:0.010627:0.005313:0.010627:0.006368:0.015940:0.010092:0.010627:0.005313:0.005845:0.010095:0.006388:0.007439:0.010627:0.008501:0.006368:0.010627:0.007439:0.009564:0.009564:0.007439:0.009564:0.015940:0.006368:0.005313:0.005313:0.009568:0.008501:0.006368:0.007439:0.010627:0.005313:0.007544:0.005313
double:@0.258784:0.232366:0.319100:0.232366:0.319100:0.219792:0.258784:0.219792:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
x = 1.0;:@0.329140:0.232366:0.409576:0.232366:0.409576:0.219792:0.329140:0.219792:0.010052:0.010060:0.010052:0.010060:0.010052:0.010052:0.010052:0.010052
while:@0.258784:0.250971:0.309047:0.250971:0.309047:0.238397:0.258784:0.238397:0.010052:0.010052:0.010052:0.010052:0.010052
(x < 100.0) {:@0.319107:0.250971:0.449775:0.250971:0.449775:0.238397:0.319107:0.238397:0.010033:0.010052:0.010060:0.010052:0.010060:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010041:0.010052
System.out.println(x +:@0.278889:0.269575:0.500033:0.269575:0.500033:0.257001:0.278889:0.257001:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010041:0.010052
\:@0.510093:0.269575:0.520146:0.269575:0.520146:0.257001:0.510093:0.257001:0.010052
\:@0.550307:0.269575:0.560360:0.269575:0.560360:0.257001:0.550307:0.257001:0.010052
+ Math.log(x) / Math.log(2.0));:@0.570400:0.269575:0.882013:0.269575:0.882013:0.257001:0.570400:0.257001:0.010052:0.010060:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010041:0.010052:0.010060:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010033:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
x = x * 2.0;:@0.278889:0.288179:0.399511:0.288179:0.399511:0.275605:0.278889:0.275605:0.010052:0.010060:0.010052:0.010041:0.010052:0.010060:0.010052:0.010041:0.010052:0.010052:0.010052:0.010052
}:@0.258784:0.306784:0.268837:0.306784:0.268837:0.294210:0.258784:0.294210:0.010052
Now instead of adding something to:@0.218575:0.328598:0.530121:0.328598:0.530121:0.315193:0.218575:0.315193:0.014338:0.009037:0.013815:0.008185:0.005313:0.010627:0.007544:0.007439:0.008482:0.009564:0.010627:0.008185:0.009564:0.005845:0.008185:0.009564:0.010627:0.010627:0.005313:0.010627:0.009564:0.008185:0.007544:0.009564:0.015921:0.008501:0.007439:0.010627:0.005313:0.010627:0.009564:0.008185:0.007439:0.009564
x:@0.538302:0.329020:0.548355:0.329020:0.548355:0.316446:0.538302:0.316446:0.010052
each time through the loop, which:@0.556534:0.328598:0.853449:0.328598:0.853449:0.315193:0.556534:0.315193:0.008501:0.009564:0.007974:0.010627:0.008166:0.007439:0.005313:0.015940:0.008501:0.008185:0.007439:0.010627:0.007439:0.009564:0.010627:0.009564:0.010627:0.008185:0.007439:0.010627:0.008501:0.008166:0.005313:0.010111:0.009564:0.010627:0.005313:0.008615:0.013815:0.010627:0.005313:0.007974:0.010627
yields an arithmetic sequence, we multiply:@0.218575:0.346837:0.576997:0.346837:0.576997:0.333433:0.218575:0.333433:0.010095:0.005313:0.008501:0.005313:0.010627:0.007544:0.006896:0.009564:0.010627:0.006896:0.009564:0.007439:0.005313:0.007439:0.010627:0.015940:0.008501:0.007439:0.005313:0.008501:0.006896:0.007564:0.008482:0.010095:0.010627:0.008501:0.010627:0.008501:0.008501:0.005313:0.007033:0.013287:0.008501:0.006896:0.015413:0.010627:0.005313:0.007439:0.005313:0.010627:0.005313:0.010095
x:@0.583897:0.347260:0.593950:0.347260:0.593950:0.334686:0.583897:0.334686:0.010052
by something, yielding a:@0.600850:0.346837:0.807221:0.346837:0.807221:0.333433:0.600850:0.333433:0.010099:0.010095:0.006896:0.007544:0.009564:0.015940:0.008501:0.007439:0.010627:0.005313:0.010627:0.009564:0.005313:0.007033:0.010095:0.005313:0.008501:0.005313:0.010627:0.005313:0.010627:0.009564:0.006896:0.009564
geo-:@0.814121:0.346837:0.853450:0.346837:0.853450:0.333433:0.814121:0.333433:0.010988:0.010027:0.010988:0.007325
metric:@0.218575:0.365077:0.280310:0.365077:0.280310:0.351673:0.218575:0.351673:0.018314:0.010027:0.008546:0.008976:0.006105:0.009767
sequence. The result is::@0.286686:0.365077:0.484131:0.365077:0.484131:0.351673:0.286686:0.351673:0.007544:0.008501:0.010095:0.010627:0.008501:0.010627:0.008501:0.008501:0.005313:0.008498:0.013815:0.010627:0.008501:0.006368:0.007439:0.008501:0.007544:0.010627:0.005313:0.007439:0.006388:0.005313:0.007544:0.005313
1.0:@0.218575:0.387609:0.248733:0.387609:0.248733:0.375035:0.218575:0.375035:0.010052:0.010052:0.010052
0.0:@0.278894:0.387609:0.309052:0.387609:0.309052:0.375035:0.278894:0.375035:0.010052:0.010052:0.010052
2.0:@0.218575:0.406214:0.248733:0.406214:0.248733:0.393639:0.218575:0.393639:0.010052:0.010052:0.010052
1.0:@0.278894:0.406214:0.309052:0.406214:0.309052:0.393639:0.278894:0.393639:0.010052:0.010052:0.010052
4.0:@0.218575:0.424818:0.248733:0.424818:0.248733:0.412244:0.218575:0.412244:0.010052:0.010052:0.010052
2.0:@0.278894:0.424818:0.309052:0.424818:0.309052:0.412244:0.278894:0.412244:0.010052:0.010052:0.010052
8.0:@0.218575:0.443423:0.248733:0.443423:0.248733:0.430849:0.218575:0.430849:0.010052:0.010052:0.010052
3.0:@0.278894:0.443423:0.309052:0.443423:0.309052:0.430849:0.278894:0.430849:0.010052:0.010052:0.010052
16.0:@0.218575:0.462027:0.258785:0.462027:0.258785:0.449453:0.218575:0.449453:0.010052:0.010052:0.010052:0.010052
4.0:@0.288947:0.462027:0.319104:0.462027:0.319104:0.449453:0.288947:0.449453:0.010052:0.010052:0.010052
32.0:@0.218575:0.480631:0.258785:0.480631:0.258785:0.468057:0.218575:0.468057:0.010052:0.010052:0.010052:0.010052
5.0:@0.288947:0.480631:0.319104:0.480631:0.319104:0.468057:0.288947:0.468057:0.010052:0.010052:0.010052
64.0:@0.218575:0.499236:0.258785:0.499236:0.258785:0.486662:0.218575:0.486662:0.010052:0.010052:0.010052:0.010052
6.0:@0.288947:0.499236:0.319104:0.499236:0.319104:0.486662:0.288947:0.486662:0.010052:0.010052:0.010052
Log tables may not be useful any more, but for computer scientists, knowing:@0.218575:0.520557:0.853455:0.520557:0.853455:0.507153:0.218575:0.507153:0.011951:0.009564:0.009564:0.005606:0.007439:0.009564:0.010627:0.005313:0.008501:0.007544:0.005626:0.015940:0.009037:0.010095:0.005606:0.010627:0.009564:0.007439:0.005626:0.011154:0.008501:0.005606:0.010627:0.007544:0.008501:0.005845:0.010627:0.005313:0.005626:0.009564:0.010080:0.010095:0.005626:0.015940:0.009564:0.007439:0.008501:0.005313:0.005763:0.010627:0.010627:0.007439:0.005606:0.005845:0.009564:0.007439:0.005626:0.008501:0.009564:0.015940:0.010627:0.010627:0.007439:0.008501:0.007439:0.005606:0.007544:0.008501:0.005313:0.008501:0.010099:0.007439:0.005313:0.007544:0.007439:0.007544:0.005313:0.005763:0.010095:0.010627:0.009037:0.013815:0.005313:0.010627:0.009564
the powers of two is! When you have an idle moment, you should memorize:@0.218575:0.538797:0.853459:0.538797:0.853459:0.525393:0.218575:0.525393:0.007439:0.010627:0.008501:0.006349:0.011154:0.009037:0.013287:0.008501:0.007439:0.007544:0.006329:0.009564:0.005845:0.006349:0.006911:0.013287:0.009564:0.006349:0.005313:0.007544:0.005313:0.008478:0.019652:0.010627:0.008501:0.010627:0.006349:0.009568:0.009564:0.010627:0.006349:0.010627:0.009017:0.009568:0.008501:0.006349:0.009564:0.010627:0.006349:0.005313:0.010627:0.005313:0.008501:0.006349:0.015940:0.009564:0.015921:0.008501:0.010099:0.007439:0.005313:0.006349:0.009568:0.009564:0.010627:0.006349:0.007544:0.010627:0.009564:0.010627:0.005313:0.010627:0.006349:0.015940:0.008501:0.015940:0.009564:0.007439:0.005313:0.008501:0.008501
the powers of two up to 65536 (that’s 2 ).:@0.218575:0.557037:0.576671:0.557037:0.576671:0.543633:0.218575:0.543633:0.007439:0.010627:0.008501:0.006368:0.011174:0.009017:0.013287:0.008501:0.007439:0.007544:0.006368:0.009564:0.005845:0.006388:0.006911:0.013268:0.009564:0.006388:0.010627:0.010627:0.006368:0.007439:0.009564:0.006368:0.009564:0.009564:0.009564:0.009564:0.009564:0.006388:0.007439:0.007439:0.010627:0.009564:0.007439:0.005313:0.007544:0.006368:0.009564:0.014649:0.007439:0.005313
16:@0.549268:0.550582:0.563106:0.550582:0.563106:0.541646:0.549268:0.541646:0.006919:0.006919
7.4:@0.218575:0.617521:0.259012:0.617521:0.259012:0.598219:0.218575:0.598219:0.015823:0.008791:0.015823
Two-dimensional tables:@0.290658:0.617521:0.616172:0.617521:0.616172:0.598219:0.290658:0.598219:0.022009:0.021983:0.015823:0.010549:0.017581:0.008791:0.026372:0.014439:0.017581:0.012484:0.008791:0.015823:0.017581:0.015384:0.008791:0.010549:0.012307:0.015384:0.017581:0.008791:0.014439:0.012484
A two-dimensional table consists of rows and columns that make it easy to:@0.218575:0.648050:0.853459:0.648050:0.853459:0.634645:0.218575:0.634645:0.014338:0.006974:0.006911:0.013287:0.009564:0.006376:0.010627:0.005313:0.015921:0.008501:0.010627:0.007544:0.005313:0.009564:0.010627:0.009564:0.005313:0.006974:0.007439:0.009564:0.010627:0.005313:0.008501:0.006974:0.008501:0.009564:0.010627:0.007544:0.005313:0.007544:0.007439:0.007544:0.006974:0.009564:0.005845:0.006974:0.007439:0.009037:0.013815:0.007544:0.006974:0.009564:0.010627:0.010627:0.006974:0.008501:0.009564:0.005313:0.010627:0.015940:0.010627:0.007544:0.006974:0.007439:0.010627:0.009564:0.007439:0.006974:0.015940:0.009564:0.009568:0.008501:0.006974:0.005313:0.007439:0.006974:0.008501:0.009564:0.007544:0.010095:0.006974:0.007439:0.009564
ﬁnd values at the intersections. A multiplication table is a good example.:@0.218575:0.666290:0.853455:0.666290:0.853455:0.652885:0.218575:0.652885:0.010627:0.010627:0.010627:0.007814:0.009021:0.009564:0.005313:0.010627:0.008501:0.007544:0.007814:0.009564:0.007439:0.007814:0.007439:0.010627:0.008501:0.007814:0.005313:0.010099:0.007439:0.008501:0.007439:0.007544:0.008501:0.008501:0.007419:0.005313:0.009564:0.010627:0.007544:0.005313:0.012815:0.014338:0.007814:0.015413:0.010627:0.005313:0.007439:0.005313:0.010627:0.005313:0.005313:0.008501:0.009545:0.007439:0.005313:0.009564:0.010627:0.007814:0.007439:0.009564:0.010627:0.005313:0.008501:0.007814:0.005313:0.007544:0.007814:0.009564:0.007814:0.009564:0.010092:0.010092:0.010627:0.007814:0.008501:0.010095:0.009564:0.015940:0.010627:0.005313:0.008501:0.005313
Let’s say you want to print a multiplication table for the values from 1 to 6.:@0.218575:0.684529:0.853459:0.684529:0.853459:0.671125:0.218575:0.671125:0.011951:0.008501:0.007439:0.005313:0.007544:0.006114:0.007544:0.009037:0.010095:0.006114:0.009568:0.009564:0.010627:0.006134:0.013268:0.009564:0.010099:0.007439:0.006114:0.007439:0.009564:0.006134:0.010627:0.007439:0.005313:0.010080:0.007439:0.006134:0.009564:0.006114:0.015413:0.010627:0.005313:0.007439:0.005313:0.010627:0.005313:0.005313:0.008501:0.009564:0.007439:0.005313:0.009564:0.010627:0.006114:0.007439:0.009564:0.010627:0.005313:0.008501:0.006114:0.005845:0.009564:0.007439:0.006134:0.007439:0.010607:0.008501:0.006134:0.009021:0.009564:0.005313:0.010627:0.008501:0.007544:0.006134:0.005845:0.007439:0.009564:0.015940:0.006114:0.009564:0.006114:0.007439:0.009564:0.006134:0.009564:0.005313
A good way to start is to write a simple loop that prints the multiples of 2,:@0.218575:0.711797:0.853459:0.711797:0.853459:0.698393:0.218575:0.698393:0.014338:0.006505:0.009564:0.010092:0.010092:0.010627:0.006505:0.013287:0.009037:0.010095:0.006505:0.007439:0.009564:0.006505:0.007544:0.007439:0.009564:0.007439:0.007439:0.006505:0.005313:0.007544:0.006505:0.007439:0.009564:0.006505:0.013815:0.007439:0.005313:0.007439:0.008501:0.006505:0.009564:0.006505:0.007544:0.005313:0.015940:0.010627:0.005313:0.008501:0.006505:0.005313:0.010092:0.009564:0.010627:0.006505:0.007439:0.010627:0.009564:0.007439:0.006505:0.010627:0.007439:0.005313:0.010099:0.007439:0.007544:0.006505:0.007439:0.010627:0.008501:0.006505:0.015413:0.010627:0.005313:0.007439:0.005313:0.010627:0.005313:0.008482:0.007544:0.006525:0.009564:0.005845:0.006505:0.009564:0.005313
all on one line.:@0.218575:0.730037:0.341843:0.730037:0.341843:0.716633:0.218575:0.716633:0.009564:0.005313:0.005313:0.006368:0.009564:0.010627:0.006388:0.009564:0.010627:0.008501:0.006368:0.005313:0.005313:0.010627:0.008501:0.005313
int:@0.258784:0.754096:0.288942:0.754096:0.288942:0.741522:0.258784:0.741522:0.010052:0.010052:0.010052
i = 1;:@0.299002:0.754096:0.359314:0.754096:0.359314:0.741522:0.299002:0.741522:0.010052:0.010041:0.010052:0.010060:0.010052:0.010052
while:@0.258784:0.772701:0.309047:0.772701:0.309047:0.760127:0.258784:0.760127:0.010052:0.010052:0.010052:0.010052:0.010052
(i <= 6) {:@0.319107:0.772701:0.419617:0.772701:0.419617:0.760127:0.319107:0.760127:0.010033:0.010052:0.010060:0.010052:0.010052:0.010060:0.010052:0.010052:0.010041:0.010052
System.out.print(2*i +:@0.278889:0.791306:0.500033:0.791306:0.500033:0.778732:0.278889:0.778732:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010041:0.010052
\:@0.510093:0.791306:0.520146:0.791306:0.520146:0.778732:0.510093:0.778732:0.010052
\:@0.550307:0.791306:0.560360:0.791306:0.560360:0.778732:0.550307:0.778732:0.010052
);:@0.560360:0.791306:0.580465:0.791306:0.580465:0.778732:0.560360:0.778732:0.010052:0.010052
i = i + 1;:@0.278889:0.809909:0.379406:0.809909:0.379406:0.797335:0.278889:0.797335:0.010052:0.010060:0.010052:0.010041:0.010052:0.010060:0.010052:0.010041:0.010052:0.010052
}:@0.258784:0.828514:0.268837:0.828514:0.268837:0.815940:0.258784:0.815940:0.010052
System.out.println(:@0.258784:0.847119:0.449782:0.847119:0.449782:0.834545:0.258784:0.834545:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
\\:@0.449782:0.847119:0.469887:0.847119:0.469887:0.834545:0.449782:0.834545:0.010052:0.010052
);:@0.469887:0.847119:0.489992:0.847119:0.489992:0.834545:0.469887:0.834545:0.010052:0.010052