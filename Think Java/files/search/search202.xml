184:@0.218575:0.131763:0.251540:0.131763:0.251540:0.118359:0.218575:0.118359:0.010988:0.010988:0.010988
Chapter 14. Objects of Arrays:@0.551533:0.131763:0.853451:0.131763:0.853451:0.118359:0.551533:0.118359:0.015872:0.012209:0.010683:0.012209:0.008546:0.010027:0.008976:0.007325:0.010988:0.010988:0.006105:0.017093:0.016505:0.013420:0.006714:0.010027:0.009767:0.008546:0.008669:0.007325:0.010988:0.006714:0.007325:0.016595:0.008976:0.008976:0.010078:0.011598:0.008669
14.3:@0.218575:0.173116:0.274835:0.173116:0.274835:0.153814:0.218575:0.153814:0.015823:0.015823:0.008791:0.015823
Sorting:@0.306481:0.173116:0.407312:0.173116:0.407312:0.153814:0.306481:0.153814:0.017581:0.015823:0.012926:0.012307:0.008791:0.017581:0.015823
Now that we have messed up the deck, we need a way to put it back in order.:@0.218575:0.203079:0.853451:0.203079:0.853451:0.189674:0.218575:0.189674:0.014338:0.009037:0.013815:0.005313:0.007439:0.010627:0.009564:0.007439:0.005313:0.013287:0.008501:0.005313:0.010627:0.009037:0.009568:0.008501:0.005313:0.015940:0.008501:0.007544:0.007544:0.008501:0.010627:0.005313:0.010627:0.010627:0.005313:0.007439:0.010627:0.008501:0.005313:0.010627:0.008501:0.007974:0.010095:0.005313:0.005528:0.013287:0.008501:0.005313:0.010627:0.008501:0.008501:0.010627:0.005313:0.009564:0.005313:0.013287:0.009017:0.010095:0.005333:0.007439:0.009564:0.005313:0.010627:0.010627:0.007439:0.005313:0.005313:0.007439:0.005313:0.010627:0.009564:0.007974:0.010095:0.005313:0.005313:0.010627:0.005313:0.009564:0.007439:0.010627:0.008501:0.007439:0.005313
There is an algorithm for sorting that is ironically similar to the algorithm:@0.218575:0.221319:0.853451:0.221319:0.853451:0.207914:0.218575:0.207914:0.013815:0.010627:0.008501:0.007439:0.008501:0.007169:0.005313:0.007544:0.007189:0.009564:0.010627:0.007169:0.009564:0.005313:0.009564:0.009564:0.007439:0.005313:0.007439:0.010627:0.015940:0.007169:0.005845:0.009564:0.007439:0.007189:0.007544:0.009564:0.007439:0.007439:0.005313:0.010627:0.009564:0.007169:0.007439:0.010627:0.009564:0.007439:0.007169:0.005313:0.007544:0.007189:0.005313:0.007439:0.009564:0.010627:0.005313:0.008501:0.009564:0.005313:0.005313:0.010095:0.007169:0.007544:0.005313:0.015940:0.005313:0.005313:0.009564:0.007439:0.007169:0.007439:0.009564:0.007189:0.007439:0.010627:0.008501:0.007169:0.009564:0.005313:0.009564:0.009564:0.007439:0.005313:0.007439:0.010627:0.015940
for shuﬄing. It’s called:@0.218575:0.239557:0.418368:0.239557:0.418368:0.226153:0.218575:0.226153:0.005845:0.009564:0.007439:0.007501:0.007544:0.010099:0.010627:0.015940:0.005313:0.010627:0.009564:0.005313:0.011897:0.006900:0.007439:0.005313:0.007544:0.007501:0.008501:0.009564:0.005313:0.005313:0.008501:0.010627
selection sort:@0.425874:0.239557:0.554133:0.239557:0.554133:0.226153:0.425874:0.226153:0.008669:0.010027:0.006105:0.010027:0.009767:0.008546:0.006105:0.010988:0.012209:0.008634:0.008669:0.010988:0.008976:0.008546
because it works by traversing the:@0.561627:0.239557:0.853444:0.239557:0.853444:0.226153:0.561627:0.226153:0.011154:0.008501:0.008501:0.009564:0.010627:0.007544:0.008501:0.007501:0.005313:0.007439:0.007521:0.013268:0.009564:0.007439:0.010095:0.007544:0.007521:0.010080:0.010095:0.007521:0.007439:0.007439:0.009017:0.009568:0.008501:0.007439:0.007544:0.005313:0.010627:0.009564:0.007501:0.007439:0.010627:0.008501
array repeatedly and selecting the lowest remaining card each time.:@0.218575:0.257797:0.784646:0.257797:0.784646:0.244393:0.218575:0.244393:0.009564:0.007439:0.007439:0.009037:0.010095:0.006368:0.007439:0.008501:0.011154:0.008501:0.009564:0.007439:0.008501:0.010627:0.005313:0.010095:0.006368:0.009564:0.010627:0.010627:0.006388:0.007544:0.008501:0.005313:0.008501:0.008501:0.007439:0.005313:0.010627:0.009564:0.006368:0.007439:0.010627:0.008501:0.006368:0.005313:0.009037:0.013287:0.008501:0.007544:0.007439:0.006368:0.007439:0.008501:0.015940:0.009564:0.005313:0.010627:0.005313:0.010627:0.009564:0.006368:0.008501:0.009564:0.007439:0.010627:0.006388:0.008501:0.009564:0.007955:0.010627:0.006388:0.007439:0.005313:0.015940:0.008501:0.005313
During the ﬁrst iteration we ﬁnd the lowest card and swap it with the card:@0.218575:0.284498:0.853447:0.284498:0.853447:0.271094:0.218575:0.271094:0.014608:0.010627:0.007439:0.005313:0.010627:0.009564:0.006700:0.007439:0.010627:0.008501:0.006720:0.010627:0.007439:0.007544:0.007439:0.006700:0.005313:0.007439:0.008501:0.007439:0.009564:0.007439:0.005313:0.009564:0.010627:0.006720:0.013268:0.008501:0.006720:0.010627:0.010627:0.010627:0.006700:0.007439:0.010627:0.008501:0.006720:0.005313:0.009037:0.013268:0.008501:0.007544:0.007439:0.006720:0.008501:0.009564:0.007439:0.010627:0.006700:0.009564:0.010627:0.010627:0.006720:0.007544:0.013268:0.009564:0.010627:0.006720:0.005313:0.007439:0.006700:0.013815:0.005313:0.007439:0.010627:0.006720:0.007439:0.010627:0.008501:0.006700:0.008501:0.009564:0.007439:0.010627
in the 0th position. During the th, we ﬁnd the lowest card to the right of:@0.218575:0.302738:0.837407:0.302738:0.837407:0.289333:0.218575:0.289333:0.005313:0.010627:0.005997:0.007439:0.010627:0.008501:0.005997:0.009564:0.007439:0.010627:0.005997:0.011154:0.009564:0.007544:0.005313:0.007439:0.005313:0.009564:0.010627:0.005313:0.008361:0.014608:0.010627:0.007439:0.005313:0.010627:0.009564:0.005997:0.007439:0.010627:0.008501:0.016051:0.007439:0.010627:0.005313:0.006075:0.013268:0.008501:0.005997:0.010627:0.010627:0.010627:0.005997:0.007439:0.010627:0.008501:0.005997:0.005313:0.009037:0.013287:0.008501:0.007544:0.007439:0.005997:0.008501:0.009564:0.007419:0.010627:0.005997:0.007439:0.009564:0.005997:0.007439:0.010627:0.008501:0.005997:0.007439:0.005313:0.009564:0.010099:0.007439:0.005997:0.009564:0.005845
i:@0.483639:0.303160:0.493691:0.303160:0.493691:0.290586:0.483639:0.290586:0.010052
i:@0.843397:0.303160:0.853450:0.303160:0.853450:0.290586:0.843397:0.290586:0.010052
and swap it with the th card.:@0.218575:0.320978:0.474730:0.320978:0.474730:0.307573:0.218575:0.307573:0.009564:0.010627:0.010627:0.006368:0.007544:0.013287:0.009564:0.010627:0.006368:0.005313:0.007439:0.006388:0.013815:0.005313:0.007439:0.010627:0.006368:0.007439:0.010627:0.008501:0.016430:0.007439:0.010627:0.006368:0.008501:0.009564:0.007439:0.010627:0.005313
i:@0.398799:0.321400:0.408851:0.321400:0.408851:0.308826:0.398799:0.308826:0.010052
Here is pseudocode for selection sort::@0.218575:0.347678:0.529285:0.347678:0.529285:0.334274:0.218575:0.334274:0.014338:0.008501:0.007439:0.008501:0.006368:0.005313:0.007544:0.006388:0.010627:0.007544:0.008501:0.010627:0.010627:0.010092:0.008501:0.010092:0.010627:0.008501:0.006368:0.005845:0.009564:0.007439:0.006388:0.007544:0.008501:0.005313:0.008501:0.008501:0.007439:0.005313:0.009564:0.010627:0.006368:0.007544:0.009564:0.007439:0.007439:0.005313
for:@0.258784:0.371737:0.288942:0.371737:0.288942:0.359163:0.258784:0.359163:0.010052:0.010052:0.010052
(:@0.299002:0.371737:0.309055:0.371737:0.309055:0.359163:0.299002:0.359163:0.010052
int:@0.309055:0.371737:0.339193:0.371737:0.339193:0.359163:0.309055:0.359163:0.010052:0.010033:0.010052
i = 0; i < deck.cards.length; i++) {:@0.349253:0.371737:0.711140:0.371737:0.711140:0.359163:0.349253:0.359163:0.010052:0.010060:0.010052:0.010041:0.010052:0.010052:0.010060:0.010052:0.010041:0.010052:0.010060:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010041:0.010052:0.010052:0.010052:0.010052:0.010060:0.010052
// find the lowest card at or to the right of i:@0.298993:0.390342:0.771450:0.390342:0.771450:0.377768:0.298993:0.377768:0.010052:0.010052:0.010060:0.010052:0.010052:0.010033:0.010052:0.010060:0.010052:0.010052:0.010052:0.010060:0.010052:0.010052:0.010052:0.010052:0.010033:0.010052:0.010060:0.010052:0.010052:0.010052:0.010052:0.010060:0.010052:0.010052:0.010041:0.010052:0.010052:0.010060:0.010052:0.010052:0.010041:0.010052:0.010052:0.010052:0.010060:0.010052:0.010052:0.010052:0.010052:0.010052:0.010041:0.010052:0.010052:0.010060:0.010052
// swap the ith card and the lowest card:@0.298993:0.408947:0.701079:0.408947:0.701079:0.396373:0.298993:0.396373:0.010052:0.010052:0.010060:0.010052:0.010052:0.010033:0.010052:0.010060:0.010052:0.010052:0.010052:0.010060:0.010052:0.010052:0.010052:0.010041:0.010052:0.010052:0.010052:0.010052:0.010060:0.010052:0.010052:0.010052:0.010041:0.010052:0.010052:0.010052:0.010060:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010041:0.010052:0.010052:0.010052:0.010052
}:@0.258784:0.427551:0.268837:0.427551:0.268837:0.414977:0.258784:0.414977:0.010052
Again, the pseudocode helps with the design of the:@0.218575:0.448798:0.659167:0.448798:0.659167:0.435394:0.218575:0.435394:0.014338:0.009564:0.009564:0.005313:0.010627:0.005313:0.008205:0.007439:0.010627:0.008501:0.007833:0.010627:0.007544:0.008501:0.010627:0.010627:0.010092:0.008501:0.010092:0.010627:0.008501:0.007833:0.010627:0.008501:0.005313:0.010627:0.007544:0.007833:0.013815:0.005313:0.007439:0.010627:0.007833:0.007439:0.010627:0.008501:0.007833:0.010627:0.008501:0.007544:0.005313:0.009564:0.010627:0.007833:0.009564:0.005845:0.007833:0.007439:0.010627:0.008501
helper methods:@0.666995:0.448798:0.817728:0.448798:0.817728:0.435394:0.666995:0.435394:0.012209:0.010027:0.006105:0.012815:0.010027:0.008976:0.009005:0.018314:0.010027:0.008546:0.012209:0.011594:0.012209:0.008669
. In:@0.817734:0.448798:0.853447:0.448798:0.853447:0.435394:0.817734:0.435394:0.005313:0.012873:0.006900:0.010627
this case we can use:@0.218575:0.467037:0.388132:0.467037:0.388132:0.453633:0.218575:0.453633:0.007439:0.010627:0.005313:0.007544:0.006837:0.008501:0.009564:0.007544:0.008501:0.006857:0.013287:0.008501:0.006837:0.008501:0.009564:0.010627:0.006837:0.010627:0.007544:0.008501
swapCards:@0.394987:0.467460:0.485460:0.467460:0.485460:0.454886:0.394987:0.454886:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
again, so we only need one new one, called:@0.492302:0.467037:0.853455:0.467037:0.853455:0.453633:0.492302:0.453633:0.009564:0.009564:0.009564:0.005313:0.010627:0.005313:0.006954:0.007544:0.009564:0.006857:0.013287:0.008501:0.006837:0.009564:0.010627:0.005313:0.010095:0.006837:0.010627:0.008501:0.008501:0.010627:0.006857:0.009564:0.010627:0.008501:0.006837:0.010627:0.008501:0.013815:0.006837:0.009564:0.010627:0.008501:0.005313:0.006974:0.008501:0.009564:0.005313:0.005313:0.008501:0.010627
indexLowestCard:@0.218575:0.485700:0.369363:0.485700:0.369363:0.473126:0.218575:0.473126:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
, that takes an array of cards and an index where it should:@0.369358:0.485277:0.853442:0.485277:0.853442:0.471873:0.369358:0.471873:0.005313:0.005665:0.007439:0.010627:0.009564:0.007439:0.005509:0.007439:0.009564:0.009568:0.008501:0.007544:0.005489:0.009564:0.010627:0.005489:0.009564:0.007439:0.007439:0.009037:0.010095:0.005509:0.009564:0.005845:0.005489:0.008501:0.009564:0.007439:0.010627:0.007544:0.005509:0.009545:0.010627:0.010627:0.005509:0.009564:0.010627:0.005489:0.005313:0.010627:0.010627:0.008501:0.010095:0.005509:0.013815:0.010627:0.008501:0.007439:0.008501:0.005489:0.005313:0.007439:0.005509:0.007544:0.010627:0.009545:0.010627:0.005313:0.010627
start looking.:@0.218575:0.503517:0.330251:0.503517:0.330251:0.490113:0.218575:0.490113:0.007544:0.007439:0.009564:0.007439:0.007439:0.006368:0.005313:0.010111:0.009545:0.010095:0.005313:0.010627:0.009564:0.005313
14.4:@0.218575:0.563207:0.274835:0.563207:0.274835:0.543905:0.218575:0.543905:0.015823:0.015823:0.008791:0.015823
Subdecks:@0.306481:0.563207:0.434493:0.563207:0.434493:0.543905:0.306481:0.543905:0.017581:0.017581:0.018453:0.017581:0.014439:0.013193:0.016701:0.012484
How should we represent a hand or some other subset of a full deck? One:@0.218575:0.593168:0.853443:0.593168:0.853443:0.579764:0.218575:0.579764:0.014338:0.009037:0.013815:0.007404:0.007544:0.010627:0.009564:0.010627:0.005313:0.010627:0.007404:0.013268:0.008501:0.007404:0.007439:0.008501:0.010627:0.007439:0.008501:0.007544:0.008501:0.010099:0.007439:0.007404:0.009564:0.007404:0.010627:0.009564:0.010627:0.010627:0.007404:0.009564:0.007439:0.007404:0.007544:0.009564:0.015940:0.008501:0.007384:0.009564:0.007439:0.010627:0.008501:0.007439:0.007404:0.007544:0.010627:0.010627:0.007544:0.008501:0.007439:0.007404:0.009564:0.005845:0.007404:0.009564:0.007404:0.005845:0.010627:0.005313:0.005313:0.007404:0.010627:0.008501:0.007974:0.010095:0.009033:0.011565:0.014878:0.010627:0.008501
possibility is to create a new class called:@0.218575:0.611408:0.568796:0.611408:0.568796:0.598004:0.218575:0.598004:0.011154:0.009564:0.007544:0.007544:0.005313:0.010627:0.005313:0.005313:0.005313:0.006911:0.010095:0.008126:0.005313:0.007544:0.008146:0.007439:0.009564:0.008126:0.008501:0.007439:0.008501:0.009564:0.007439:0.008501:0.008126:0.009564:0.008146:0.010627:0.008501:0.013815:0.008126:0.008501:0.005313:0.009564:0.007544:0.007544:0.008146:0.008501:0.009564:0.005313:0.005313:0.008482:0.010627
Hand:@0.576940:0.611831:0.617150:0.611831:0.617150:0.599257:0.576940:0.599257:0.010052:0.010052:0.010052:0.010052
, which might extend:@0.617149:0.611408:0.799794:0.611408:0.799794:0.598004:0.617149:0.598004:0.005313:0.008576:0.013815:0.010627:0.005313:0.007974:0.010627:0.008126:0.015940:0.005313:0.009564:0.010099:0.007439:0.008126:0.008501:0.010095:0.007439:0.008501:0.010627:0.010627
Deck:@0.807928:0.611831:0.848138:0.611831:0.848138:0.599257:0.807928:0.599257:0.010052:0.010052:0.010052:0.010052
.:@0.848137:0.611408:0.853451:0.611408:0.853451:0.598004:0.848137:0.598004:0.005313
Another possibility, the one I will demonstrate, is to represent a hand with:@0.218575:0.629648:0.853459:0.629648:0.853459:0.616244:0.218575:0.616244:0.014338:0.010627:0.009564:0.007439:0.010627:0.008501:0.007439:0.006915:0.011174:0.009564:0.007544:0.007544:0.005313:0.010627:0.005313:0.005313:0.005313:0.006892:0.008513:0.005313:0.007052:0.007439:0.010627:0.008501:0.006935:0.009564:0.010627:0.008501:0.006915:0.006900:0.006935:0.013815:0.005313:0.005313:0.005313:0.006915:0.010627:0.008501:0.015940:0.009564:0.010627:0.007544:0.007439:0.007439:0.009564:0.007439:0.008501:0.005313:0.007072:0.005294:0.007544:0.006935:0.007439:0.009564:0.006935:0.007439:0.008482:0.010627:0.007439:0.008501:0.007544:0.008501:0.010099:0.007439:0.006935:0.009564:0.006915:0.010627:0.009564:0.010627:0.010627:0.006935:0.013815:0.005313:0.007439:0.010627
a:@0.218575:0.647888:0.228139:0.647888:0.228139:0.634484:0.218575:0.634484:0.009564
Deck:@0.234515:0.648311:0.274725:0.648311:0.274725:0.635737:0.234515:0.635737:0.010052:0.010052:0.010052:0.010052
object with fewer than 52 cards.:@0.281100:0.647888:0.551654:0.647888:0.551654:0.634484:0.281100:0.634484:0.009564:0.011682:0.005845:0.008501:0.008501:0.007439:0.006388:0.013815:0.005313:0.007439:0.010627:0.006368:0.005845:0.008501:0.013287:0.008501:0.007439:0.006368:0.007439:0.010627:0.009564:0.010627:0.006368:0.009564:0.009564:0.006388:0.008501:0.009564:0.007439:0.010627:0.007544:0.005313
We might want a method,:@0.218575:0.674589:0.433034:0.674589:0.433034:0.661184:0.218575:0.661184:0.018050:0.008501:0.005274:0.015940:0.005313:0.009564:0.010099:0.007439:0.005255:0.013287:0.009564:0.010099:0.007439:0.005255:0.009564:0.005274:0.015940:0.008501:0.007439:0.010627:0.010092:0.010627:0.005313
subdeck:@0.438520:0.675011:0.508887:0.675011:0.508887:0.662437:0.438520:0.662437:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
, that takes a Deck and a range of indices,:@0.508886:0.674589:0.853442:0.674589:0.853442:0.661184:0.508886:0.661184:0.005313:0.005489:0.007439:0.010627:0.009564:0.007439:0.005255:0.007439:0.009564:0.009568:0.008501:0.007544:0.005274:0.009564:0.005255:0.014608:0.008501:0.007974:0.010095:0.005274:0.009545:0.010627:0.010627:0.005274:0.009564:0.005274:0.007439:0.009564:0.010607:0.009564:0.008501:0.005274:0.009564:0.005845:0.005274:0.005313:0.010607:0.010627:0.005313:0.008501:0.008501:0.007544:0.005313
and that returns a new Deck that contains the speciﬁed subset of the cards::@0.218575:0.692829:0.853451:0.692829:0.853451:0.679424:0.218575:0.679424:0.009564:0.010627:0.010627:0.006271:0.007419:0.010627:0.009564:0.007439:0.006271:0.007439:0.008501:0.007439:0.010627:0.007439:0.010627:0.007544:0.006251:0.009564:0.006271:0.010627:0.008501:0.013815:0.006251:0.014608:0.008501:0.007974:0.010095:0.006271:0.007439:0.010627:0.009564:0.007439:0.006251:0.008501:0.009564:0.010099:0.007439:0.009564:0.005313:0.010627:0.007544:0.006251:0.007439:0.010627:0.008501:0.006271:0.007544:0.011154:0.008501:0.008501:0.005313:0.010627:0.008501:0.010627:0.006271:0.007544:0.010627:0.010607:0.007564:0.008482:0.007439:0.006271:0.009564:0.005845:0.006271:0.007439:0.010607:0.008501:0.006271:0.008501:0.009564:0.007439:0.010627:0.007544:0.005313
public static:@0.218575:0.716886:0.349246:0.716886:0.349246:0.704312:0.218575:0.704312:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010060:0.010033:0.010052:0.010052:0.010052:0.010052:0.010052
Deck subdeck(Deck deck,:@0.359307:0.716886:0.590511:0.716886:0.590511:0.704312:0.359307:0.704312:0.010052:0.010052:0.010052:0.010052:0.010060:0.010033:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010060:0.010052:0.010052:0.010052:0.010052:0.010052
int:@0.600552:0.716886:0.630709:0.716886:0.630709:0.704312:0.600552:0.704312:0.010052:0.010052:0.010052
low,:@0.640770:0.716886:0.680980:0.716886:0.680980:0.704312:0.640770:0.704312:0.010052:0.010052:0.010052:0.010052
int:@0.691020:0.716886:0.721178:0.716886:0.721178:0.704312:0.691020:0.704312:0.010052:0.010052:0.010052
high) {:@0.731238:0.716886:0.801594:0.716886:0.801594:0.704312:0.731238:0.704312:0.010052:0.010052:0.010052:0.010052:0.010052:0.010041:0.010052
Deck sub =:@0.258784:0.735491:0.359306:0.735491:0.359306:0.722917:0.258784:0.722917:0.010052:0.010052:0.010052:0.010052:0.010060:0.010052:0.010033:0.010052:0.010060:0.010052
new:@0.369366:0.735491:0.399524:0.735491:0.399524:0.722917:0.369366:0.722917:0.010052:0.010052:0.010052
Deck(high-low+1);:@0.409564:0.735491:0.580457:0.735491:0.580457:0.722917:0.409564:0.722917:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
for:@0.258784:0.772701:0.288942:0.772701:0.288942:0.760127:0.258784:0.760127:0.010052:0.010052:0.010052
(:@0.299002:0.772701:0.309055:0.772701:0.309055:0.760127:0.299002:0.760127:0.010052
int:@0.309055:0.772701:0.339193:0.772701:0.339193:0.760127:0.309055:0.760127:0.010052:0.010033:0.010052
i = 0; i<sub.cards.length; i++) {:@0.349253:0.772701:0.680986:0.772701:0.680986:0.760127:0.349253:0.760127:0.010052:0.010060:0.010052:0.010041:0.010052:0.010052:0.010060:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010033:0.010052:0.010052:0.010052:0.010052:0.010060:0.010052:0.010052:0.010052:0.010052:0.010060:0.010052
sub.cards[i] = deck.cards[low+i];:@0.298993:0.791306:0.630723:0.791306:0.630723:0.778732:0.298993:0.778732:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010041:0.010052:0.010060:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
}:@0.258784:0.809909:0.268837:0.809909:0.268837:0.797335:0.258784:0.797335:0.010052
return:@0.258784:0.828514:0.319100:0.828514:0.319100:0.815940:0.258784:0.815940:0.010052:0.010052:0.010052:0.010052:0.010052:0.010052
sub;:@0.329140:0.828514:0.369350:0.828514:0.369350:0.815940:0.329140:0.815940:0.010052:0.010052:0.010052:0.010052
}:@0.218575:0.847119:0.228628:0.847119:0.228628:0.834545:0.218575:0.834545:0.010052